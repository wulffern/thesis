%!PS-Adobe-3.0 EPSF-3.0
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 1.20 
%%For: 
%%Title: 
%%CreationDate: Tuesday, October 14, 2008 10:26:18 PM CEST
%%LanguageLevel: 3
%%BoundingBox: 28 191 571 597
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
476 355 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.0 0.0 0.0 RG
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
1.0 w
2 J
0 j
10.0 M
[ ] 0.0 d
1.0 1.0 1.0 RG
0.0 0.0 476.0 355.0 rf
0.0 0.0 0.0 RG
2.0 w
0 J
1 j
0.0 0.0 translate
0.0 0.0 translate
q
5.0 5.0 translate
0 0 466 345 rc
1.0 w
2 J
0 j
q
0.647059 0.647059 0.647059 RG
1 295 305 OPL
295 8
1 364 305 OPL
364 8
1 404 305 OPL
404 8
1 433 305 OPL
433 8
1 455 305 OPL
455 8
0.913725 0.913725 0.913725 RG
1 227 305 OPL
227 8
1 336 305 OPL
336 8
1 386 305 OPL
386 8
1 420 305 OPL
420 8
1 445 305 OPL
445 8
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
1 67 305 OPL
455 305
1 67 263 OPL
455 263
1 67 220 OPL
455 220
1 67 178 OPL
455 178
1 67 135 OPL
455 135
1 67 93 OPL
455 93
1 67 50 OPL
455 50
1 67 8 OPL
455 8
0.913725 0.913725 0.913725 RG
1 67 284 OPL
455 284
1 67 241 OPL
455 241
1 67 199 OPL
455 199
1 67 157 OPL
455 157
1 67 114 OPL
455 114
1 67 72 OPL
455 72
1 67 29 OPL
455 29
0.647059 0.647059 0.647059 RG
Q
2.0 w
0 J
1 j
q
q
[ 15.0 5.0 ] 0.0 d
65.0 5.019737 392.996826 301.980255 rc
51 109 308 OPL
125 294
139 281
159 262
176 247
192 232
206 219
228 198
247 181
262 168
275 156
287 145
297 136
307 127
315 120
323 112
331 106
338 100
344 95
350 89
355 85
361 80
366 77
371 73
375 69
380 66
384 63
388 60
392 57
396 54
399 52
403 49
406 47
409 45
413 43
416 42
419 40
422 39
424 37
427 36
430 35
432 34
435 33
437 32
440 31
442 31
444 30
447 30
449 29
451 29
453 29
455 29
newpath
0.0 0.0 m
0.0 345.0 l
466.0 345.0 l
466.0 0.0 l
h
W
Q
q
[ 2.0 5.0 ] 0.0 d
65.0 5.019737 392.996826 301.980255 rc
1 315 496 OPL
320 -345
newpath
0.0 0.0 m
0.0 345.0 l
466.0 345.0 l
466.0 0.0 l
h
W
Q
q
65.0 5.019737 392.996826 301.980255 rc
98 67 191 OPL
109 184
139 179
159 177
176 176
184 175
192 175
199 175
206 176
218 178
228 181
238 188
247 200
249 206
251 213
252 219
253 228
254 244
255 260
255 242
255 233
256 227
256 222
257 215
258 210
260 203
262 198
268 185
275 178
278 176
281 174
284 173
287 172
288 172
289 172
291 172
292 172
293 172
295 173
296 174
297 174
300 178
302 183
304 187
305 194
305 198
306 205
306 210
307 218
307 230
307 296
307 233
308 220
308 212
308 206
309 198
309 193
310 184
311 178
313 169
315 162
319 151
323 142
331 129
338 119
344 111
350 103
355 98
361 91
366 86
371 82
375 77
380 73
384 70
388 66
392 63
396 60
399 57
403 55
406 52
409 50
413 48
416 46
419 44
422 43
424 41
427 40
430 38
432 37
435 36
437 35
440 35
442 34
444 33
447 33
449 33
451 32
453 32
455 32
newpath
0.0 0.0 m
0.0 345.0 l
466.0 345.0 l
466.0 0.0 l
h
W
Q
Q
q
1.0 w
2 J
0 j
q
1 445 305 OPL
445 307
1 420 305 OPL
420 307
1 386 305 OPL
386 307
1 336 305 OPL
336 307
1 227 305 OPL
227 307
1 67 305 OPL
455 305
1 67 8 OPL
455 8
Q
0.0 0.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
182 328 157 17 rc
186.0 342.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -258 2000 891 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -258 2000 891
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 555.17578125 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 1000.0 def
		/ampersand 833.0078125 def
		/quoteright 277.83203125 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 569.82421875 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 333.0078125 def
		/semicolon 333.0078125 def
		/less 569.82421875 def
		/equal 569.82421875 def
		/greater 569.82421875 def
		/question 500.0 def
		/at 930.17578125 def
		/A 722.16796875 def
		/B 666.9921875 def
		/C 722.16796875 def
		/D 722.16796875 def
		/E 666.9921875 def
		/F 610.83984375 def
		/G 777.83203125 def
		/H 777.83203125 def
		/I 389.16015625 def
		/J 500.0 def
		/K 777.83203125 def
		/L 666.9921875 def
		/M 943.84765625 def
		/N 722.16796875 def
		/O 777.83203125 def
		/P 610.83984375 def
		/Q 777.83203125 def
		/R 722.16796875 def
		/S 556.15234375 def
		/T 666.9921875 def
		/U 722.16796875 def
		/V 722.16796875 def
		/W 1000.0 def
		/X 722.16796875 def
		/Y 722.16796875 def
		/Z 666.9921875 def
		/bracketleft 333.0078125 def
		/backslash 277.83203125 def
		/bracketright 333.0078125 def
		/asciicircum 581.0546875 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 500.0 def
		/b 556.15234375 def
		/c 443.84765625 def
		/d 556.15234375 def
		/e 443.84765625 def
		/f 333.0078125 def
		/g 500.0 def
		/h 556.15234375 def
		/i 277.83203125 def
		/j 333.0078125 def
		/k 556.15234375 def
		/l 277.83203125 def
		/m 833.0078125 def
		/n 556.15234375 def
		/o 500.0 def
		/p 556.15234375 def
		/q 556.15234375 def
		/r 443.84765625 def
		/s 389.16015625 def
		/t 333.0078125 def
		/u 556.15234375 def
		/v 500.0 def
		/w 722.16796875 def
		/x 500.0 def
		/y 500.0 def
		/z 443.84765625 def
		/braceleft 394.04296875 def
		/bar 220.21484375 def
		/braceright 394.04296875 def
		/asciitilde 520.01953125 def
		/exclamdown 333.0078125 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 277.83203125 def
		/quotedblleft 500.0 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 556.15234375 def
		/fl 556.15234375 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 333.49609375 def
		/paragraph 540.0390625 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 500.0 def
		/quotedblright 500.0 def
		/guillemotright 500.0 def
		/ellipsis 1000.0 def
		/perthousand 1000.0 def
		/questiondown 500.0 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 496.09375 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 1000.0 def
		/ordfeminine 299.8046875 def
		/Lslash 666.9921875 def
		/Oslash 777.83203125 def
		/OE 1000.0 def
		/ordmasculine 330.078125 def
		/ae 722.16796875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 722.16796875 def
		/germandbls 556.15234375 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
177 215 moveto
156 215 lineto
153 252 146 297 133 350  curveto
108 456 lineto
93 520 85 566 85 593  curveto
85 618 92 638 107 654  curveto
122 669 142 677 166 677  curveto
189 677 209 669 224 654  curveto
240 638 248 618 248 595  curveto
248 570 239 524 223 456  curveto
197 350 lineto
188 312 181 267 177 215  curveto
closepath
167 145 moveto
189 145 207 137 223 122  curveto
238 106 246 88 246 65  curveto
246 44 238 25 223 10  curveto
207 -5 189 -13 167 -13  curveto
145 -13 127 -5 111 10  curveto
96 25 88 44 88 65  curveto
88 87 96 106 111 122  curveto
126 137 145 145 167 145  curveto
closepath
fill
		} def

	/quotedbl
		{
170 352 moveto
146 352 lineto
95 540 lineto
89 564 85 585 85 604  curveto
85 624 93 641 107 656  curveto
121 670 138 677 158 677  curveto
180 677 198 669 211 655  curveto
224 640 230 624 230 606  curveto
230 592 226 569 218 539  curveto
closepath
406 352 moveto
381 352 lineto
332 539 lineto
324 568 320 590 320 605  curveto
320 624 328 641 342 655  curveto
357 670 374 677 394 677  curveto
417 677 435 669 447 654  curveto
459 638 465 623 465 607  curveto
465 596 461 573 453 539  curveto
closepath
fill
		} def

	/numbersign
		{
43 -13 moveto
85 193 lineto
19 193 lineto
19 258 lineto
98 258 lineto
127 400 lineto
19 400 lineto
19 464 lineto
140 464 lineto
182 675 lineto
247 675 lineto
204 464 lineto
348 464 lineto
390 675 lineto
454 675 lineto
411 464 lineto
479 464 lineto
479 400 lineto
399 400 lineto
370 258 lineto
479 258 lineto
479 193 lineto
357 193 lineto
315 -13 lineto
250 -13 lineto
292 193 lineto
150 193 lineto
106 -13 lineto
closepath
163 258 moveto
307 258 lineto
335 400 lineto
191 400 lineto
closepath
fill
		} def

	/dollar
		{
276 407 moveto
354 358 403 321 425 296  curveto
453 262 468 222 468 176  curveto
468 126 451 84 417 49  curveto
383 14 336 -5 276 -10  curveto
276 -67 lineto
233 -67 lineto
233 -13 lineto
199 -13 168 -10 142 -5  curveto
115 0 84 9 50 22  curveto
50 180 lineto
70 180 lineto
77 144 87 115 101 93  curveto
115 71 133 54 154 43  curveto
175 31 202 25 233 22  curveto
233 263 lineto
155 312 103 352 77 381  curveto
51 411 38 445 38 484  curveto
38 526 54 564 87 596  curveto
119 628 168 649 233 657  curveto
233 680 lineto
276 680 lineto
276 657 lineto
331 653 387 636 443 605  curveto
443 464 lineto
424 464 lineto
414 496 403 522 390 543  curveto
377 563 360 581 339 596  curveto
323 606 302 615 276 623  curveto
closepath
233 624 moveto
210 622 191 616 176 604  curveto
153 587 142 566 142 542  curveto
142 527 147 512 158 497  curveto
169 481 194 460 233 434  curveto
closepath
276 22 moveto
304 28 324 40 337 55  curveto
350 71 357 91 357 115  curveto
357 135 351 154 340 172  curveto
328 190 307 211 276 233  curveto
closepath
fill
		} def

	/percent
		{
768 677 moveto
297 -27 lineto
232 -27 lineto
702 677 lineto
closepath
233 677 moveto
279 677 318 660 350 628  curveto
382 595 397 553 397 501  curveto
397 448 381 405 350 372  curveto
318 339 278 322 231 322  curveto
184 322 146 338 115 370  curveto
84 402 69 444 69 496  curveto
69 550 85 593 116 627  curveto
148 660 187 677 233 677  curveto
closepath
233 651 moveto
226 651 220 649 215 645  curveto
207 637 201 624 197 606  curveto
193 587 191 549 191 492  curveto
191 446 194 410 199 385  curveto
202 371 208 360 216 353  curveto
221 349 226 347 233 347  curveto
240 347 246 349 250 353  curveto
257 359 263 370 267 386  curveto
272 410 275 445 275 490  curveto
275 544 272 584 267 608  curveto
263 625 258 638 250 645  curveto
246 649 240 651 233 651  curveto
closepath
764 327 moveto
811 327 851 311 883 279  curveto
914 246 930 204 930 151  curveto
930 98 914 55 882 22  curveto
850 -10 811 -27 765 -27  curveto
720 -27 681 -10 650 22  curveto
618 55 602 98 602 150  curveto
602 202 618 245 648 278  curveto
679 311 718 327 764 327  curveto
closepath
766 302 moveto
759 302 754 300 749 296  curveto
741 289 735 276 731 259  curveto
727 241 725 207 725 157  curveto
725 103 727 65 732 41  curveto
736 25 742 13 750 5  curveto
754 1 760 0 767 0  curveto
773 0 778 1 782 5  curveto
790 12 796 25 800 41  curveto
805 65 808 101 808 149  curveto
808 200 805 237 800 261  curveto
796 278 791 290 783 296  curveto
779 300 773 302 766 302  curveto
closepath
fill
		} def

	/ampersand
		{
569 395 moveto
772 395 lineto
772 376 lineto
749 373 731 366 718 356  curveto
705 346 688 322 667 285  curveto
647 247 617 205 580 159  curveto
613 129 640 108 661 97  curveto
675 89 690 84 704 84  curveto
728 84 750 100 769 132  curveto
789 121 lineto
762 69 734 31 704 9  curveto
680 -6 654 -15 625 -15  curveto
599 -15 575 -9 552 1  curveto
529 12 501 32 468 62  curveto
428 35 389 15 354 3  curveto
318 -9 280 -15 242 -15  curveto
180 -15 131 1 94 35  curveto
58 68 40 108 40 153  curveto
40 202 57 244 92 280  curveto
127 316 177 348 244 374  curveto
235 395 229 416 225 436  curveto
220 456 218 476 218 495  curveto
218 547 237 590 273 625  curveto
310 659 357 677 414 677  curveto
459 677 496 665 523 642  curveto
550 619 563 593 563 562  curveto
563 525 549 494 522 468  curveto
494 441 451 417 391 395  curveto
428 331 482 261 553 186  curveto
601 240 625 286 625 324  curveto
625 338 620 350 610 359  curveto
601 369 587 375 569 376  curveto
closepath
375 425 moveto
409 437 432 451 443 466  curveto
455 480 461 498 461 518  curveto
461 555 451 585 432 610  curveto
419 627 404 635 385 635  curveto
370 635 357 629 346 617  curveto
335 605 330 589 330 568  curveto
330 552 332 535 337 517  curveto
343 499 355 468 375 425  curveto
closepath
257 343 moveto
231 332 213 320 202 308  curveto
187 289 179 269 179 247  curveto
179 216 188 186 206 155  curveto
224 125 245 102 270 85  curveto
295 68 320 60 345 60  curveto
358 60 371 63 387 68  curveto
402 73 419 82 437 92  curveto
359 173 299 256 257 343  curveto
closepath
fill
		} def

	/quoteright
		{
152 352 moveto
129 352 lineto
78 539 lineto
71 562 68 583 68 603  curveto
68 624 75 641 89 656  curveto
102 670 119 677 140 677  curveto
163 677 181 669 193 654  curveto
206 639 212 623 212 605  curveto
212 591 208 569 201 539  curveto
closepath
fill
		} def

	/parenleft
		{
321 677 moveto
321 654 lineto
287 632 262 611 246 589  curveto
224 560 207 522 194 477  curveto
179 420 171 340 171 238  curveto
171 141 178 67 192 13  curveto
206 -39 226 -82 250 -115  curveto
267 -138 291 -158 321 -175  curveto
321 -200 lineto
242 -173 176 -120 121 -38  curveto
67 42 40 135 40 241  curveto
40 345 67 437 121 517  curveto
175 598 242 651 321 677  curveto
closepath
fill
		} def

	/parenright
		{
12 -200 moveto
12 -177 lineto
46 -155 70 -133 86 -112  curveto
108 -83 125 -45 138 0  curveto
154 57 162 137 162 239  curveto
162 335 155 410 140 463  curveto
126 516 107 559 83 592  curveto
66 615 42 635 12 652  curveto
12 677 lineto
90 650 157 597 211 515  curveto
266 434 293 341 293 235  curveto
293 131 266 39 211 -40  curveto
157 -120 90 -173 12 -200  curveto
closepath
fill
		} def

	/asterisk
		{
240 484 moveto
239 503 237 517 235 527  curveto
232 537 225 552 215 572  curveto
204 593 199 609 199 620  curveto
199 635 204 648 215 660  curveto
225 671 237 677 250 677  curveto
263 677 276 671 286 661  curveto
296 650 301 637 301 620  curveto
301 606 296 590 286 571  curveto
276 552 270 538 267 528  curveto
264 518 262 503 260 484  curveto
278 491 291 498 299 503  curveto
307 509 319 520 334 536  curveto
354 558 374 569 393 569  curveto
407 569 419 564 429 555  curveto
439 545 444 534 444 521  curveto
444 507 438 495 426 484  curveto
414 473 398 468 379 468  curveto
372 468 361 468 344 469  curveto
336 470 328 470 319 470  curveto
307 470 289 469 264 468  curveto
278 452 289 441 297 435  curveto
305 429 318 421 337 411  curveto
357 401 370 391 379 380  curveto
385 372 388 361 388 349  curveto
388 335 383 323 374 313  curveto
365 304 353 299 340 299  curveto
326 299 313 305 302 316  curveto
291 328 283 348 279 378  curveto
276 397 273 411 270 420  curveto
267 429 261 442 250 458  curveto
240 441 233 428 229 418  curveto
225 409 222 395 220 378  curveto
215 348 208 328 197 317  curveto
187 306 174 300 160 300  curveto
146 300 135 305 125 314  curveto
116 323 111 334 111 347  curveto
111 360 114 371 122 382  curveto
129 392 143 402 162 413  curveto
182 424 196 432 203 438  curveto
211 444 222 453 236 468  curveto
184 470 lineto
174 470 166 470 158 469  curveto
138 468 125 467 118 467  curveto
100 467 84 472 73 483  curveto
61 493 55 506 55 520  curveto
55 533 60 545 70 554  curveto
79 564 91 569 106 569  curveto
126 569 146 559 165 540  curveto
184 520 196 508 202 504  curveto
209 498 222 492 240 484  curveto
closepath
fill
		} def

	/plus
		{
19 363 moveto
254 363 lineto
254 597 lineto
318 597 lineto
318 363 lineto
553 363 lineto
553 298 lineto
318 298 lineto
318 66 lineto
254 66 lineto
254 298 lineto
19 298 lineto
closepath
fill
		} def

	/comma
		{
49 -175 moveto
49 -153 lineto
87 -137 114 -116 132 -90  curveto
149 -64 157 -38 157 -11  curveto
157 -5 156 -1 154 1  curveto
152 4 149 5 147 5  curveto
145 5 142 4 138 1  curveto
129 -3 117 -6 103 -6  curveto
84 -6 67 1 53 16  curveto
39 31 32 48 32 68  curveto
32 90 40 109 56 125  curveto
72 141 92 149 115 149  curveto
143 149 167 139 187 117  curveto
207 95 217 66 217 28  curveto
217 -18 203 -59 175 -95  curveto
146 -131 105 -158 49 -175  curveto
closepath
fill
		} def

	/hyphen
		{
309 179 moveto
24 179 lineto
24 280 lineto
309 280 lineto
closepath
fill
		} def

	/period
		{
125 150 moveto
147 150 167 142 182 126  curveto
198 110 206 91 206 68  curveto
206 46 198 27 182 11  curveto
166 -4 147 -12 125 -12  curveto
102 -12 83 -4 67 11  curveto
51 27 43 46 43 68  curveto
43 91 51 110 67 126  curveto
83 142 102 150 125 150  curveto
closepath
fill
		} def

	/slash
		{
280 677 moveto
63 -15 lineto
0 -15 lineto
219 677 lineto
closepath
fill
		} def

	/zero
		{
463 331 moveto
463 264 454 203 435 145  curveto
424 110 409 82 390 59  curveto
372 37 350 19 327 6  curveto
303 -7 277 -13 249 -13  curveto
217 -13 188 -5 163 10  curveto
137 27 114 50 94 80  curveto
80 102 67 132 57 168  curveto
43 218 36 270 36 323  curveto
36 395 46 461 66 521  curveto
83 571 108 609 142 635  curveto
175 662 211 675 249 675  curveto
287 675 323 662 357 636  curveto
390 610 415 575 430 530  curveto
452 469 463 403 463 331  curveto
closepath
312 332 moveto
312 447 312 515 311 534  curveto
307 579 299 610 287 626  curveto
279 636 266 642 248 642  curveto
234 642 222 638 214 630  curveto
202 618 194 598 190 570  curveto
186 541 184 440 184 268  curveto
184 174 187 111 193 80  curveto
198 56 205 41 214 33  curveto
223 25 236 21 250 21  curveto
267 21 279 27 287 37  curveto
301 55 309 83 311 122  curveto
closepath
fill
		} def

	/one
		{
325 675 moveto
325 134 lineto
325 93 327 67 331 56  curveto
334 45 342 35 353 28  curveto
364 21 383 18 408 18  curveto
423 18 lineto
423 0 lineto
74 0 lineto
74 18 lineto
92 18 lineto
120 18 140 21 152 27  curveto
164 34 173 43 177 54  curveto
181 66 183 92 183 134  curveto
183 477 lineto
183 508 182 527 179 534  curveto
176 542 170 549 162 554  curveto
154 559 145 562 135 562  curveto
118 562 98 557 74 546  curveto
65 564 lineto
309 675 lineto
closepath
fill
		} def

	/two
		{
414 0 moveto
24 0 lineto
24 10 lineto
143 152 216 248 241 297  curveto
267 347 280 395 280 441  curveto
280 476 269 504 248 527  curveto
227 549 201 561 170 561  curveto
120 561 81 535 54 485  curveto
36 492 lineto
53 554 80 600 116 630  curveto
152 660 193 675 240 675  curveto
273 675 304 667 332 652  curveto
359 636 381 615 396 588  curveto
412 560 420 535 420 511  curveto
420 468 408 424 384 379  curveto
351 319 279 235 168 127  curveto
312 127 lineto
347 127 370 129 380 132  curveto
391 135 399 140 406 147  curveto
413 154 422 168 433 191  curveto
451 191 lineto
closepath
fill
		} def

	/three
		{
147 332 moveto
147 349 lineto
185 359 210 369 225 379  curveto
239 388 251 402 262 421  curveto
272 440 277 459 277 479  curveto
277 506 267 529 248 549  curveto
228 568 204 578 174 578  curveto
129 578 90 554 58 505  curveto
40 512 lineto
63 566 93 607 130 634  curveto
167 662 208 675 252 675  curveto
298 675 336 661 366 633  curveto
396 605 411 573 411 535  curveto
411 511 404 487 390 465  curveto
376 442 354 422 325 405  curveto
363 386 392 363 412 336  curveto
432 309 442 275 442 234  curveto
442 165 417 106 367 58  curveto
317 10 250 -14 166 -14  curveto
110 -14 69 -4 43 13  curveto
25 26 16 43 16 63  curveto
16 78 21 91 32 102  curveto
42 112 55 118 69 118  curveto
80 118 90 115 99 111  curveto
104 108 123 94 155 68  curveto
186 42 216 29 244 29  curveto
268 29 288 39 306 58  curveto
323 77 332 101 332 130  curveto
332 175 316 216 285 254  curveto
253 291 208 317 147 332  curveto
closepath
fill
		} def

	/four
		{
24 249 moveto
339 675 lineto
398 675 lineto
398 249 lineto
459 249 lineto
459 148 lineto
398 148 lineto
398 0 lineto
264 0 lineto
264 148 lineto
24 148 lineto
closepath
72 249 moveto
264 249 lineto
264 510 lineto
closepath
fill
		} def

	/five
		{
152 662 moveto
462 662 lineto
413 536 lineto
152 536 lineto
127 470 lineto
239 465 326 437 386 386  curveto
436 343 461 290 461 227  curveto
461 186 449 146 426 107  curveto
403 68 371 38 329 17  curveto
287 -3 241 -13 190 -13  curveto
136 -13 95 -3 66 16  curveto
46 30 36 47 36 65  curveto
36 79 41 91 52 102  curveto
62 113 74 118 88 118  curveto
101 118 114 116 127 110  curveto
140 105 162 91 194 69  curveto
214 56 231 46 245 41  curveto
255 37 267 35 279 35  curveto
306 35 329 45 347 64  curveto
366 84 375 107 375 135  curveto
375 192 347 239 290 274  curveto
232 310 160 328 73 328  curveto
64 328 51 328 33 328  curveto
closepath
fill
		} def

	/six
		{
469 675 moveto
469 662 lineto
410 647 363 627 327 604  curveto
292 580 264 552 243 518  curveto
222 484 206 442 195 393  curveto
209 402 221 409 230 412  curveto
252 418 273 421 294 421  curveto
344 421 385 403 418 367  curveto
451 331 468 282 468 220  curveto
468 177 459 137 441 100  curveto
423 64 398 35 365 16  curveto
332 -3 297 -13 259 -13  curveto
219 -13 181 -2 146 19  curveto
112 42 85 74 66 117  curveto
46 160 37 207 37 257  curveto
37 332 54 401 90 465  curveto
126 529 176 579 242 617  curveto
308 655 383 675 469 675  curveto
closepath
188 353 moveto
186 308 185 275 185 254  curveto
185 209 189 166 197 124  curveto
206 82 218 53 233 36  curveto
244 24 256 18 271 18  curveto
286 18 299 26 311 44  curveto
323 61 329 97 329 150  curveto
329 240 318 302 296 336  curveto
282 358 263 369 239 369  curveto
226 369 209 364 188 353  curveto
closepath
fill
		} def

	/seven
		{
177 -13 moveto
357 532 lineto
220 532 lineto
166 532 126 525 99 511  curveto
80 501 64 483 52 456  curveto
33 456 lineto
81 662 lineto
476 662 lineto
253 -13 lineto
closepath
fill
		} def

	/eight
		{
340 374 moveto
387 339 419 308 437 278  curveto
455 249 464 215 464 177  curveto
464 123 444 78 404 41  curveto
364 4 309 -13 240 -13  curveto
175 -13 124 2 88 34  curveto
53 66 35 106 35 152  curveto
35 188 45 219 66 246  curveto
86 272 121 297 169 319  curveto
117 359 83 392 68 417  curveto
53 442 46 472 46 505  curveto
46 550 65 589 102 622  curveto
140 656 191 673 257 673  curveto
320 673 369 658 403 628  curveto
437 598 454 563 454 521  curveto
454 490 444 462 426 438  curveto
408 414 379 393 340 374  curveto
closepath
303 398 moveto
315 415 324 433 330 453  curveto
336 473 339 495 339 520  curveto
339 562 330 594 312 617  curveto
298 634 279 643 255 643  curveto
233 643 215 635 199 619  curveto
184 603 176 583 176 560  curveto
176 536 185 512 202 486  curveto
219 461 253 431 303 398  curveto
closepath
206 295 moveto
195 286 188 278 184 270  curveto
178 259 172 243 166 221  curveto
161 199 159 176 159 152  curveto
159 122 163 96 170 75  curveto
178 55 189 40 204 31  curveto
218 22 233 17 249 17  curveto
272 17 292 26 309 43  curveto
325 61 333 84 333 115  curveto
333 178 291 238 206 295  curveto
closepath
fill
		} def

	/nine
		{
30 -13 moveto
30 0 lineto
84 12 130 30 168 54  curveto
205 78 235 108 257 144  curveto
279 179 294 220 303 266  curveto
283 256 266 248 252 244  curveto
238 240 223 238 207 238  curveto
157 238 115 256 82 292  curveto
48 329 32 378 32 441  curveto
32 485 41 524 59 561  curveto
77 597 103 625 136 645  curveto
170 665 205 675 241 675  curveto
279 675 316 664 351 642  curveto
385 620 413 588 433 546  curveto
454 504 464 456 464 402  curveto
464 333 447 266 414 202  curveto
380 138 331 87 265 49  curveto
199 10 120 -10 30 -13  curveto
closepath
311 307 moveto
314 344 315 376 315 403  curveto
315 463 309 518 295 569  curveto
287 597 276 618 260 631  curveto
252 638 242 642 229 642  curveto
212 642 200 635 190 621  curveto
178 602 171 565 171 511  curveto
171 421 182 359 204 325  curveto
218 303 236 291 260 291  curveto
273 291 290 297 311 307  curveto
closepath
fill
		} def

	/colon
		{
166 469 moveto
189 469 208 461 224 446  curveto
240 430 248 411 248 388  curveto
248 366 240 347 224 331  curveto
208 315 189 307 166 307  curveto
144 307 125 315 109 331  curveto
93 347 85 366 85 388  curveto
85 411 93 430 109 446  curveto
125 461 144 469 166 469  curveto
closepath
166 150 moveto
189 150 208 142 224 126  curveto
240 110 248 91 248 68  curveto
248 46 240 27 224 11  curveto
208 -4 188 -12 166 -12  curveto
144 -12 124 -4 109 11  curveto
93 27 85 46 85 68  curveto
85 91 93 110 109 126  curveto
124 142 144 150 166 150  curveto
closepath
fill
		} def

	/semicolon
		{
166 469 moveto
188 469 208 461 223 446  curveto
239 430 247 411 247 389  curveto
247 366 239 347 223 331  curveto
207 315 188 308 166 308  curveto
144 308 124 315 109 331  curveto
93 347 85 366 85 389  curveto
85 411 93 430 108 446  curveto
124 461 143 469 166 469  curveto
closepath
91 -175 moveto
91 -153 lineto
129 -137 156 -116 174 -90  curveto
191 -64 199 -38 199 -11  curveto
199 -5 198 -1 196 1  curveto
194 4 191 5 189 5  curveto
187 5 184 4 180 1  curveto
171 -3 159 -6 145 -6  curveto
126 -6 109 1 95 16  curveto
81 31 74 48 74 68  curveto
74 90 82 109 98 125  curveto
114 141 134 149 157 149  curveto
185 149 209 139 229 117  curveto
249 95 259 66 259 28  curveto
259 -18 245 -59 217 -95  curveto
188 -131 147 -158 91 -175  curveto
closepath
fill
		} def

	/less
		{
553 90 moveto
20 308 lineto
20 347 lineto
553 567 lineto
553 500 lineto
140 328 lineto
553 158 lineto
closepath
fill
		} def

	/equal
		{
19 441 moveto
553 441 lineto
553 377 lineto
19 377 lineto
closepath
19 281 moveto
553 281 lineto
553 218 lineto
19 218 lineto
closepath
fill
		} def

	/greater
		{
20 567 moveto
553 350 lineto
553 310 lineto
20 90 lineto
20 158 lineto
432 330 lineto
20 499 lineto
closepath
fill
		} def

	/question
		{
237 215 moveto
217 215 lineto
216 251 218 278 222 296  curveto
226 314 237 339 254 370  curveto
271 402 282 427 287 446  curveto
293 465 295 489 295 517  curveto
295 560 287 592 270 612  curveto
253 633 233 643 210 643  curveto
192 643 178 638 166 629  curveto
156 622 152 614 152 606  curveto
152 601 155 593 161 582  curveto
175 557 182 536 182 518  curveto
182 502 177 489 166 478  curveto
155 467 141 462 125 462  curveto
107 462 91 468 79 481  curveto
67 494 61 511 61 532  curveto
61 571 77 604 110 633  curveto
144 662 190 677 250 677  curveto
313 677 361 662 394 632  curveto
427 601 443 565 443 522  curveto
443 492 435 463 418 437  curveto
401 411 368 381 320 350  curveto
287 328 266 309 256 292  curveto
245 275 239 250 237 215  curveto
closepath
231 144 moveto
253 144 272 136 287 121  curveto
302 106 310 87 310 65  curveto
310 44 302 25 287 10  curveto
272 -5 253 -13 231 -13  curveto
210 -13 191 -5 176 10  curveto
160 25 153 44 153 65  curveto
153 87 160 106 176 121  curveto
191 136 210 144 231 144  curveto
closepath
fill
		} def

	/at
		{
575 451 moveto
694 456 lineto
605 149 lineto
595 116 590 90 590 73  curveto
590 63 594 54 601 46  curveto
609 38 618 35 629 35  curveto
652 35 681 48 717 73  curveto
752 99 782 136 805 184  curveto
828 232 840 284 840 338  curveto
840 428 811 502 753 559  curveto
695 617 620 646 527 646  curveto
447 646 375 627 309 590  curveto
244 552 192 497 153 426  curveto
115 354 96 277 96 195  curveto
96 83 132 -9 203 -80  curveto
275 -152 367 -188 478 -188  curveto
569 -188 651 -163 724 -114  curveto
796 -65 848 0 878 80  curveto
908 80 lineto
869 -15 812 -88 737 -139  curveto
662 -190 576 -215 477 -215  curveto
351 -215 248 -175 166 -94  curveto
85 -13 44 88 44 212  curveto
44 298 65 377 105 449  curveto
145 522 202 578 275 618  curveto
348 657 429 677 517 677  curveto
589 677 652 662 706 634  curveto
760 605 800 564 827 512  curveto
854 460 868 405 868 347  curveto
868 280 853 218 824 163  curveto
795 107 759 66 715 39  curveto
672 13 625 0 575 0  curveto
542 0 518 7 501 23  curveto
484 39 476 60 476 85  curveto
476 103 479 125 487 154  curveto
460 109 439 78 424 61  curveto
404 37 383 20 363 10  curveto
350 3 335 0 319 0  curveto
296 0 276 9 260 27  curveto
245 45 237 72 237 108  curveto
237 144 242 180 253 215  curveto
263 250 278 283 296 314  curveto
314 344 335 372 359 396  curveto
383 421 410 441 440 457  curveto
455 465 472 470 489 470  curveto
507 470 523 464 534 453  curveto
546 441 554 421 559 393  curveto
closepath
501 435 moveto
489 435 477 428 465 414  curveto
449 395 431 365 413 321  curveto
379 243 363 181 363 134  curveto
363 119 366 108 372 101  curveto
378 93 384 89 392 89  curveto
398 89 407 93 418 103  curveto
435 115 453 137 472 167  curveto
491 197 506 231 518 268  curveto
530 305 536 339 536 370  curveto
536 393 532 410 523 421  curveto
517 430 510 435 501 435  curveto
closepath
fill
		} def

	/A
		{
416 188 moveto
182 188 lineto
154 124 lineto
145 102 140 84 140 70  curveto
140 52 148 38 163 29  curveto
171 24 193 20 228 18  curveto
228 0 lineto
7 0 lineto
7 18 lineto
31 21 51 31 66 47  curveto
81 63 100 97 123 147  curveto
359 675 lineto
369 675 lineto
607 132 lineto
630 81 649 48 664 35  curveto
675 25 690 19 710 18  curveto
710 0 lineto
390 0 lineto
390 18 lineto
403 18 lineto
429 18 447 21 458 28  curveto
465 34 468 41 468 51  curveto
468 57 467 63 465 69  curveto
465 72 460 84 451 105  curveto
closepath
399 224 moveto
300 452 lineto
199 224 lineto
closepath
fill
		} def

	/B
		{
444 351 moveto
507 336 551 318 577 297  curveto
613 268 631 229 631 182  curveto
631 132 611 91 571 59  curveto
522 19 451 0 357 0  curveto
20 0 lineto
20 18 lineto
51 18 72 20 83 26  curveto
94 32 101 39 106 48  curveto
110 57 112 80 112 116  curveto
112 545 lineto
112 581 110 604 106 613  curveto
101 622 94 630 83 635  curveto
71 641 51 644 20 644  curveto
20 662 lineto
338 662 lineto
414 662 467 655 499 641  curveto
531 628 555 608 574 581  curveto
592 554 601 525 601 495  curveto
601 463 590 435 566 410  curveto
543 385 503 365 444 351  curveto
closepath
267 364 moveto
313 364 347 369 369 379  curveto
391 390 408 404 419 423  curveto
431 442 437 466 437 496  curveto
437 525 431 549 420 568  curveto
408 586 392 601 370 610  curveto
349 620 314 625 267 625  curveto
closepath
267 326 moveto
267 113 lineto
266 89 lineto
266 71 271 58 280 49  curveto
288 40 302 36 319 36  curveto
345 36 369 41 391 53  curveto
413 65 430 81 442 103  curveto
454 125 459 150 459 177  curveto
459 208 452 235 438 260  curveto
424 285 404 302 379 312  curveto
354 321 316 326 267 326  curveto
closepath
fill
		} def

	/C
		{
667 677 moveto
667 447 lineto
648 447 lineto
634 507 607 553 568 585  curveto
529 617 485 633 435 633  curveto
394 633 356 621 321 597  curveto
287 573 262 542 246 504  curveto
225 455 215 400 215 340  curveto
215 281 222 227 237 178  curveto
252 129 276 93 308 68  curveto
340 43 381 30 432 30  curveto
473 30 511 39 546 58  curveto
581 76 617 107 656 152  curveto
656 95 lineto
619 56 580 28 540 10  curveto
500 -6 453 -15 399 -15  curveto
328 -15 266 0 211 27  curveto
156 55 114 96 84 149  curveto
54 202 39 258 39 318  curveto
39 381 56 441 89 498  curveto
122 555 166 599 222 630  curveto
279 661 338 677 401 677  curveto
448 677 497 667 549 646  curveto
579 635 598 629 606 629  curveto
616 629 625 633 633 640  curveto
641 648 646 660 648 677  curveto
closepath
fill
		} def

	/D
		{
13 0 moveto
13 18 lineto
35 18 lineto
54 18 69 21 79 27  curveto
89 33 97 41 102 51  curveto
104 58 106 79 106 113  curveto
106 548 lineto
106 582 104 603 101 612  curveto
97 620 90 628 79 634  curveto
68 640 53 644 35 644  curveto
13 644 lineto
13 662 lineto
309 662 lineto
388 662 452 651 500 629  curveto
559 603 604 563 634 510  curveto
664 456 680 396 680 329  curveto
680 282 672 239 657 200  curveto
642 161 623 128 599 103  curveto
575 77 548 57 517 41  curveto
486 26 448 14 403 5  curveto
383 1 352 0 309 0  curveto
closepath
265 624 moveto
265 107 lineto
265 80 266 63 269 57  curveto
272 51 276 46 282 43  curveto
291 38 304 36 320 36  curveto
375 36 416 54 445 91  curveto
484 141 503 219 503 325  curveto
503 410 490 478 463 528  curveto
442 568 415 595 382 609  curveto
358 619 319 624 265 624  curveto
closepath
fill
		} def

	/E
		{
272 624 moveto
272 354 lineto
285 354 lineto
327 354 358 367 376 394  curveto
395 420 407 459 413 510  curveto
431 510 lineto
431 164 lineto
413 164 lineto
409 201 400 232 388 256  curveto
375 280 361 297 344 305  curveto
328 313 304 317 272 317  curveto
272 131 lineto
272 94 274 72 277 64  curveto
280 56 285 49 294 44  curveto
302 39 316 36 335 36  curveto
375 36 lineto
436 36 486 50 523 79  curveto
560 108 587 151 604 210  curveto
622 210 lineto
592 0 lineto
20 0 lineto
20 18 lineto
41 18 lineto
61 18 76 21 88 28  curveto
96 32 103 40 107 51  curveto
111 59 113 80 113 113  curveto
113 548 lineto
113 578 112 597 110 604  curveto
107 615 101 624 92 630  curveto
80 639 63 644 41 644  curveto
20 644 lineto
20 662 lineto
574 662 lineto
574 466 lineto
555 466 lineto
546 514 532 548 515 569  curveto
498 590 474 605 443 615  curveto
425 621 390 624 340 624  curveto
closepath
fill
		} def

	/F
		{
274 624 moveto
274 352 lineto
293 352 lineto
323 352 347 356 365 365  curveto
384 374 399 388 412 409  curveto
425 430 434 458 437 494  curveto
455 494 lineto
455 161 lineto
437 161 lineto
431 224 414 265 387 285  curveto
359 305 328 315 293 315  curveto
274 315 lineto
274 113 lineto
274 79 276 58 280 49  curveto
284 41 291 33 302 27  curveto
313 21 328 18 346 18  curveto
368 18 lineto
368 0 lineto
22 0 lineto
22 18 lineto
44 18 lineto
63 18 79 21 90 28  curveto
99 32 105 40 110 51  curveto
113 59 115 80 115 113  curveto
115 548 lineto
115 582 113 603 110 612  curveto
106 620 99 628 88 634  curveto
77 640 62 644 44 644  curveto
22 644 lineto
22 662 lineto
581 662 lineto
581 472 lineto
561 472 lineto
556 516 544 549 526 571  curveto
507 592 480 607 444 616  curveto
425 621 389 624 336 624  curveto
closepath
fill
		} def

	/G
		{
689 677 moveto
689 443 lineto
671 443 lineto
650 507 617 556 573 589  curveto
530 622 482 639 430 639  curveto
381 639 340 625 307 597  curveto
274 569 250 530 237 480  curveto
223 431 216 380 216 327  curveto
216 264 224 208 239 160  curveto
254 112 278 77 311 55  curveto
345 32 384 21 430 21  curveto
446 21 462 23 479 26  curveto
496 30 513 34 531 41  curveto
531 179 lineto
531 205 529 222 525 229  curveto
522 237 514 244 503 250  curveto
492 256 478 259 462 259  curveto
445 259 lineto
445 277 lineto
767 277 lineto
767 259 lineto
743 258 726 254 716 249  curveto
706 244 699 236 694 224  curveto
691 218 689 203 689 179  curveto
689 41 lineto
647 22 603 8 557 -1  curveto
512 -10 464 -15 415 -15  curveto
352 -15 300 -7 259 10  curveto
217 27 180 49 149 77  curveto
117 105 92 136 74 171  curveto
51 216 40 266 40 322  curveto
40 421 75 506 145 574  curveto
215 643 303 677 409 677  curveto
442 677 472 675 498 669  curveto
512 667 536 659 568 647  curveto
600 635 619 629 625 629  curveto
634 629 642 632 650 639  curveto
658 646 665 658 671 677  curveto
closepath
fill
		} def

	/H
		{
273 318 moveto
273 113 lineto
273 79 275 58 279 49  curveto
282 41 290 33 301 27  curveto
311 21 326 18 345 18  curveto
367 18 lineto
367 0 lineto
20 0 lineto
20 18 lineto
42 18 lineto
62 18 77 21 89 28  curveto
97 32 104 40 108 51  curveto
112 59 114 80 114 113  curveto
114 548 lineto
114 582 112 603 108 612  curveto
105 620 98 628 87 634  curveto
76 640 61 644 42 644  curveto
20 644 lineto
20 662 lineto
367 662 lineto
367 644 lineto
345 644 lineto
326 644 310 640 298 633  curveto
290 629 283 621 278 610  curveto
275 602 273 582 273 548  curveto
273 361 lineto
507 361 lineto
507 548 lineto
507 582 505 603 501 612  curveto
498 620 491 628 479 634  curveto
468 640 454 644 435 644  curveto
414 644 lineto
414 662 lineto
759 662 lineto
759 644 lineto
738 644 lineto
718 644 703 640 691 633  curveto
683 629 676 621 671 610  curveto
668 602 666 582 666 548  curveto
666 113 lineto
666 79 668 58 671 49  curveto
675 41 682 33 693 27  curveto
704 21 719 18 738 18  curveto
759 18 lineto
759 0 lineto
414 0 lineto
414 18 lineto
435 18 lineto
455 18 470 21 481 28  curveto
490 32 497 40 501 51  curveto
505 59 507 80 507 113  curveto
507 318 lineto
closepath
fill
		} def

	/I
		{
366 18 moveto
366 0 lineto
20 0 lineto
20 18 lineto
41 18 lineto
61 18 76 21 88 28  curveto
96 32 103 40 107 51  curveto
111 59 113 80 113 113  curveto
113 548 lineto
113 582 111 603 107 612  curveto
104 620 97 628 86 634  curveto
75 640 60 644 41 644  curveto
20 644 lineto
20 662 lineto
366 662 lineto
366 644 lineto
344 644 lineto
325 644 309 640 297 633  curveto
289 629 282 621 277 610  curveto
274 602 272 582 272 548  curveto
272 113 lineto
272 79 274 58 278 49  curveto
281 41 289 33 300 27  curveto
310 21 325 18 344 18  curveto
closepath
fill
		} def

	/J
		{
142 644 moveto
142 662 lineto
494 662 lineto
494 644 lineto
472 644 lineto
453 644 437 640 425 633  curveto
417 629 411 621 406 610  curveto
402 602 400 582 400 548  curveto
400 224 lineto
400 161 394 114 381 86  curveto
369 57 346 33 314 13  curveto
281 -5 242 -15 197 -15  curveto
141 -15 96 0 62 28  curveto
27 58 10 90 10 125  curveto
10 148 17 167 31 181  curveto
45 195 62 202 83 202  curveto
102 202 119 196 133 183  curveto
146 170 153 155 153 136  curveto
153 127 152 119 149 112  curveto
148 109 143 101 134 88  curveto
125 74 121 65 121 60  curveto
121 51 125 44 133 38  curveto
146 28 162 24 182 24  curveto
196 24 207 27 216 35  curveto
225 42 232 53 236 68  curveto
239 83 241 125 241 194  curveto
241 548 lineto
241 582 239 603 236 612  curveto
232 620 225 628 214 634  curveto
203 640 188 644 169 644  curveto
closepath
fill
		} def

	/K
		{
416 408 moveto
649 117 lineto
682 76 710 48 734 33  curveto
751 23 769 18 789 18  curveto
789 0 lineto
444 0 lineto
444 18 lineto
466 20 480 23 486 28  curveto
492 33 496 39 496 46  curveto
496 60 481 85 451 123  curveto
299 314 lineto
274 293 lineto
274 113 lineto
274 78 276 57 280 48  curveto
284 40 292 33 303 27  curveto
314 21 332 18 356 18  curveto
356 0 lineto
22 0 lineto
22 18 lineto
44 18 lineto
63 18 79 21 90 28  curveto
99 32 105 40 110 51  curveto
113 59 115 80 115 113  curveto
115 548 lineto
115 582 113 603 110 612  curveto
106 620 99 628 88 634  curveto
77 640 62 644 44 644  curveto
22 644 lineto
22 662 lineto
352 662 lineto
352 644 lineto
329 644 312 640 300 634  curveto
292 629 285 622 280 611  curveto
276 603 274 582 274 548  curveto
274 342 lineto
520 541 lineto
554 569 571 591 571 607  curveto
571 620 564 630 550 637  curveto
543 640 525 643 497 644  curveto
497 662 lineto
755 662 lineto
755 644 lineto
732 642 714 638 701 631  curveto
688 624 657 602 610 563  curveto
closepath
fill
		} def

	/L
		{
631 232 moveto
606 0 lineto
18 0 lineto
18 18 lineto
40 18 lineto
59 18 75 21 86 28  curveto
95 32 101 40 106 51  curveto
110 59 111 80 111 113  curveto
111 548 lineto
111 582 110 603 106 612  curveto
102 620 95 628 84 634  curveto
73 640 59 644 40 644  curveto
18 644 lineto
18 662 lineto
371 662 lineto
371 644 lineto
342 644 lineto
323 644 308 640 296 633  curveto
287 629 281 621 276 610  curveto
272 602 270 582 270 548  curveto
270 126 lineto
270 93 272 71 276 62  curveto
280 52 288 46 299 41  curveto
307 38 327 37 358 37  curveto
414 37 lineto
449 37 478 43 501 55  curveto
525 68 545 87 562 114  curveto
579 140 596 180 611 232  curveto
closepath
fill
		} def

	/M
		{
476 225 moveto
656 662 lineto
925 662 lineto
925 644 lineto
904 644 lineto
884 644 869 640 857 633  curveto
849 629 842 621 837 610  curveto
834 603 832 582 832 549  curveto
832 113 lineto
832 79 834 58 837 49  curveto
841 41 848 33 859 27  curveto
870 21 885 18 904 18  curveto
925 18 lineto
925 0 lineto
580 0 lineto
580 18 lineto
601 18 lineto
621 18 636 21 648 28  curveto
656 32 663 40 667 51  curveto
671 59 673 80 673 113  curveto
673 604 lineto
419 0 lineto
407 0 lineto
149 599 lineto
149 133 lineto
149 100 150 80 152 73  curveto
156 56 165 43 179 33  curveto
194 23 216 18 246 18  curveto
246 0 lineto
20 0 lineto
20 18 lineto
26 18 lineto
41 17 55 20 67 25  curveto
80 30 90 36 96 45  curveto
103 53 108 65 111 81  curveto
112 84 112 101 112 130  curveto
112 549 lineto
112 583 111 604 107 612  curveto
103 620 96 628 85 634  curveto
74 640 59 644 41 644  curveto
20 644 lineto
20 662 lineto
290 662 lineto
closepath
fill
		} def

	/N
		{
249 662 moveto
575 251 lineto
575 536 lineto
575 575 569 602 558 616  curveto
542 635 516 644 479 644  curveto
479 662 lineto
698 662 lineto
698 644 lineto
670 640 651 635 642 630  curveto
632 624 625 615 619 602  curveto
614 589 611 567 611 536  curveto
611 -15 lineto
595 -15 lineto
147 536 lineto
147 115 lineto
147 77 156 51 173 38  curveto
190 24 210 18 233 18  curveto
249 18 lineto
249 0 lineto
14 0 lineto
14 18 lineto
50 18 76 25 90 40  curveto
104 55 111 80 111 115  curveto
111 582 lineto
97 600 lineto
83 617 71 629 60 634  curveto
49 640 34 643 14 644  curveto
14 662 lineto
closepath
fill
		} def

	/O
		{
386 671 moveto
491 675 577 644 643 579  curveto
709 513 742 431 742 333  curveto
742 249 717 175 668 111  curveto
603 27 511 -15 392 -15  curveto
273 -15 181 25 116 105  curveto
64 169 39 245 39 333  curveto
39 431 72 513 139 578  curveto
206 644 288 675 386 671  curveto
closepath
392 640 moveto
331 640 285 609 253 547  curveto
228 496 215 423 215 328  curveto
215 215 235 132 274 78  curveto
302 40 341 21 391 21  curveto
424 21 452 29 475 45  curveto
503 66 526 100 541 145  curveto
557 191 565 251 565 324  curveto
565 412 557 477 541 521  curveto
525 564 504 595 479 613  curveto
454 631 424 640 392 640  curveto
closepath
fill
		} def

	/P
		{
270 299 moveto
270 116 lineto
270 80 272 57 276 48  curveto
281 39 288 31 300 26  curveto
311 20 331 18 361 18  curveto
361 0 lineto
25 0 lineto
25 18 lineto
55 18 76 20 87 26  curveto
98 32 106 39 110 48  curveto
114 57 117 80 117 116  curveto
117 545 lineto
117 581 114 604 110 613  curveto
106 622 98 630 87 635  curveto
76 641 55 644 25 644  curveto
25 662 lineto
313 662 lineto
409 662 477 645 518 611  curveto
559 577 580 535 580 484  curveto
580 441 567 404 540 374  curveto
513 343 477 322 430 311  curveto
398 303 345 299 270 299  curveto
closepath
270 624 moveto
270 337 lineto
280 337 288 336 294 336  curveto
334 336 364 348 386 372  curveto
407 395 418 432 418 481  curveto
418 531 407 567 386 589  curveto
364 612 332 624 290 624  curveto
closepath
fill
		} def

	/Q
		{
478 -5 moveto
493 -49 516 -81 547 -103  curveto
579 -125 618 -136 666 -136  curveto
679 -136 693 -134 708 -132  curveto
708 -162 lineto
658 -174 614 -180 576 -180  curveto
515 -180 461 -165 413 -136  curveto
366 -106 330 -63 306 -5  curveto
226 11 161 50 112 111  curveto
63 173 39 246 39 332  curveto
39 430 72 513 138 578  curveto
205 644 289 677 391 677  curveto
493 677 577 644 643 578  curveto
709 512 742 430 742 332  curveto
742 246 716 171 665 107  curveto
613 44 550 6 478 -5  curveto
closepath
391 640 moveto
332 640 287 609 255 548  curveto
228 497 215 424 215 330  curveto
215 217 235 133 275 78  curveto
303 40 341 21 391 21  curveto
440 21 479 40 506 77  curveto
546 131 566 212 566 319  curveto
566 425 554 502 529 550  curveto
498 610 451 640 391 640  curveto
closepath
fill
		} def

	/R
		{
265 301 moveto
265 116 lineto
265 80 267 57 272 48  curveto
276 39 284 31 295 26  curveto
306 20 327 18 357 18  curveto
357 0 lineto
18 0 lineto
18 18 lineto
49 18 69 20 80 26  curveto
91 32 99 39 103 48  curveto
108 57 110 80 110 116  curveto
110 545 lineto
110 581 108 604 103 613  curveto
99 622 91 630 80 635  curveto
69 641 48 644 18 644  curveto
18 662 lineto
326 662 lineto
406 662 464 656 501 645  curveto
539 634 569 614 592 584  curveto
616 554 627 519 627 479  curveto
627 430 610 390 575 358  curveto
552 338 521 323 480 312  curveto
640 88 lineto
660 59 675 41 684 34  curveto
697 24 713 19 730 18  curveto
730 0 lineto
522 0 lineto
309 301 lineto
closepath
265 626 moveto
265 336 lineto
293 336 lineto
338 336 372 340 395 348  curveto
417 357 435 372 447 393  curveto
460 415 467 443 467 478  curveto
467 528 455 566 431 590  curveto
408 614 370 626 317 626  curveto
closepath
fill
		} def

	/S
		{
469 677 moveto
475 456 lineto
455 456 lineto
445 511 422 556 385 590  curveto
348 623 308 640 265 640  curveto
232 640 206 631 186 614  curveto
167 596 157 575 157 552  curveto
157 538 161 525 167 513  curveto
177 498 192 483 213 468  curveto
228 457 263 438 319 411  curveto
396 373 449 337 476 303  curveto
502 269 516 230 516 187  curveto
516 131 494 84 451 44  curveto
408 4 353 -15 287 -15  curveto
266 -15 246 -13 228 -9  curveto
209 -5 186 2 158 14  curveto
142 21 129 24 119 24  curveto
111 24 102 21 92 14  curveto
83 8 75 -1 69 -15  curveto
51 -15 lineto
51 234 lineto
69 234 lineto
84 164 111 110 152 73  curveto
193 37 237 18 284 18  curveto
321 18 350 28 371 48  curveto
393 68 404 91 404 117  curveto
404 133 400 148 391 163  curveto
383 177 370 191 354 204  curveto
337 218 307 235 264 256  curveto
203 285 160 311 134 332  curveto
107 352 87 376 73 401  curveto
59 427 52 455 52 486  curveto
52 539 71 584 110 621  curveto
149 658 197 677 256 677  curveto
278 677 299 674 319 669  curveto
334 665 353 658 375 647  curveto
397 637 412 631 421 631  curveto
429 631 436 634 441 639  curveto
446 644 450 657 455 677  curveto
closepath
fill
		} def

	/T
		{
630 662 moveto
630 482 lineto
613 482 lineto
602 524 591 553 578 572  curveto
565 590 548 604 526 615  curveto
513 621 492 624 461 624  curveto
412 624 lineto
412 113 lineto
412 79 413 58 417 49  curveto
421 41 428 33 439 27  curveto
450 21 465 18 484 18  curveto
506 18 lineto
506 0 lineto
159 0 lineto
159 18 lineto
181 18 lineto
200 18 216 21 228 28  curveto
236 32 243 40 248 51  curveto
251 59 253 80 253 113  curveto
253 624 lineto
205 624 lineto
160 624 128 614 108 595  curveto
80 569 62 531 54 482  curveto
36 482 lineto
36 662 lineto
closepath
fill
		} def

	/U
		{
23 662 moveto
365 662 lineto
365 644 lineto
348 644 lineto
322 644 304 641 295 635  curveto
285 630 278 623 274 613  curveto
270 604 268 580 268 542  curveto
268 218 lineto
268 159 273 120 281 101  curveto
290 81 305 65 326 53  curveto
346 40 372 34 403 34  curveto
439 34 470 42 495 58  curveto
520 74 539 96 552 125  curveto
564 153 570 202 570 272  curveto
570 542 lineto
570 572 567 593 561 606  curveto
555 619 547 627 538 632  curveto
523 640 502 644 476 644  curveto
476 662 lineto
705 662 lineto
705 644 lineto
691 644 lineto
672 644 657 640 645 632  curveto
632 625 623 614 618 599  curveto
613 588 611 569 611 542  curveto
611 291 lineto
611 213 606 157 596 123  curveto
586 88 561 56 521 27  curveto
481 -1 427 -15 358 -15  curveto
301 -15 257 -7 226 7  curveto
183 28 153 54 135 87  curveto
118 119 109 163 109 218  curveto
109 542 lineto
109 581 107 604 103 614  curveto
98 623 91 630 81 636  curveto
70 641 51 644 23 644  curveto
closepath
fill
		} def

	/V
		{
711 662 moveto
711 644 lineto
687 640 666 627 647 605  curveto
633 589 613 550 586 490  curveto
358 -15 lineto
342 -15 lineto
115 511 lineto
87 574 69 611 60 623  curveto
51 634 33 641 7 644  curveto
7 662 lineto
325 662 lineto
325 644 lineto
314 644 lineto
285 644 266 640 255 633  curveto
248 628 244 621 244 611  curveto
244 605 245 599 248 591  curveto
251 583 259 561 274 526  curveto
416 197 lineto
546 490 lineto
562 526 572 549 575 562  curveto
579 574 581 584 581 592  curveto
581 602 578 611 573 618  curveto
568 626 560 631 550 635  curveto
536 641 517 644 494 644  curveto
494 662 lineto
closepath
fill
		} def

	/W
		{
991 662 moveto
991 644 lineto
978 643 968 639 959 633  curveto
951 627 944 618 937 606  curveto
935 603 925 577 906 531  curveto
699 -15 lineto
680 -15 lineto
516 411 lineto
335 -15 lineto
317 -15 lineto
99 525 lineto
77 579 62 612 53 624  curveto
44 635 29 642 8 644  curveto
8 662 lineto
295 662 lineto
295 644 lineto
272 643 257 639 249 633  curveto
242 627 238 619 238 609  curveto
238 597 246 571 262 531  curveto
392 209 lineto
496 460 lineto
468 531 lineto
453 569 442 595 434 608  curveto
425 621 416 630 406 635  curveto
395 641 379 644 359 644  curveto
359 662 lineto
680 662 lineto
680 644 lineto
657 643 641 641 631 638  curveto
625 636 619 632 615 627  curveto
611 621 609 615 609 608  curveto
609 601 617 578 631 540  curveto
752 226 lineto
860 510 lineto
871 539 878 559 881 570  curveto
883 581 885 590 885 600  curveto
885 613 880 623 871 631  curveto
862 639 845 643 819 644  curveto
819 662 lineto
closepath
fill
		} def

	/X
		{
422 388 moveto
604 117 lineto
635 72 656 45 669 35  curveto
682 25 697 20 715 18  curveto
715 0 lineto
392 0 lineto
392 18 lineto
418 20 434 23 442 29  curveto
449 35 453 42 453 51  curveto
453 57 452 62 450 66  curveto
445 76 434 94 416 121  curveto
319 264 lineto
218 141 lineto
187 103 172 78 172 64  curveto
172 55 176 46 184 38  curveto
192 30 203 24 219 20  curveto
226 19 240 18 261 18  curveto
261 0 lineto
6 0 lineto
6 18 lineto
35 22 58 30 75 41  curveto
97 56 127 87 166 135  curveto
297 295 lineto
129 542 lineto
101 583 85 606 82 610  curveto
73 621 64 629 56 633  curveto
47 638 35 641 20 644  curveto
20 662 lineto
349 662 lineto
349 644 lineto
333 644 lineto
314 644 300 641 293 635  curveto
285 628 282 621 282 612  curveto
282 605 283 598 285 593  curveto
319 542 lineto
401 417 lineto
471 503 lineto
506 547 524 578 524 595  curveto
524 604 522 612 517 620  curveto
512 627 505 633 495 637  curveto
486 641 471 644 451 644  curveto
451 662 lineto
695 662 lineto
695 644 lineto
676 643 660 641 648 636  curveto
637 632 624 624 611 612  curveto
602 604 581 580 547 539  curveto
closepath
fill
		} def

	/Y
		{
710 662 moveto
710 644 lineto
689 641 672 634 660 625  curveto
644 611 618 574 583 513  curveto
439 273 lineto
439 113 lineto
439 79 441 57 445 49  curveto
448 41 455 33 466 27  curveto
477 21 491 18 508 18  curveto
545 18 lineto
545 0 lineto
174 0 lineto
174 18 lineto
208 18 lineto
228 18 243 21 255 28  curveto
263 32 270 40 275 51  curveto
278 59 280 80 280 113  curveto
280 246 lineto
125 529 lineto
94 585 72 618 59 628  curveto
46 638 29 643 8 644  curveto
8 662 lineto
326 662 lineto
326 644 lineto
312 644 lineto
292 644 279 641 271 635  curveto
264 630 260 624 260 618  curveto
260 606 273 576 299 529  curveto
418 310 lineto
538 510 lineto
567 559 582 591 582 607  curveto
582 616 578 623 569 629  curveto
558 637 538 642 508 644  curveto
508 662 lineto
closepath
fill
		} def

	/Z
		{
610 662 moveto
221 37 lineto
347 37 lineto
406 37 448 40 472 48  curveto
510 60 544 81 572 113  curveto
600 144 619 186 630 239  curveto
649 239 lineto
622 0 lineto
16 0 lineto
405 625 lineto
307 625 lineto
269 625 244 624 232 622  curveto
209 618 188 609 168 597  curveto
148 584 131 568 118 547  curveto
105 526 94 500 87 468  curveto
69 468 lineto
87 662 lineto
closepath
fill
		} def

	/bracketleft
		{
104 -182 moveto
104 662 lineto
300 662 lineto
300 641 lineto
278 641 lineto
257 641 242 639 235 635  curveto
228 630 222 624 218 615  curveto
215 606 213 586 213 553  curveto
213 -77 lineto
213 -108 214 -126 215 -130  curveto
218 -142 223 -151 231 -156  curveto
239 -162 255 -165 278 -165  curveto
300 -165 lineto
300 -182 lineto
closepath
fill
		} def

	/backslash
		{
0 677 moveto
62 677 lineto
280 -15 lineto
217 -15 lineto
closepath
fill
		} def

	/bracketright
		{
229 662 moveto
229 -182 lineto
32 -182 lineto
32 -164 lineto
54 -164 lineto
76 -164 90 -161 97 -157  curveto
105 -153 110 -146 114 -138  curveto
118 -129 120 -108 120 -76  curveto
120 554 lineto
120 585 119 603 118 608  curveto
115 619 109 628 101 634  curveto
93 639 78 642 54 642  curveto
32 642 lineto
32 662 lineto
closepath
fill
		} def

	/asciicircum
		{
71 325 moveto
272 675 lineto
312 675 lineto
509 325 lineto
432 325 lineto
288 575 lineto
146 325 lineto
closepath
fill
		} def

	/underscore
		{
-9 -151 moveto
509 -151 lineto
509 -215 lineto
-9 -215 lineto
closepath
fill
		} def

	/quoteleft
		{
18 684 moveto
165 684 lineto
222 515 lineto
180 515 lineto
closepath
fill
		} def

	/a
		{
285 67 moveto
229 18 180 -6 135 -6  curveto
109 -6 88 2 70 19  curveto
53 36 44 57 44 83  curveto
44 118 59 149 89 177  curveto
119 205 185 242 285 288  curveto
285 334 lineto
285 368 283 390 280 399  curveto
276 408 269 416 258 423  curveto
248 429 236 433 223 433  curveto
202 433 185 428 171 418  curveto
162 413 158 406 158 398  curveto
158 391 163 383 172 373  curveto
184 359 190 345 190 332  curveto
190 316 184 302 173 291  curveto
161 280 145 274 126 274  curveto
105 274 88 281 74 293  curveto
61 305 54 320 54 336  curveto
54 360 63 382 82 404  curveto
100 425 126 441 159 453  curveto
192 464 227 470 263 470  curveto
306 470 340 461 365 442  curveto
391 424 407 404 415 382  curveto
419 369 421 337 421 288  curveto
421 111 lineto
421 90 422 77 424 72  curveto
425 66 428 62 431 60  curveto
434 57 438 56 442 56  curveto
451 56 459 62 468 74  curveto
483 62 lineto
467 38 450 20 432 10  curveto
415 0 395 -6 373 -6  curveto
347 -6 327 0 312 11  curveto
297 24 288 42 285 67  curveto
closepath
285 103 moveto
285 255 lineto
246 232 216 208 197 181  curveto
185 164 178 146 178 128  curveto
178 113 184 100 194 88  curveto
202 80 214 75 229 75  curveto
245 75 264 84 285 103  curveto
closepath
fill
		} def

	/b
		{
210 662 moveto
210 410 lineto
248 450 290 470 336 470  curveto
367 470 397 461 424 442  curveto
452 424 474 398 489 364  curveto
505 330 513 291 513 247  curveto
513 197 503 152 483 111  curveto
463 70 437 39 403 18  curveto
370 -3 332 -13 290 -13  curveto
265 -13 243 -9 224 -1  curveto
204 5 186 18 167 36  curveto
91 -13 lineto
75 -13 lineto
75 567 lineto
75 593 74 610 71 616  curveto
68 625 63 632 56 636  curveto
49 640 37 643 20 644  curveto
20 662 lineto
closepath
210 367 moveto
210 164 lineto
210 122 211 96 213 84  curveto
216 65 224 50 236 38  curveto
249 26 264 20 284 20  curveto
300 20 315 25 326 34  curveto
338 44 348 62 356 90  curveto
364 118 368 169 368 242  curveto
368 312 359 360 342 386  curveto
329 405 312 414 291 414  curveto
263 414 236 398 210 367  curveto
closepath
fill
		} def

	/c
		{
406 117 moveto
421 105 lineto
399 65 373 35 341 15  curveto
309 -3 274 -13 238 -13  curveto
177 -13 129 9 92 55  curveto
56 101 38 156 38 220  curveto
38 282 54 337 87 384  curveto
127 441 183 470 253 470  curveto
300 470 338 458 365 434  curveto
393 410 407 384 407 354  curveto
407 336 402 321 390 310  curveto
379 299 364 293 346 293  curveto
327 293 311 300 299 312  curveto
286 325 278 348 275 380  curveto
273 401 269 415 261 423  curveto
254 431 245 436 235 436  curveto
219 436 206 427 195 411  curveto
178 386 169 347 169 295  curveto
169 252 176 211 190 172  curveto
204 133 222 104 246 84  curveto
264 70 285 63 310 63  curveto
326 63 341 67 355 75  curveto
369 82 386 96 406 117  curveto
closepath
fill
		} def

	/d
		{
477 662 moveto
477 136 lineto
477 101 478 80 480 73  curveto
483 62 488 55 495 49  curveto
502 44 515 41 533 40  curveto
533 23 lineto
340 -13 lineto
340 58 lineto
317 30 297 11 279 1  curveto
260 -8 240 -13 217 -13  curveto
159 -13 113 12 79 64  curveto
52 106 38 158 38 220  curveto
38 269 47 313 63 352  curveto
80 391 104 420 133 440  curveto
163 460 194 470 228 470  curveto
250 470 269 465 286 457  curveto
303 449 321 434 340 413  curveto
340 550 lineto
340 585 339 606 336 613  curveto
332 623 326 630 318 634  curveto
311 639 296 641 274 641  curveto
274 662 lineto
closepath
340 352 moveto
316 398 287 421 252 421  curveto
240 421 230 418 222 412  curveto
210 402 200 384 193 358  curveto
185 333 181 294 181 242  curveto
181 184 185 141 194 114  curveto
202 86 214 66 229 54  curveto
236 48 246 44 259 44  curveto
288 44 315 67 340 112  curveto
closepath
fill
		} def

	/e
		{
420 244 moveto
169 244 lineto
172 184 188 136 218 101  curveto
240 74 267 60 299 60  curveto
318 60 336 65 352 76  curveto
368 87 385 107 403 135  curveto
420 125 lineto
395 74 368 38 338 17  curveto
308 -3 273 -13 234 -13  curveto
166 -13 115 12 80 64  curveto
52 106 38 158 38 220  curveto
38 296 59 357 100 402  curveto
141 447 189 470 245 470  curveto
291 470 331 451 365 413  curveto
399 375 417 319 420 244  curveto
closepath
300 277 moveto
300 329 297 365 291 385  curveto
286 404 277 419 265 429  curveto
258 435 249 438 237 438  curveto
220 438 207 430 196 413  curveto
177 384 167 344 167 294  curveto
167 277 lineto
closepath
fill
		} def

	/f
		{
233 408 moveto
233 91 lineto
233 61 237 41 243 34  curveto
254 22 273 16 301 17  curveto
301 0 lineto
32 0 lineto
32 17 lineto
52 17 67 20 75 24  curveto
84 29 90 35 93 42  curveto
97 50 98 67 98 91  curveto
98 408 lineto
32 408 lineto
32 456 lineto
98 456 lineto
98 490 lineto
98 513 lineto
98 560 115 599 149 630  curveto
184 661 230 677 289 677  curveto
329 677 358 669 378 654  curveto
397 639 407 623 407 604  curveto
407 590 401 577 389 566  curveto
377 556 361 550 341 550  curveto
324 550 310 555 301 563  curveto
291 572 286 582 286 593  curveto
286 596 287 602 289 611  curveto
290 616 291 622 291 626  curveto
291 633 289 638 285 642  curveto
279 646 273 649 266 649  curveto
256 649 248 645 242 637  curveto
236 629 232 617 232 600  curveto
233 514 lineto
233 456 lineto
301 456 lineto
301 408 lineto
closepath
fill
		} def

	/g
		{
326 451 moveto
480 451 lineto
480 397 lineto
393 397 lineto
409 381 420 367 426 354  curveto
434 336 437 318 437 298  curveto
437 266 428 238 410 214  curveto
392 190 368 171 337 157  curveto
306 144 278 137 254 137  curveto
252 137 232 138 195 140  curveto
181 140 168 135 158 125  curveto
149 116 144 104 144 91  curveto
144 79 148 69 157 62  curveto
166 55 180 51 201 51  curveto
285 52 lineto
354 52 401 44 426 29  curveto
463 8 481 -23 481 -66  curveto
481 -94 473 -119 456 -141  curveto
439 -164 417 -181 389 -191  curveto
347 -207 299 -215 244 -215  curveto
203 -215 166 -211 132 -203  curveto
98 -195 74 -184 59 -170  curveto
44 -156 37 -141 37 -125  curveto
37 -111 43 -97 54 -85  curveto
65 -73 86 -63 117 -55  curveto
74 -34 53 -5 53 31  curveto
53 53 62 75 79 96  curveto
96 117 124 136 161 151  curveto
118 167 86 188 66 214  curveto
47 240 37 270 37 305  curveto
37 349 55 388 92 421  curveto
128 453 175 470 232 470  curveto
263 470 294 463 326 451  curveto
closepath
242 439 moveto
223 439 207 430 194 411  curveto
181 392 174 352 174 292  curveto
174 244 181 211 194 193  curveto
206 175 222 166 239 166  curveto
259 166 275 174 288 192  curveto
301 210 308 245 308 297  curveto
308 355 300 395 286 416  curveto
275 432 261 439 242 439  curveto
closepath
213 -67 moveto
180 -67 158 -70 147 -75  curveto
128 -85 119 -99 119 -116  curveto
119 -133 129 -148 148 -161  curveto
167 -175 203 -182 256 -182  curveto
302 -182 337 -176 363 -164  curveto
389 -152 402 -135 402 -113  curveto
402 -105 399 -98 395 -92  curveto
386 -83 372 -76 355 -72  curveto
337 -69 290 -67 213 -67  curveto
closepath
fill
		} def

	/h
		{
220 662 moveto
220 397 lineto
245 424 268 442 289 453  curveto
309 464 331 470 354 470  curveto
382 470 407 462 427 445  curveto
447 429 461 410 468 388  curveto
474 366 478 329 478 277  curveto
478 99 lineto
478 64 481 42 487 33  curveto
494 25 507 19 527 17  curveto
527 0 lineto
295 0 lineto
295 17 lineto
312 19 324 26 332 37  curveto
338 45 341 66 341 99  curveto
341 302 lineto
341 340 339 364 336 373  curveto
333 383 329 390 322 396  curveto
315 401 307 404 298 404  curveto
285 404 272 399 260 390  curveto
247 381 234 366 220 343  curveto
220 99 lineto
220 66 222 46 227 38  curveto
233 27 246 20 265 17  curveto
265 0 lineto
34 0 lineto
34 17 lineto
53 19 67 25 75 36  curveto
80 43 83 64 83 99  curveto
83 562 lineto
83 597 80 618 73 627  curveto
67 635 54 641 34 644  curveto
34 662 lineto
closepath
fill
		} def

	/i
		{
143 677 moveto
164 677 182 670 197 655  curveto
211 640 219 622 219 602  curveto
219 581 211 563 197 548  curveto
182 534 164 526 143 526  curveto
122 526 104 534 90 548  curveto
75 563 68 581 68 602  curveto
68 622 75 640 90 655  curveto
104 670 122 677 143 677  curveto
closepath
211 456 moveto
211 94 lineto
211 62 215 41 223 32  curveto
230 24 245 18 267 17  curveto
267 0 lineto
20 0 lineto
20 17 lineto
40 18 55 24 65 35  curveto
71 42 75 62 75 94  curveto
75 361 lineto
75 393 71 414 63 423  curveto
56 432 41 437 20 438  curveto
20 456 lineto
closepath
fill
		} def

	/j
		{
173 677 moveto
194 677 212 670 226 655  curveto
241 641 248 623 248 603  curveto
248 582 241 564 226 549  curveto
211 535 194 527 173 527  curveto
153 527 135 535 121 549  curveto
106 564 99 582 99 603  curveto
99 623 106 641 120 655  curveto
135 670 152 677 173 677  curveto
closepath
242 456 moveto
242 -16 lineto
242 -60 239 -93 233 -114  curveto
225 -144 209 -169 185 -187  curveto
161 -206 129 -215 89 -215  curveto
49 -215 19 -207 0 -191  curveto
-18 -175 -27 -155 -27 -132  curveto
-27 -118 -22 -105 -12 -94  curveto
-3 -84 8 -79 21 -79  curveto
34 -79 44 -82 51 -90  curveto
58 -97 62 -108 62 -123  curveto
62 -126 61 -131 61 -136  curveto
60 -143 60 -148 60 -150  curveto
60 -162 63 -170 68 -176  curveto
73 -181 80 -184 88 -184  curveto
95 -184 102 -181 107 -174  curveto
113 -168 115 -159 115 -146  curveto
115 -140 114 -127 112 -107  curveto
109 -71 107 -49 107 -41  curveto
105 73 lineto
105 355 lineto
106 381 lineto
106 401 102 415 95 423  curveto
88 431 74 436 51 438  curveto
51 456 lineto
closepath
fill
		} def

	/k
		{
219 662 moveto
219 226 lineto
325 330 lineto
347 351 360 367 365 376  curveto
371 385 374 395 374 403  curveto
374 412 370 419 363 425  curveto
356 431 342 435 321 438  curveto
321 456 lineto
525 456 lineto
525 438 lineto
506 437 489 432 474 424  curveto
459 416 431 391 388 349  curveto
338 300 lineto
446 143 lineto
489 79 515 43 523 36  curveto
534 25 548 18 565 17  curveto
565 0 lineto
329 0 lineto
329 17 lineto
340 17 347 19 352 23  curveto
357 27 359 31 359 36  curveto
359 43 352 57 338 77  curveto
248 209 lineto
219 181 lineto
219 99 lineto
219 64 222 42 229 33  curveto
235 25 248 19 269 17  curveto
269 0 lineto
33 0 lineto
33 17 lineto
52 19 66 25 74 36  curveto
79 43 82 64 82 99  curveto
82 562 lineto
82 597 79 618 72 627  curveto
66 635 53 641 33 644  curveto
33 662 lineto
closepath
fill
		} def

	/l
		{
212 662 moveto
212 94 lineto
212 62 216 41 223 32  curveto
231 24 245 18 267 17  curveto
267 0 lineto
20 0 lineto
20 17 lineto
41 18 56 24 65 35  curveto
72 42 75 62 75 94  curveto
75 567 lineto
75 599 71 619 64 628  curveto
56 637 42 642 20 644  curveto
20 662 lineto
closepath
fill
		} def

	/m
		{
223 456 moveto
223 396 lineto
248 423 271 442 292 453  curveto
314 464 337 470 362 470  curveto
392 470 416 463 436 449  curveto
456 436 471 415 482 387  curveto
508 416 533 437 557 450  curveto
581 463 606 470 632 470  curveto
663 470 689 462 707 448  curveto
726 434 739 415 746 393  curveto
754 371 757 335 757 286  curveto
757 99 lineto
757 64 760 42 767 34  curveto
773 25 786 20 807 17  curveto
807 0 lineto
571 0 lineto
571 17 lineto
589 19 603 26 612 39  curveto
618 47 621 68 621 99  curveto
621 295 lineto
621 336 619 362 616 373  curveto
612 384 607 392 600 398  curveto
593 403 585 406 576 406  curveto
562 406 548 401 533 390  curveto
519 380 504 365 490 344  curveto
490 99 lineto
490 66 493 46 498 37  curveto
506 25 520 18 541 17  curveto
541 0 lineto
305 0 lineto
305 17 lineto
317 18 327 21 335 27  curveto
342 32 347 39 349 47  curveto
352 55 353 72 353 99  curveto
353 295 lineto
353 337 351 363 348 373  curveto
345 383 339 392 332 397  curveto
324 403 316 406 307 406  curveto
294 406 282 403 271 396  curveto
256 386 240 369 223 344  curveto
223 99 lineto
223 67 226 46 232 35  curveto
239 25 252 19 272 17  curveto
272 0 lineto
37 0 lineto
37 17 lineto
56 19 69 25 78 36  curveto
83 43 86 64 86 99  curveto
86 357 lineto
86 391 83 413 76 421  curveto
70 430 57 435 37 438  curveto
37 456 lineto
closepath
fill
		} def

	/n
		{
220 456 moveto
220 397 lineto
243 422 266 441 287 452  curveto
309 464 332 470 356 470  curveto
386 470 411 461 430 445  curveto
450 429 463 408 469 384  curveto
474 365 477 330 477 277  curveto
477 99 lineto
477 64 480 42 487 33  curveto
493 25 506 19 526 17  curveto
526 0 lineto
295 0 lineto
295 17 lineto
313 19 325 27 333 39  curveto
338 47 340 67 340 99  curveto
340 302 lineto
340 340 339 363 336 373  curveto
333 383 328 390 321 396  curveto
314 401 306 404 298 404  curveto
270 404 244 384 220 344  curveto
220 99 lineto
220 65 223 43 229 34  curveto
236 25 247 19 265 17  curveto
265 0 lineto
34 0 lineto
34 17 lineto
53 19 67 25 75 36  curveto
80 43 83 64 83 99  curveto
83 357 lineto
83 391 80 413 73 421  curveto
67 430 54 435 34 438  curveto
34 456 lineto
closepath
fill
		} def

	/o
		{
249 470 moveto
288 470 325 459 359 439  curveto
394 418 420 389 437 352  curveto
455 314 464 272 464 228  curveto
464 163 447 109 415 65  curveto
375 12 320 -13 250 -13  curveto
181 -13 128 10 91 58  curveto
54 106 36 162 36 226  curveto
36 291 55 348 93 397  curveto
130 445 182 470 249 470  curveto
closepath
250 435 moveto
234 435 220 429 208 416  curveto
196 404 188 379 184 342  curveto
181 305 179 254 179 188  curveto
179 153 181 121 186 90  curveto
189 67 197 50 208 38  curveto
220 26 234 20 249 20  curveto
263 20 275 24 285 32  curveto
298 43 306 58 311 78  curveto
317 109 320 172 320 266  curveto
320 321 317 359 311 380  curveto
305 400 296 415 284 425  curveto
275 432 264 435 250 435  curveto
closepath
fill
		} def

	/p
		{
210 46 moveto
210 -123 lineto
210 -146 212 -162 216 -171  curveto
219 -179 225 -186 233 -189  curveto
241 -193 256 -195 279 -195  curveto
279 -213 lineto
19 -213 lineto
19 -195 lineto
39 -195 54 -189 63 -178  curveto
70 -171 73 -151 73 -120  curveto
73 361 lineto
73 393 69 414 62 423  curveto
55 432 40 437 19 438  curveto
19 456 lineto
210 456 lineto
210 396 lineto
226 419 242 436 259 447  curveto
283 462 308 470 336 470  curveto
370 470 400 459 428 438  curveto
455 417 476 388 491 350  curveto
505 313 512 273 512 230  curveto
512 184 505 142 490 103  curveto
475 65 454 36 426 16  curveto
397 -3 366 -13 332 -13  curveto
306 -13 283 -8 261 2  curveto
245 11 228 25 210 46  curveto
closepath
210 95 moveto
238 55 268 36 300 36  curveto
317 36 332 45 343 63  curveto
360 91 369 143 369 220  curveto
369 298 359 352 341 381  curveto
328 401 312 410 291 410  curveto
258 410 231 386 210 339  curveto
closepath
fill
		} def

	/q
		{
340 47 moveto
320 27 301 12 284 3  curveto
261 -7 238 -13 213 -13  curveto
156 -13 110 11 77 62  curveto
51 103 38 152 38 208  curveto
38 256 48 300 68 342  curveto
88 383 115 415 150 437  curveto
185 459 222 470 261 470  curveto
287 470 310 465 331 457  curveto
351 448 369 434 383 416  curveto
460 470 lineto
477 470 lineto
477 -121 lineto
477 -151 479 -169 484 -177  curveto
493 -189 510 -195 536 -195  curveto
536 -213 lineto
272 -213 lineto
272 -195 lineto
292 -195 307 -193 316 -188  curveto
325 -184 331 -178 335 -170  curveto
338 -163 340 -148 340 -125  curveto
closepath
340 92 moveto
340 280 lineto
340 332 337 367 331 384  curveto
326 401 315 415 300 428  curveto
292 434 282 437 270 437  curveto
245 437 226 426 212 404  curveto
191 371 180 308 180 217  curveto
180 147 189 98 208 70  curveto
221 51 237 41 257 41  curveto
269 41 282 45 297 53  curveto
312 61 326 74 340 92  curveto
closepath
fill
		} def

	/r
		{
223 456 moveto
223 353 lineto
253 400 279 431 302 447  curveto
325 462 347 470 368 470  curveto
386 470 401 464 412 453  curveto
423 442 428 426 428 405  curveto
428 383 423 367 412 354  curveto
402 342 389 336 374 336  curveto
357 336 342 342 329 353  curveto
316 364 309 370 307 372  curveto
303 374 300 375 295 375  curveto
286 375 277 371 269 364  curveto
255 353 245 337 238 316  curveto
228 285 223 250 223 212  curveto
223 107 lineto
223 80 lineto
223 61 224 49 227 44  curveto
230 35 236 29 244 25  curveto
252 21 264 18 283 17  curveto
283 0 lineto
36 0 lineto
36 17 lineto
56 19 69 24 76 33  curveto
83 43 87 67 87 107  curveto
87 359 lineto
87 385 86 402 83 409  curveto
80 418 75 425 69 429  curveto
63 433 52 436 36 438  curveto
36 456 lineto
closepath
fill
		} def

	/s
		{
322 469 moveto
329 313 lineto
312 313 lineto
293 359 272 391 251 408  curveto
229 425 208 433 187 433  curveto
174 433 162 429 153 420  curveto
143 411 139 400 139 389  curveto
139 380 142 371 148 363  curveto
159 350 188 327 236 295  curveto
284 262 315 235 330 212  curveto
345 190 353 164 353 136  curveto
353 111 347 86 334 62  curveto
321 37 303 18 280 5  curveto
257 -7 232 -13 204 -13  curveto
182 -13 153 -6 116 6  curveto
106 10 100 12 96 12  curveto
85 12 76 4 69 -12  curveto
53 -12 lineto
45 151 lineto
62 151 lineto
77 108 97 76 122 55  curveto
148 33 172 22 195 22  curveto
210 22 223 27 233 37  curveto
243 46 248 58 248 72  curveto
248 87 243 101 233 112  curveto
224 124 202 141 168 164  curveto
118 199 86 225 71 243  curveto
50 270 39 299 39 332  curveto
39 367 51 399 75 427  curveto
100 455 135 470 181 470  curveto
205 470 229 464 252 452  curveto
261 447 268 444 274 444  curveto
280 444 284 446 288 448  curveto
292 450 297 457 305 469  curveto
closepath
fill
		} def

	/t
		{
214 623 moveto
214 456 lineto
323 456 lineto
323 408 lineto
214 408 lineto
214 126 lineto
214 100 216 83 218 75  curveto
220 67 225 61 231 56  curveto
237 52 243 49 248 49  curveto
269 49 289 65 308 98  curveto
323 87 lineto
296 24 254 -6 194 -6  curveto
165 -6 141 1 121 17  curveto
101 33 88 51 83 71  curveto
79 82 78 112 78 161  curveto
78 408 lineto
18 408 lineto
18 425 lineto
59 454 94 484 123 516  curveto
152 548 177 584 198 623  curveto
closepath
fill
		} def

	/u
		{
474 456 moveto
474 99 lineto
474 64 477 42 484 33  curveto
490 25 504 19 523 17  curveto
523 0 lineto
337 0 lineto
337 61 lineto
316 34 294 16 272 4  curveto
250 -7 226 -13 199 -13  curveto
173 -13 150 -5 130 10  curveto
110 25 97 44 90 65  curveto
83 86 80 123 80 176  curveto
80 357 lineto
80 391 76 413 70 421  curveto
64 430 50 435 30 438  curveto
30 456 lineto
216 456 lineto
216 144 lineto
216 111 218 90 221 81  curveto
224 72 229 64 236 60  curveto
242 55 250 52 259 52  curveto
270 52 281 55 291 62  curveto
304 70 319 87 337 113  curveto
337 357 lineto
337 391 334 413 328 421  curveto
322 430 308 435 288 438  curveto
288 456 lineto
closepath
fill
		} def

	/v
		{
239 -13 moveto
85 340 lineto
67 382 52 409 42 421  curveto
34 429 23 435 9 438  curveto
9 456 lineto
251 456 lineto
251 438 lineto
236 438 226 435 220 430  curveto
212 423 208 414 208 404  curveto
208 392 216 370 230 336  curveto
305 165 lineto
365 313 lineto
382 355 391 385 391 403  curveto
391 413 387 421 380 427  curveto
373 434 360 437 341 438  curveto
341 456 lineto
491 456 lineto
491 438 lineto
476 436 465 431 456 422  curveto
446 413 433 387 415 344  curveto
262 -13 lineto
closepath
fill
		} def

	/w
		{
486 -13 moveto
361 321 lineto
238 -13 lineto
213 -13 lineto
91 317 lineto
73 367 58 400 45 416  curveto
37 426 24 433 8 438  curveto
8 456 lineto
238 456 lineto
238 438 lineto
223 438 212 436 206 431  curveto
200 427 197 421 197 416  curveto
197 410 202 393 213 366  curveto
280 187 lineto
344 366 lineto
339 377 lineto
330 402 321 417 314 424  curveto
306 431 295 435 280 438  curveto
280 456 lineto
514 456 lineto
514 438 lineto
495 437 484 434 479 430  curveto
474 426 472 421 472 413  curveto
472 406 476 390 486 366  curveto
550 187 lineto
609 352 lineto
617 375 622 391 622 399  curveto
622 412 618 421 612 427  curveto
606 433 594 437 576 438  curveto
576 456 lineto
711 456 lineto
711 438 lineto
696 436 685 431 676 422  curveto
667 413 656 389 642 349  curveto
514 -13 lineto
closepath
fill
		} def

	/x
		{
303 279 moveto
382 129 lineto
410 76 431 43 447 29  curveto
456 22 468 18 483 17  curveto
483 0 lineto
229 0 lineto
229 17 lineto
249 19 261 21 266 25  curveto
271 28 273 33 273 40  curveto
273 49 268 63 257 83  curveto
218 157 lineto
184 107 lineto
169 85 160 72 158 67  curveto
156 61 154 56 154 51  curveto
154 43 156 37 159 32  curveto
162 27 166 23 172 21  curveto
177 18 187 17 201 17  curveto
201 0 lineto
22 0 lineto
22 17 lineto
45 17 65 23 83 35  curveto
102 48 128 80 164 131  curveto
201 187 lineto
123 333 lineto
97 380 78 409 65 420  curveto
52 431 38 437 22 438  curveto
22 456 lineto
275 456 lineto
275 438 lineto
262 437 lineto
237 429 lineto
234 426 233 423 233 417  curveto
233 413 234 408 235 402  curveto
236 400 241 391 249 376  curveto
285 310 lineto
303 336 lineto
329 372 342 397 342 411  curveto
342 418 339 424 334 428  curveto
328 433 318 436 303 438  curveto
303 456 lineto
465 456 lineto
465 438 lineto
445 437 426 431 409 420  curveto
392 408 373 386 351 353  curveto
closepath
fill
		} def

	/y
		{
243 -18 moveto
95 319 lineto
73 370 57 402 46 414  curveto
36 425 23 433 8 438  curveto
8 456 lineto
250 456 lineto
250 438 lineto
235 437 223 434 217 429  curveto
210 423 207 416 207 409  curveto
207 396 215 372 231 335  curveto
310 157 lineto
363 295 lineto
382 344 392 378 392 397  curveto
392 409 388 419 380 426  curveto
372 433 358 437 337 438  curveto
337 456 lineto
490 456 lineto
490 438 lineto
475 436 463 431 454 421  curveto
444 411 428 377 406 319  curveto
276 -18 lineto
243 -103 219 -155 203 -174  curveto
180 -202 152 -215 118 -215  curveto
91 -215 69 -208 52 -192  curveto
36 -177 27 -158 27 -136  curveto
27 -117 33 -102 45 -89  curveto
56 -77 70 -71 87 -71  curveto
104 -71 117 -76 127 -86  curveto
137 -97 142 -113 142 -135  curveto
142 -147 144 -155 146 -159  curveto
149 -162 153 -164 158 -164  curveto
166 -164 174 -159 183 -150  curveto
196 -136 211 -105 229 -56  curveto
closepath
fill
		} def

	/z
		{
407 0 moveto
10 0 lineto
10 10 lineto
261 426 lineto
187 426 lineto
156 426 133 423 120 418  curveto
106 412 95 403 86 390  curveto
78 378 69 355 60 323  curveto
43 323 lineto
43 456 lineto
427 456 lineto
427 443 lineto
178 31 lineto
209 31 lineto
272 31 317 40 345 58  curveto
372 76 393 108 407 156  curveto
421 156 lineto
closepath
fill
		} def

	/braceleft
		{
351 677 moveto
351 655 lineto
319 649 295 637 279 620  curveto
264 604 256 584 256 563  curveto
256 541 260 514 268 482  curveto
275 449 279 421 279 397  curveto
279 375 273 352 260 329  curveto
246 306 227 287 203 270  curveto
185 259 158 248 120 238  curveto
160 226 190 213 208 201  curveto
232 184 250 165 262 142  curveto
274 120 280 98 280 78  curveto
280 59 276 33 268 0  curveto
260 -32 256 -60 256 -84  curveto
256 -107 264 -127 279 -144  curveto
293 -161 318 -172 351 -179  curveto
351 -202 lineto
334 -202 lineto
301 -202 269 -194 239 -179  curveto
210 -163 187 -143 172 -118  curveto
157 -94 149 -70 149 -47  curveto
149 -24 154 5 165 44  curveto
172 73 176 99 176 122  curveto
176 148 168 170 151 188  curveto
135 206 111 217 80 223  curveto
80 252 lineto
111 258 135 270 151 289  curveto
168 307 176 330 176 357  curveto
176 380 172 404 165 432  curveto
155 471 150 500 150 520  curveto
150 542 156 563 169 585  curveto
182 607 198 625 217 638  curveto
236 652 257 662 280 668  curveto
297 673 321 676 351 677  curveto
closepath
fill
		} def

	/bar
		{
77 -215 moveto
77 677 lineto
141 677 lineto
141 -215 lineto
closepath
fill
		} def

	/braceright
		{
44 -202 moveto
44 -179 lineto
76 -173 100 -162 116 -145  curveto
131 -128 139 -109 139 -87  curveto
139 -66 135 -39 127 -7  curveto
120 25 116 53 116 77  curveto
116 100 122 122 135 145  curveto
148 168 167 188 192 204  curveto
210 215 237 226 275 236  curveto
235 249 205 262 187 274  curveto
163 291 144 310 132 333  curveto
120 355 114 376 114 396  curveto
114 416 118 442 126 475  curveto
134 507 138 535 138 559  curveto
138 583 131 603 116 619  curveto
102 636 77 647 44 654  curveto
44 677 lineto
61 677 lineto
94 678 125 670 155 654  curveto
185 639 208 619 223 594  curveto
238 569 246 545 246 522  curveto
246 500 241 469 230 430  curveto
223 401 219 375 219 353  curveto
219 327 227 305 243 287  curveto
260 268 283 257 315 252  curveto
315 222 lineto
283 217 260 205 243 186  curveto
227 167 219 144 219 117  curveto
219 95 223 70 230 42  curveto
240 4 245 -25 245 -45  curveto
245 -66 238 -88 226 -110  curveto
213 -131 197 -149 178 -163  curveto
159 -176 138 -186 115 -192  curveto
98 -197 74 -200 44 -202  curveto
closepath
fill
		} def

	/asciitilde
		{
522 346 moveto
550 346 lineto
548 294 535 255 510 228  curveto
485 201 455 188 419 188  curveto
402 188 383 191 364 196  curveto
345 202 302 218 236 246  curveto
188 266 154 276 133 276  curveto
111 276 92 269 77 256  curveto
63 242 52 220 47 188  curveto
19 188 lineto
21 242 34 281 58 307  curveto
82 333 111 346 145 346  curveto
163 346 180 344 196 339  curveto
229 330 275 313 333 288  curveto
364 274 388 265 404 261  curveto
414 258 425 257 436 257  curveto
459 257 479 264 494 280  curveto
510 295 520 317 522 346  curveto
closepath
fill
		} def

	/exclamdown
		{
166 475 moveto
188 475 206 467 222 451  curveto
237 436 245 417 245 395  curveto
245 373 237 355 221 339  curveto
206 324 187 316 166 316  curveto
144 316 125 324 110 339  curveto
94 355 86 373 86 395  curveto
86 417 94 436 110 451  curveto
125 467 144 475 166 475  curveto
closepath
155 246 moveto
177 246 lineto
179 209 187 164 199 111  curveto
225 5 lineto
240 -58 248 -104 248 -131  curveto
248 -156 240 -177 225 -192  curveto
210 -208 191 -215 166 -215  curveto
143 -215 124 -208 108 -192  curveto
93 -176 85 -157 85 -133  curveto
85 -108 93 -62 109 5  curveto
135 111 lineto
144 149 151 194 155 246  curveto
closepath
fill
		} def

	/cent
		{
429 118 moveto
445 107 lineto
401 26 339 -13 258 -13  curveto
229 -13 202 -6 176 7  curveto
101 -184 lineto
67 -184 lineto
147 26 lineto
119 49 98 78 83 112  curveto
69 146 62 182 62 222  curveto
62 289 81 347 120 395  curveto
159 444 209 468 270 468  curveto
282 468 298 467 315 466  curveto
389 658 lineto
424 658 lineto
347 456 lineto
376 445 397 430 410 412  curveto
424 394 431 375 431 354  curveto
431 336 425 322 414 310  curveto
403 299 389 293 371 293  curveto
355 293 341 297 330 305  curveto
319 313 311 326 304 345  curveto
227 141 lineto
241 114 257 95 274 83  curveto
290 70 310 64 332 64  curveto
367 64 400 82 429 118  curveto
closepath
293 409 moveto
283 427 271 436 258 436  curveto
243 436 230 428 218 411  curveto
201 386 193 351 193 304  curveto
193 270 198 231 209 187  curveto
closepath
fill
		} def

	/sterling
		{
260 382 moveto
367 382 lineto
367 308 lineto
267 308 lineto
267 291 268 278 268 270  curveto
268 222 260 175 244 126  curveto
261 123 278 120 296 118  curveto
314 116 332 115 350 115  curveto
385 115 411 120 430 131  curveto
443 138 452 151 459 168  curveto
479 168 lineto
479 110 465 66 436 34  curveto
407 2 371 -13 329 -13  curveto
308 -13 290 -9 272 -2  curveto
254 5 232 20 205 42  curveto
191 24 177 10 164 2  curveto
146 -8 126 -13 105 -13  curveto
79 -13 58 -5 41 10  curveto
25 27 17 45 17 67  curveto
17 90 26 111 44 128  curveto
62 146 87 154 120 154  curveto
127 154 134 154 143 152  curveto
151 151 159 149 168 146  curveto
167 166 164 183 161 198  curveto
126 308 lineto
20 308 lineto
20 382 lineto
110 382 lineto
105 418 103 446 103 465  curveto
103 518 118 565 148 605  curveto
185 655 232 679 290 679  curveto
332 679 368 667 396 641  curveto
425 616 439 589 439 559  curveto
439 538 433 522 421 510  curveto
409 497 394 491 375 491  curveto
355 491 339 497 327 510  curveto
315 522 310 538 310 559  curveto
310 562 310 570 311 583  curveto
311 590 311 595 311 600  curveto
311 616 308 628 301 635  curveto
294 643 284 646 271 646  curveto
260 646 250 642 243 632  curveto
235 623 231 608 231 588  curveto
231 564 235 530 244 487  curveto
252 443 258 408 260 382  curveto
closepath
162 79 moveto
149 89 138 95 130 98  curveto
122 101 113 103 104 103  curveto
89 103 77 99 68 91  curveto
60 83 56 74 56 63  curveto
56 53 60 45 68 37  curveto
76 30 86 26 98 26  curveto
110 26 122 30 133 38  curveto
145 47 154 60 162 79  curveto
closepath
fill
		} def

	/fraction
		{
350 675 moveto
-119 -28 lineto
-184 -28 lineto
286 675 lineto
closepath
fill
		} def

	/yen
		{
342 301 moveto
499 301 lineto
499 264 lineto
329 264 lineto
322 244 lineto
322 178 lineto
499 178 lineto
499 141 lineto
322 141 lineto
322 119 lineto
322 90 324 70 326 62  curveto
331 47 338 36 349 29  curveto
359 21 377 18 401 18  curveto
419 18 lineto
419 0 lineto
72 0 lineto
72 18 lineto
89 18 lineto
116 18 135 21 148 27  curveto
160 34 168 42 173 53  curveto
177 64 179 86 179 121  curveto
179 141 lineto
0 141 lineto
0 178 lineto
179 178 lineto
179 244 lineto
172 264 lineto
0 264 lineto
0 301 lineto
159 301 lineto
70 549 lineto
55 589 42 615 31 627  curveto
24 634 13 639 0 640  curveto
0 662 lineto
240 662 lineto
240 640 lineto
220 640 207 637 201 633  curveto
195 628 192 623 192 618  curveto
192 611 197 594 206 568  curveto
303 301 lineto
383 533 lineto
396 570 402 597 402 612  curveto
402 621 400 628 394 633  curveto
388 637 376 639 355 640  curveto
355 662 lineto
499 662 lineto
499 640 lineto
484 636 471 628 461 617  curveto
450 605 439 581 426 543  curveto
closepath
fill
		} def

	/florin
		{
347 382 moveto
297 138 lineto
275 28 255 -46 238 -85  curveto
221 -124 197 -156 167 -180  curveto
137 -203 107 -215 75 -215  curveto
51 -215 32 -210 19 -198  curveto
6 -186 0 -173 0 -159  curveto
0 -146 4 -135 14 -125  curveto
23 -115 35 -110 49 -110  curveto
63 -110 75 -114 84 -123  curveto
91 -129 95 -137 95 -148  curveto
95 -153 94 -157 93 -160  curveto
90 -168 88 -173 88 -175  curveto
88 -177 90 -180 92 -182  curveto
95 -184 98 -186 103 -186  curveto
112 -186 120 -180 128 -170  curveto
136 -160 140 -145 140 -125  curveto
140 -117 139 -100 137 -76  curveto
136 -61 136 -48 136 -36  curveto
136 -10 137 10 139 28  curveto
141 46 146 77 155 121  curveto
208 382 lineto
139 382 lineto
151 442 lineto
183 442 207 448 224 461  curveto
240 474 257 504 274 551  curveto
292 598 312 631 336 649  curveto
359 668 388 677 421 677  curveto
447 677 466 671 480 659  curveto
493 648 500 633 500 615  curveto
500 598 495 585 485 575  curveto
475 564 462 559 447 559  curveto
435 559 425 563 416 571  curveto
408 579 404 589 404 600  curveto
404 606 409 619 417 636  curveto
419 639 420 642 420 644  curveto
420 647 419 649 416 651  curveto
413 653 410 654 407 654  curveto
395 654 384 649 375 637  curveto
365 625 360 609 360 586  curveto
360 574 361 559 363 541  curveto
364 524 365 511 365 502  curveto
365 487 362 467 358 442  curveto
433 442 lineto
421 382 lineto
closepath
fill
		} def

	/section
		{
149 394 moveto
122 417 103 440 92 460  curveto
80 481 75 503 75 526  curveto
75 566 91 601 125 631  curveto
158 662 201 677 254 677  curveto
303 677 343 664 373 639  curveto
403 614 418 588 418 559  curveto
418 541 413 527 402 516  curveto
392 505 378 499 362 499  curveto
346 499 333 504 323 514  curveto
313 524 308 536 308 550  curveto
308 556 309 564 311 574  curveto
312 584 313 591 313 598  curveto
313 611 308 622 298 631  curveto
288 640 273 644 253 644  curveto
229 644 208 636 191 621  curveto
175 606 166 589 166 571  curveto
166 550 173 531 187 514  curveto
200 497 230 472 279 442  curveto
396 369 455 297 455 224  curveto
455 195 447 168 431 144  curveto
416 120 388 94 350 67  curveto
378 40 398 16 408 -3  curveto
418 -23 423 -45 423 -69  curveto
423 -96 416 -121 402 -143  curveto
388 -165 368 -183 340 -196  curveto
312 -209 280 -215 244 -215  curveto
193 -215 153 -203 125 -180  curveto
98 -156 84 -129 84 -98  curveto
84 -81 90 -67 101 -55  curveto
112 -44 125 -38 142 -38  curveto
157 -38 170 -43 181 -54  curveto
191 -64 197 -76 197 -88  curveto
197 -96 195 -105 191 -117  curveto
187 -128 185 -138 185 -145  curveto
185 -154 189 -162 199 -170  curveto
209 -177 224 -181 245 -181  curveto
273 -181 295 -174 311 -160  curveto
327 -146 335 -130 335 -111  curveto
335 -89 330 -71 319 -57  curveto
304 -37 273 -13 226 14  curveto
167 50 120 89 86 130  curveto
58 163 44 195 44 226  curveto
44 254 52 282 68 308  curveto
83 334 111 363 149 394  curveto
closepath
175 372 moveto
144 345 129 317 129 288  curveto
129 272 134 255 143 239  curveto
152 223 168 205 191 187  curveto
325 87 lineto
342 103 354 118 361 132  curveto
368 145 372 159 372 172  curveto
372 188 368 202 361 215  curveto
349 236 331 256 307 274  curveto
296 284 252 316 175 372  curveto
closepath
fill
		} def

	/currency
		{
380 501 moveto
447 567 lineto
491 524 lineto
422 456 lineto
451 416 465 374 465 329  curveto
465 285 451 242 422 200  curveto
485 137 lineto
440 93 lineto
377 156 lineto
351 139 329 128 310 123  curveto
292 117 271 114 249 114  curveto
224 114 203 117 184 124  curveto
165 130 144 140 120 156  curveto
55 93 lineto
12 137 lineto
76 200 lineto
48 238 33 280 33 327  curveto
33 350 37 373 44 395  curveto
51 418 62 438 76 456  curveto
10 522 lineto
55 567 lineto
120 501 lineto
160 530 203 545 248 545  curveto
291 545 335 530 380 501  curveto
closepath
249 481 moveto
206 481 170 467 140 437  curveto
111 407 96 371 96 329  curveto
96 287 111 251 141 221  curveto
171 191 207 176 249 176  curveto
291 176 327 191 357 221  curveto
386 251 401 287 401 329  curveto
401 371 386 407 357 437  curveto
327 467 291 481 249 481  curveto
closepath
fill
		} def

	/quotesingle
		{
152 352 moveto
129 352 lineto
78 539 lineto
71 562 68 583 68 603  curveto
68 624 75 641 89 656  curveto
102 670 119 677 140 677  curveto
163 677 181 669 193 654  curveto
206 639 212 623 212 605  curveto
212 591 208 569 201 539  curveto
closepath
fill
		} def

	/quotedblleft
		{
442 677 moveto
442 653 lineto
409 640 382 621 363 594  curveto
344 568 334 540 334 512  curveto
334 506 335 501 337 498  curveto
338 496 340 495 341 495  curveto
343 495 345 496 349 499  curveto
359 506 372 510 388 510  curveto
407 510 423 502 437 487  curveto
452 472 459 454 459 433  curveto
459 411 451 392 434 375  curveto
418 359 398 351 375 351  curveto
347 351 324 362 304 384  curveto
284 407 274 437 274 475  curveto
274 519 287 558 314 593  curveto
341 628 384 656 442 677  curveto
closepath
208 677 moveto
208 653 lineto
174 640 147 621 128 594  curveto
109 568 99 540 99 512  curveto
99 506 100 501 102 498  curveto
103 496 105 495 106 495  curveto
108 495 111 496 114 499  curveto
124 506 137 510 153 510  curveto
172 510 188 502 203 487  curveto
217 472 224 454 224 433  curveto
224 411 216 392 199 375  curveto
183 359 163 351 140 351  curveto
112 351 89 362 69 384  curveto
49 407 39 437 39 475  curveto
39 519 53 558 80 593  curveto
107 628 149 656 208 677  curveto
closepath
fill
		} def

	/guillemotleft
		{
444 3 moveto
239 229 lineto
446 452 lineto
481 452 lineto
367 229 lineto
481 3 lineto
closepath
224 3 moveto
17 229 lineto
224 452 lineto
262 452 lineto
145 231 lineto
262 3 lineto
closepath
fill
		} def

	/guilsinglleft
		{
250 3 moveto
45 228 lineto
252 452 lineto
287 452 lineto
172 228 lineto
287 3 lineto
closepath
fill
		} def

	/guilsinglright
		{
83 452 moveto
288 227 lineto
81 3 lineto
46 3 lineto
160 227 lineto
46 452 lineto
closepath
fill
		} def

	/fi
		{
218 454 moveto
482 454 lineto
482 96 lineto
482 65 486 45 492 34  curveto
499 24 513 18 534 17  curveto
534 0 lineto
296 0 lineto
296 17 lineto
317 19 331 27 339 40  curveto
344 47 347 66 347 96  curveto
347 405 lineto
218 405 lineto
218 96 lineto
218 67 220 48 225 41  curveto
232 29 246 21 268 17  curveto
268 0 lineto
28 0 lineto
28 17 lineto
51 18 67 25 76 38  curveto
81 44 83 64 83 96  curveto
83 405 lineto
28 405 lineto
28 454 lineto
83 454 lineto
83 504 91 545 107 576  curveto
122 607 148 632 185 650  curveto
221 668 263 677 310 677  curveto
342 677 370 673 394 664  curveto
418 656 435 644 446 630  curveto
457 615 462 601 462 587  curveto
462 571 456 557 444 545  curveto
431 533 415 527 393 527  curveto
373 527 358 531 350 538  curveto
339 549 333 560 333 573  curveto
333 582 336 591 343 600  curveto
349 609 353 616 353 621  curveto
353 628 350 633 344 637  curveto
336 643 321 645 301 645  curveto
280 645 264 642 253 634  curveto
239 624 230 611 224 595  curveto
220 582 218 557 218 519  curveto
closepath
fill
		} def

	/fl
		{
218 406 moveto
218 98 lineto
218 66 220 46 225 38  curveto
232 27 245 20 265 17  curveto
265 0 lineto
26 0 lineto
26 17 lineto
50 19 66 27 75 40  curveto
79 47 82 66 82 98  curveto
82 406 lineto
29 406 lineto
29 456 lineto
82 456 lineto
81 509 89 549 104 578  curveto
119 607 143 630 175 649  curveto
207 667 243 677 283 677  curveto
296 677 310 676 325 673  curveto
341 671 358 667 377 662  curveto
482 662 lineto
482 98 lineto
482 70 484 53 486 45  curveto
489 37 493 31 500 26  curveto
506 21 517 18 531 17  curveto
531 0 lineto
295 0 lineto
295 17 lineto
309 18 319 22 326 27  curveto
333 32 338 40 341 48  curveto
343 55 344 71 344 98  curveto
344 406 lineto
closepath
218 456 moveto
344 456 lineto
344 545 lineto
335 554 331 563 331 572  curveto
331 579 335 590 342 603  curveto
347 610 349 616 349 622  curveto
349 627 346 632 340 636  curveto
330 642 316 645 298 645  curveto
268 645 246 634 232 612  curveto
223 596 218 566 218 520  curveto
closepath
fill
		} def

	/endash
		{
309 179 moveto
24 179 lineto
24 280 lineto
309 280 lineto
closepath
fill
		} def

	/dagger
		{
260 -195 moveto
236 -195 lineto
236 -151 lineto
236 -27 230 73 219 150  curveto
212 199 200 246 184 291  curveto
200 305 212 321 220 338  curveto
228 355 233 377 236 404  curveto
221 403 210 401 203 398  curveto
192 394 176 387 156 375  curveto
136 364 119 358 106 358  curveto
90 358 76 364 65 375  curveto
54 386 48 400 48 416  curveto
48 431 53 445 65 456  curveto
76 466 89 472 104 472  curveto
118 472 137 465 163 451  curveto
188 437 213 429 236 426  curveto
234 455 225 486 209 518  curveto
200 540 194 555 191 564  curveto
188 573 187 583 187 592  curveto
187 613 193 629 205 642  curveto
217 655 231 662 248 662  curveto
264 662 279 655 291 643  curveto
304 631 310 614 310 592  curveto
310 581 309 571 306 562  curveto
304 552 297 538 288 519  curveto
278 499 271 482 267 468  curveto
264 457 261 443 260 426  curveto
275 427 287 429 296 432  curveto
305 435 320 443 341 455  curveto
355 463 364 468 368 469  curveto
375 471 382 472 391 472  curveto
408 472 422 467 434 456  curveto
445 444 451 431 451 415  curveto
451 399 445 386 434 375  curveto
423 364 409 359 393 359  curveto
385 359 376 360 368 363  curveto
363 364 350 371 328 383  curveto
306 395 284 402 260 404  curveto
265 355 282 317 312 291  curveto
293 234 280 179 273 128  curveto
264 62 260 -31 260 -151  curveto
closepath
fill
		} def

	/daggerdbl
		{
315 361 moveto
296 343 282 326 275 309  curveto
267 291 264 268 264 238  curveto
264 196 268 164 277 143  curveto
284 127 297 113 315 99  curveto
296 81 282 66 276 55  curveto
269 45 265 31 262 15  curveto
285 18 307 24 328 34  curveto
349 43 363 49 369 51  curveto
376 53 383 54 391 54  curveto
407 54 420 50 430 40  curveto
440 31 445 19 445 5  curveto
445 -8 440 -20 431 -29  curveto
421 -38 408 -43 392 -43  curveto
376 -43 356 -37 331 -25  curveto
313 -17 300 -12 290 -9  curveto
284 -7 274 -6 262 -5  curveto
264 -19 266 -30 268 -37  curveto
272 -48 278 -64 288 -83  curveto
300 -110 306 -130 306 -144  curveto
306 -160 301 -173 291 -183  curveto
281 -193 268 -198 252 -198  curveto
235 -198 222 -193 212 -183  curveto
202 -173 197 -160 197 -145  curveto
197 -131 203 -110 216 -82  curveto
229 -54 237 -28 241 -5  curveto
229 -6 220 -7 214 -9  curveto
205 -11 192 -17 174 -25  curveto
147 -37 125 -43 107 -43  curveto
91 -43 79 -38 69 -29  curveto
59 -20 54 -8 54 4  curveto
54 18 59 30 69 40  curveto
79 50 91 55 104 55  curveto
112 55 120 54 128 52  curveto
135 49 151 43 174 33  curveto
198 22 220 16 241 15  curveto
237 34 232 49 225 60  curveto
218 71 205 84 187 99  curveto
205 113 218 128 226 143  curveto
235 163 240 190 240 222  curveto
240 261 236 290 229 308  curveto
221 326 207 344 187 361  curveto
204 375 217 388 225 400  curveto
233 413 238 428 241 445  curveto
221 444 197 437 169 424  curveto
141 411 120 405 105 405  curveto
90 405 78 410 68 420  curveto
58 430 53 441 53 455  curveto
53 468 58 480 69 489  curveto
79 499 91 504 105 504  curveto
113 504 121 503 129 501  curveto
138 499 153 492 176 482  curveto
198 472 220 466 241 464  curveto
237 484 229 508 215 537  curveto
201 566 194 588 194 604  curveto
194 620 200 634 210 645  curveto
221 656 234 662 249 662  curveto
265 662 278 656 288 646  curveto
299 635 304 622 304 606  curveto
304 598 303 590 301 582  curveto
298 573 292 558 282 534  curveto
271 510 265 487 262 464  curveto
275 466 286 468 294 470  curveto
303 473 318 479 341 490  curveto
364 501 380 506 390 506  curveto
404 506 418 500 431 488  curveto
440 479 445 468 445 454  curveto
445 440 440 429 430 420  curveto
420 411 408 406 392 406  curveto
383 406 375 407 368 409  curveto
364 410 355 414 340 420  curveto
320 430 305 435 297 438  curveto
288 441 276 443 262 445  curveto
263 427 268 412 275 400  curveto
283 388 296 375 315 361  curveto
closepath
fill
		} def

	/periodcentered
		{
166 409 moveto
184 409 199 402 212 390  curveto
224 377 230 362 230 345  curveto
230 327 224 312 211 299  curveto
199 287 184 280 166 280  curveto
148 280 133 287 120 299  curveto
108 312 102 327 102 345  curveto
102 362 108 377 120 390  curveto
133 402 148 409 166 409  curveto
closepath
fill
		} def

	/paragraph
		{
312 625 moveto
312 -215 lineto
263 -215 lineto
263 209 lineto
202 212 153 222 115 239  curveto
78 257 49 284 30 320  curveto
10 356 0 396 0 440  curveto
0 474 4 501 12 523  curveto
20 544 33 565 51 585  curveto
69 604 87 620 105 630  curveto
124 641 145 649 169 653  curveto
201 659 253 662 326 662  curveto
541 662 lineto
541 640 lineto
520 640 lineto
500 640 486 637 476 631  curveto
466 625 459 617 454 606  curveto
451 598 449 576 449 541  curveto
449 -215 lineto
400 -215 lineto
400 625 lineto
closepath
fill
		} def

	/bullet
		{
177 469 moveto
215 469 248 456 275 428  curveto
302 401 316 368 316 330  curveto
316 291 302 258 275 231  curveto
248 204 215 190 177 190  curveto
138 190 105 204 78 231  curveto
51 258 37 291 37 330  curveto
37 368 51 401 78 428  curveto
105 456 138 469 177 469  curveto
closepath
fill
		} def

	/quotesinglbase
		{
91 -175 moveto
91 -153 lineto
129 -137 156 -116 174 -90  curveto
191 -64 199 -38 199 -11  curveto
199 -5 198 -1 196 1  curveto
194 4 191 5 189 5  curveto
187 5 184 4 180 1  curveto
171 -3 159 -6 145 -6  curveto
126 -6 109 1 95 16  curveto
81 31 74 48 74 68  curveto
74 90 82 109 98 125  curveto
114 141 134 149 157 149  curveto
185 149 209 139 229 117  curveto
249 95 259 66 259 28  curveto
259 -18 245 -59 217 -95  curveto
188 -131 147 -158 91 -175  curveto
closepath
fill
		} def

	/quotedblbase
		{
57 -175 moveto
57 -151 lineto
90 -138 117 -119 136 -93  curveto
155 -66 165 -38 165 -10  curveto
165 -4 164 0 162 3  curveto
161 5 159 6 158 6  curveto
156 6 153 5 150 2  curveto
139 -4 126 -8 111 -8  curveto
92 -8 75 0 61 14  curveto
47 29 40 47 40 68  curveto
40 90 48 109 64 125  curveto
81 142 101 150 125 150  curveto
152 150 175 139 195 117  curveto
215 94 225 64 225 26  curveto
225 -16 212 -56 185 -91  curveto
158 -126 115 -154 57 -175  curveto
closepath
291 -175 moveto
291 -151 lineto
325 -138 351 -119 371 -93  curveto
390 -66 399 -38 399 -10  curveto
399 -4 398 0 396 3  curveto
395 5 394 6 393 6  curveto
391 6 388 5 385 2  curveto
374 -4 361 -8 346 -8  curveto
327 -8 310 0 296 14  curveto
282 29 275 47 275 68  curveto
275 90 283 109 299 125  curveto
316 142 336 150 359 150  curveto
386 150 410 139 430 117  curveto
450 94 460 64 460 26  curveto
460 -16 446 -56 419 -91  curveto
392 -126 350 -154 291 -175  curveto
closepath
fill
		} def

	/quotedblright
		{
57 351 moveto
57 375 lineto
90 387 117 407 136 433  curveto
155 460 165 487 165 516  curveto
165 522 164 527 162 530  curveto
161 532 159 533 158 533  curveto
156 533 153 531 150 529  curveto
139 521 126 518 111 518  curveto
92 518 75 525 61 540  curveto
47 555 40 573 40 594  curveto
40 616 48 636 64 652  curveto
81 669 101 677 125 677  curveto
152 677 175 666 195 643  curveto
215 621 225 591 225 553  curveto
225 509 212 470 185 435  curveto
158 400 115 372 57 351  curveto
closepath
291 351 moveto
291 375 lineto
325 387 351 407 371 433  curveto
390 460 399 487 399 516  curveto
399 522 398 527 396 530  curveto
395 532 394 533 393 533  curveto
391 533 388 531 385 529  curveto
374 521 361 518 346 518  curveto
327 518 310 525 296 540  curveto
282 555 275 573 275 594  curveto
275 616 283 636 299 652  curveto
316 669 336 677 359 677  curveto
386 677 410 666 430 643  curveto
450 621 460 591 460 553  curveto
460 509 446 470 419 435  curveto
392 400 350 372 291 351  curveto
closepath
fill
		} def

	/guillemotright
		{
56 452 moveto
260 227 lineto
53 3 lineto
18 3 lineto
132 227 lineto
18 452 lineto
closepath
276 452 moveto
482 227 lineto
276 3 lineto
237 3 lineto
354 225 lineto
237 452 lineto
closepath
fill
		} def

	/ellipsis
		{
166 150 moveto
189 150 208 142 224 126  curveto
240 110 248 91 248 68  curveto
248 46 240 27 224 11  curveto
208 -4 188 -12 166 -12  curveto
144 -12 124 -4 109 11  curveto
93 27 85 46 85 68  curveto
85 91 93 110 109 126  curveto
124 142 144 150 166 150  curveto
closepath
500 149 moveto
522 149 541 142 557 126  curveto
573 110 581 91 581 68  curveto
581 46 573 27 557 11  curveto
541 -4 522 -12 500 -12  curveto
477 -12 458 -4 442 11  curveto
426 27 418 46 418 68  curveto
418 91 426 110 442 126  curveto
458 142 477 149 500 149  curveto
closepath
833 148 moveto
856 148 875 141 891 125  curveto
906 109 914 90 914 67  curveto
914 45 906 26 890 10  curveto
875 -5 855 -13 833 -13  curveto
811 -13 791 -5 776 10  curveto
760 26 752 45 752 67  curveto
752 90 760 109 776 125  curveto
791 141 811 148 833 148  curveto
closepath
fill
		} def

	/perthousand
		{
598 677 moveto
138 -27 lineto
72 -27 lineto
534 677 lineto
closepath
179 677 moveto
204 677 229 669 252 655  curveto
276 640 294 619 307 592  curveto
319 564 325 535 325 502  curveto
325 445 311 400 282 369  curveto
254 337 218 322 177 322  curveto
136 322 101 338 72 370  curveto
43 402 28 446 28 500  curveto
28 534 35 565 49 593  curveto
62 621 82 642 106 656  curveto
131 670 155 677 179 677  curveto
closepath
178 652 moveto
173 652 168 650 163 646  curveto
156 639 151 629 149 615  curveto
144 582 142 532 142 466  curveto
142 426 145 396 149 376  curveto
152 365 157 355 165 349  curveto
168 345 173 344 179 344  curveto
184 344 189 345 192 349  curveto
199 355 204 365 206 377  curveto
209 401 211 439 211 494  curveto
211 553 209 594 206 617  curveto
203 631 199 641 192 647  curveto
188 651 184 652 178 652  curveto
closepath
489 327 moveto
516 327 541 320 564 305  curveto
588 290 606 269 619 242  curveto
632 214 638 184 638 152  curveto
638 93 623 49 592 18  curveto
561 -12 527 -27 490 -27  curveto
455 -27 421 -12 389 17  curveto
357 46 341 91 341 150  curveto
341 186 348 217 361 245  curveto
373 272 392 293 416 307  curveto
440 320 465 327 489 327  curveto
closepath
490 304 moveto
484 304 479 302 475 299  curveto
469 293 465 284 463 271  curveto
457 235 455 192 455 142  curveto
455 91 457 53 461 29  curveto
463 16 467 7 474 1  curveto
478 -1 483 -3 489 -3  curveto
495 -3 500 -1 504 1  curveto
511 8 515 17 517 30  curveto
521 59 523 104 523 164  curveto
523 210 521 246 516 273  curveto
514 285 510 293 504 299  curveto
500 302 496 304 490 304  curveto
closepath
822 326 moveto
848 326 873 319 897 304  curveto
921 290 939 269 951 243  curveto
964 216 970 186 970 154  curveto
970 90 954 44 923 15  curveto
891 -13 857 -27 822 -27  curveto
785 -27 751 -12 720 18  curveto
690 49 674 92 674 149  curveto
674 184 681 215 694 242  curveto
707 270 725 291 748 305  curveto
772 319 796 326 822 326  curveto
closepath
822 303 moveto
816 303 812 301 808 298  curveto
801 292 797 283 795 270  curveto
790 238 788 195 788 141  curveto
788 93 790 55 795 27  curveto
797 15 801 6 808 0  curveto
811 -2 816 -4 823 -4  curveto
829 -4 834 -2 837 0  curveto
844 6 847 15 849 27  curveto
854 64 856 110 856 164  curveto
856 210 854 246 850 272  curveto
847 284 843 292 836 298  curveto
833 302 828 303 822 303  curveto
closepath
fill
		} def

	/questiondown
		{
268 474 moveto
289 474 308 466 323 451  curveto
339 436 346 417 346 395  curveto
346 374 338 355 323 340  curveto
308 325 289 317 268 317  curveto
246 317 227 325 212 340  curveto
196 355 188 374 188 395  curveto
188 417 196 436 211 451  curveto
227 466 245 474 268 474  curveto
closepath
262 245 moveto
282 245 lineto
283 209 281 182 277 165  curveto
273 147 262 122 245 91  curveto
228 59 217 34 212 15  curveto
206 -3 204 -27 204 -55  curveto
204 -98 212 -130 229 -150  curveto
246 -171 266 -181 289 -181  curveto
307 -181 321 -176 333 -167  curveto
343 -160 347 -152 347 -145  curveto
347 -139 344 -131 338 -120  curveto
324 -95 317 -74 317 -56  curveto
317 -40 322 -26 333 -16  curveto
344 -5 358 0 374 0  curveto
392 0 407 -6 420 -19  curveto
432 -32 438 -49 438 -70  curveto
438 -109 422 -142 389 -172  curveto
355 -201 309 -215 250 -215  curveto
186 -215 138 -200 105 -170  curveto
72 -140 56 -103 56 -61  curveto
56 -30 64 -1 81 24  curveto
98 50 130 79 179 111  curveto
212 133 233 152 243 169  curveto
253 185 260 211 262 245  curveto
closepath
fill
		} def

	/grave
		{
18 684 moveto
165 684 lineto
222 515 lineto
180 515 lineto
closepath
fill
		} def

	/acute
		{
314 684 moveto
153 515 lineto
111 515 lineto
167 684 lineto
closepath
fill
		} def

	/circumflex
		{
224 696 moveto
323 510 lineto
286 510 lineto
169 610 lineto
50 513 lineto
10 513 lineto
114 696 lineto
closepath
fill
		} def

	/tilde
		{
299 667 moveto
325 667 lineto
325 661 325 655 325 651  curveto
325 615 315 586 295 564  curveto
275 543 250 532 222 532  curveto
201 532 174 539 142 555  curveto
110 570 88 578 78 578  curveto
68 578 60 574 53 568  curveto
47 561 42 550 40 533  curveto
11 533 lineto
10 575 20 608 40 632  curveto
61 656 86 668 117 668  curveto
126 668 135 667 141 666  curveto
150 663 166 656 188 646  curveto
222 631 245 623 260 623  curveto
267 623 274 626 280 632  curveto
287 638 293 650 299 667  curveto
closepath
fill
		} def

	/macron
		{
-9 777 moveto
509 777 lineto
509 713 lineto
-9 713 lineto
closepath
fill
		} def

	/breve
		{
282 677 moveto
314 677 lineto
312 631 296 593 267 564  curveto
238 535 205 520 167 520  curveto
130 520 96 535 67 564  curveto
38 593 21 631 19 677  curveto
51 677 lineto
59 656 72 641 89 630  curveto
107 620 131 615 163 615  curveto
199 615 226 620 243 630  curveto
260 640 273 656 282 677  curveto
closepath
fill
		} def

	/dotaccent
		{
166 667 moveto
186 667 203 660 217 646  curveto
231 632 238 616 238 596  curveto
238 576 231 559 217 545  curveto
203 531 186 524 166 524  curveto
147 524 130 531 116 545  curveto
102 559 95 576 95 596  curveto
95 616 102 632 116 646  curveto
130 660 147 667 166 667  curveto
closepath
fill
		} def

	/dieresis
		{
258 667 moveto
276 667 291 661 304 648  curveto
316 636 323 620 323 603  curveto
323 585 316 569 304 557  curveto
291 544 276 538 258 538  curveto
240 538 225 544 212 557  curveto
199 569 193 585 193 603  curveto
193 620 199 636 212 648  curveto
225 661 240 667 258 667  curveto
closepath
75 667 moveto
93 667 109 661 121 648  curveto
134 636 140 620 140 603  curveto
140 585 134 569 121 557  curveto
108 544 93 538 75 538  curveto
57 538 42 544 29 557  curveto
17 569 10 585 10 603  curveto
10 620 17 636 29 648  curveto
42 661 57 667 75 667  curveto
closepath
fill
		} def

	/ring
		{
166 701 moveto
195 701 219 691 239 671  curveto
259 652 269 627 269 599  curveto
269 571 259 547 239 527  curveto
218 507 194 497 166 497  curveto
138 497 114 507 94 527  curveto
74 547 64 571 64 599  curveto
64 627 74 652 94 671  curveto
114 691 138 701 166 701  curveto
closepath
166 664 moveto
148 664 133 657 120 645  curveto
108 632 102 617 102 599  curveto
102 581 108 566 121 553  curveto
133 541 149 535 166 535  curveto
184 535 199 541 212 553  curveto
225 566 231 581 231 599  curveto
231 617 225 632 212 645  curveto
200 657 184 664 166 664  curveto
closepath
fill
		} def

	/cedilla
		{
167 5 moveto
199 5 lineto
176 -29 lineto
196 -33 211 -40 221 -53  curveto
231 -65 236 -81 236 -100  curveto
236 -117 231 -132 221 -146  curveto
211 -160 198 -170 183 -176  curveto
158 -184 120 -188 70 -187  curveto
70 -165 lineto
103 -163 125 -158 136 -149  curveto
148 -139 154 -127 154 -110  curveto
154 -101 150 -92 142 -86  curveto
135 -79 124 -76 109 -76  curveto
closepath
fill
		} def

	/hungarumlaut
		{
470 627 moveto
470 609 459 580 437 539  curveto
334 352 lineto
311 352 lineto
313 539 lineto
314 576 322 607 336 632  curveto
355 662 381 677 416 677  curveto
432 677 444 672 455 663  curveto
465 654 470 642 470 627  curveto
closepath
255 627 moveto
255 609 244 580 222 539  curveto
120 352 lineto
96 352 lineto
99 539 lineto
99 576 107 607 122 632  curveto
140 662 166 677 202 677  curveto
217 677 230 672 240 663  curveto
250 654 255 642 255 627  curveto
closepath
fill
		} def

	/ogonek
		{
215 29 moveto
203 23 192 15 181 5  curveto
170 -3 160 -14 151 -26  curveto
142 -38 135 -51 130 -64  curveto
124 -77 122 -90 122 -104  curveto
122 -113 123 -121 127 -127  curveto
130 -134 135 -140 140 -145  curveto
145 -149 151 -152 158 -155  curveto
165 -157 172 -158 179 -158  curveto
188 -158 196 -157 203 -154  curveto
211 -150 218 -146 224 -141  curveto
234 -153 lineto
217 -175 199 -190 182 -200  curveto
164 -210 148 -215 132 -215  curveto
118 -215 106 -213 95 -209  curveto
84 -205 74 -199 66 -192  curveto
59 -185 53 -177 49 -167  curveto
45 -158 42 -147 42 -137  curveto
42 -119 47 -102 57 -84  curveto
66 -67 78 -51 93 -36  curveto
107 -21 123 -8 140 2  curveto
158 14 175 23 191 29  curveto
closepath
fill
		} def

	/caron
		{
108 510 moveto
10 696 lineto
47 696 lineto
164 596 lineto
283 693 lineto
323 693 lineto
219 510 lineto
closepath
fill
		} def

	/emdash
		{
309 179 moveto
24 179 lineto
24 280 lineto
309 280 lineto
closepath
fill
		} def

	/AE
		{
908 662 moveto
908 465 lineto
889 465 lineto
880 508 868 541 851 563  curveto
835 586 815 601 791 610  curveto
766 619 727 623 673 623  curveto
622 623 lineto
622 355 lineto
639 355 lineto
670 355 695 366 715 387  curveto
735 409 749 450 757 510  curveto
774 510 lineto
774 164 lineto
757 164 lineto
753 202 744 235 731 262  curveto
722 280 710 294 693 304  curveto
677 315 659 320 639 320  curveto
622 320 lineto
622 119 lineto
622 90 622 73 624 66  curveto
627 56 632 49 641 43  curveto
649 38 667 36 695 36  curveto
734 36 lineto
765 36 796 43 825 58  curveto
854 73 877 91 893 114  curveto
909 136 924 168 936 208  curveto
955 208 lineto
924 0 lineto
343 0 lineto
343 18 lineto
380 18 lineto
409 18 429 21 439 29  curveto
450 37 457 47 460 60  curveto
462 65 462 83 462 116  curveto
462 284 lineto
248 284 lineto
155 135 lineto
140 112 132 97 129 91  curveto
126 82 124 73 124 64  curveto
124 52 130 41 141 32  curveto
153 23 173 18 203 18  curveto
203 0 lineto
-11 0 lineto
-11 18 lineto
6 20 22 26 37 37  curveto
52 48 71 72 94 109  curveto
362 536 lineto
384 571 395 593 395 602  curveto
395 610 393 617 388 624  curveto
383 631 376 636 367 639  curveto
358 642 338 644 307 644  curveto
307 662 lineto
closepath
462 320 moveto
462 623 lineto
270 320 lineto
closepath
fill
		} def

	/ordfeminine
		{
178 434 moveto
142 404 110 389 82 389  curveto
64 389 49 394 38 405  curveto
27 416 22 429 22 444  curveto
22 461 29 477 43 492  curveto
61 511 106 536 178 566  curveto
178 594 lineto
178 614 177 627 175 633  curveto
173 638 168 643 161 647  curveto
155 651 147 653 137 653  curveto
124 653 113 650 104 644  curveto
98 641 96 637 96 632  curveto
96 628 99 623 105 617  curveto
113 609 117 601 117 593  curveto
117 583 113 575 105 568  curveto
98 562 88 558 75 558  curveto
61 558 50 562 41 570  curveto
33 577 28 586 28 596  curveto
28 614 38 631 57 645  curveto
84 665 118 675 159 675  curveto
186 675 208 671 226 661  curveto
244 652 255 642 260 630  curveto
265 619 267 597 267 566  curveto
267 460 lineto
267 447 268 439 269 436  curveto
270 433 271 431 273 429  curveto
275 428 278 427 281 427  curveto
286 427 292 430 297 437  curveto
307 431 lineto
287 403 263 389 235 389  curveto
218 389 205 393 196 400  curveto
186 407 180 419 178 434  curveto
closepath
178 455 moveto
178 546 lineto
152 533 133 518 121 501  curveto
113 491 109 481 109 471  curveto
109 462 112 454 118 448  curveto
124 442 132 438 141 438  curveto
152 438 165 444 178 455  curveto
closepath
fill
		} def

	/Lslash
		{
630 231 moveto
605 0 lineto
20 0 lineto
20 18 lineto
42 18 lineto
62 18 77 21 88 27  curveto
97 32 103 40 107 50  curveto
110 58 112 81 112 118  curveto
112 241 lineto
20 167 lineto
20 213 lineto
112 288 lineto
112 541 lineto
112 577 110 600 106 609  curveto
102 618 96 625 86 631  curveto
76 637 61 640 42 640  curveto
20 640 lineto
20 662 lineto
372 662 lineto
372 640 lineto
340 640 lineto
317 640 301 636 291 628  curveto
281 620 275 610 272 599  curveto
271 594 270 575 270 541  curveto
270 413 lineto
384 501 lineto
384 456 lineto
270 367 lineto
270 126 lineto
270 91 273 69 277 60  curveto
281 50 289 43 301 39  curveto
305 37 325 36 359 36  curveto
413 36 lineto
462 36 502 51 535 80  curveto
568 109 594 159 612 231  curveto
closepath
fill
		} def

	/Oslash
		{
712 669 moveto
637 582 lineto
707 514 741 431 741 332  curveto
741 265 725 204 694 150  curveto
663 96 619 54 563 26  curveto
508 -1 451 -15 394 -15  curveto
359 -15 321 -9 281 1  curveto
242 12 206 28 175 49  curveto
98 -37 lineto
71 -13 lineto
147 73 lineto
112 106 85 145 67 191  curveto
48 237 39 284 39 333  curveto
39 395 54 453 85 508  curveto
115 562 158 604 213 633  curveto
268 662 328 677 392 677  curveto
476 677 549 653 609 606  curveto
685 693 lineto
closepath
537 523 moveto
520 564 501 593 482 608  curveto
456 628 425 639 390 639  curveto
341 639 302 618 271 578  curveto
234 527 215 443 215 325  curveto
215 273 221 222 232 170  curveto
closepath
246 130 moveto
265 90 285 61 308 45  curveto
330 29 357 20 391 20  curveto
426 20 456 31 482 52  curveto
507 72 528 109 545 163  curveto
558 202 564 255 564 320  curveto
564 356 563 387 561 411  curveto
559 428 556 451 550 481  curveto
closepath
fill
		} def

	/OE
		{
904 662 moveto
904 464 lineto
884 464 lineto
878 503 867 534 851 557  curveto
835 580 815 596 791 607  curveto
766 617 737 622 705 622  curveto
626 622 lineto
626 353 lineto
642 353 lineto
657 353 672 357 687 365  curveto
700 371 710 380 718 391  curveto
727 402 734 417 741 437  curveto
748 457 752 481 754 509  curveto
773 509 lineto
773 163 lineto
754 163 lineto
744 224 730 265 710 285  curveto
691 306 668 316 642 316  curveto
626 316 lineto
626 149 lineto
626 100 627 71 630 62  curveto
633 54 637 48 644 44  curveto
652 39 668 36 692 36  curveto
722 36 lineto
775 36 820 51 857 81  curveto
894 110 919 153 933 209  curveto
952 209 lineto
921 0 lineto
554 0 lineto
544 0 527 0 502 -2  curveto
458 -6 415 -8 374 -8  curveto
311 -8 257 2 212 26  curveto
154 56 111 99 81 155  curveto
51 210 36 269 36 331  curveto
36 416 62 492 114 556  curveto
176 633 258 671 361 671  curveto
400 671 441 669 482 664  curveto
500 662 522 662 549 662  curveto
closepath
467 501 moveto
467 536 466 558 464 568  curveto
461 586 453 600 441 609  curveto
424 623 403 630 378 630  curveto
331 630 294 610 266 571  curveto
230 520 211 433 211 309  curveto
211 206 229 132 265 85  curveto
293 48 329 29 375 29  curveto
409 29 432 37 446 52  curveto
460 68 467 99 467 146  curveto
closepath
fill
		} def

	/ordmasculine
		{
165 675 moveto
206 675 239 662 266 635  curveto
292 608 305 573 305 530  curveto
305 487 292 451 266 425  curveto
240 398 207 385 166 385  curveto
125 385 92 398 66 425  curveto
40 452 27 486 27 529  curveto
27 572 40 607 66 634  curveto
92 662 125 675 165 675  curveto
closepath
167 654 moveto
157 654 148 651 141 645  curveto
134 640 129 631 126 619  curveto
122 599 120 561 120 504  curveto
120 463 124 437 133 424  curveto
141 411 152 405 166 405  curveto
175 405 184 408 191 414  curveto
198 420 203 429 206 440  curveto
210 459 212 496 212 551  curveto
212 595 208 624 200 636  curveto
192 648 181 654 167 654  curveto
closepath
fill
		} def

	/ae
		{
693 243 moveto
429 243 lineto
436 177 452 129 477 101  curveto
503 73 531 59 562 59  curveto
608 59 646 83 677 133  curveto
693 122 lineto
664 70 635 34 605 15  curveto
575 -3 537 -13 491 -13  curveto
456 -13 425 -5 397 10  curveto
377 21 358 40 340 64  curveto
306 38 273 19 240 6  curveto
208 -7 178 -13 148 -13  curveto
116 -13 91 -4 72 12  curveto
53 30 43 50 43 74  curveto
43 103 57 132 84 162  curveto
111 192 182 234 298 286  curveto
298 324 lineto
298 356 296 378 292 390  curveto
287 401 278 411 265 419  curveto
252 427 236 431 219 431  curveto
200 431 184 426 170 416  curveto
161 409 156 401 156 393  curveto
156 390 156 388 158 386  curveto
159 383 164 378 172 370  curveto
184 358 189 344 189 329  curveto
189 314 184 302 173 292  curveto
158 279 140 272 122 272  curveto
103 272 88 279 74 292  curveto
61 305 54 320 54 338  curveto
54 374 75 405 117 431  curveto
158 457 203 470 250 470  curveto
283 470 313 464 339 451  curveto
355 444 371 431 387 414  curveto
406 433 424 448 443 457  curveto
462 465 484 470 510 470  curveto
563 470 605 451 638 415  curveto
671 379 690 321 693 243  curveto
closepath
573 275 moveto
574 286 574 294 574 299  curveto
574 351 565 388 549 412  curveto
538 428 523 436 505 436  curveto
494 436 484 433 476 426  curveto
462 415 451 398 443 377  curveto
433 348 428 314 428 275  curveto
closepath
298 256 moveto
249 223 216 198 201 180  curveto
186 163 178 142 178 119  curveto
178 104 184 90 197 78  curveto
209 67 223 61 240 61  curveto
251 61 264 63 278 68  curveto
293 73 309 81 327 90  curveto
317 111 309 134 305 157  curveto
301 180 298 213 298 256  curveto
closepath
fill
		} def

	/dotlessi
		{
211 456 moveto
211 94 lineto
211 62 215 41 223 32  curveto
230 24 245 18 267 17  curveto
267 0 lineto
20 0 lineto
20 17 lineto
40 18 55 24 65 35  curveto
71 42 75 62 75 94  curveto
75 361 lineto
75 393 71 414 63 423  curveto
56 432 41 437 20 438  curveto
20 456 lineto
closepath
fill
		} def

	/lslash
		{
210 662 moveto
210 408 lineto
264 452 lineto
264 411 lineto
210 367 lineto
210 97 lineto
210 63 214 41 221 32  curveto
229 24 243 18 264 17  curveto
264 0 lineto
21 0 lineto
21 17 lineto
41 17 56 22 64 33  curveto
71 41 74 62 74 97  curveto
74 258 lineto
18 213 lineto
18 254 lineto
74 299 lineto
74 562 lineto
74 595 70 616 63 625  curveto
55 634 41 638 21 639  curveto
21 662 lineto
closepath
fill
		} def

	/oslash
		{
467 461 moveto
412 397 lineto
433 368 447 343 454 323  curveto
462 297 467 266 467 231  curveto
467 184 458 141 441 103  curveto
423 64 398 35 364 15  curveto
331 -3 294 -13 255 -13  curveto
227 -13 201 -9 179 0  curveto
157 8 134 24 108 46  curveto
56 -13 lineto
33 7 lineto
87 71 lineto
70 97 59 120 53 141  curveto
45 167 41 195 41 226  curveto
41 291 60 348 97 397  curveto
135 445 187 470 255 470  curveto
282 470 306 466 326 458  curveto
346 451 367 438 389 420  curveto
443 482 lineto
closepath
321 341 moveto
318 377 310 401 299 415  curveto
287 428 274 435 259 435  curveto
245 435 235 433 227 428  curveto
217 421 208 409 201 394  curveto
195 378 190 350 188 308  curveto
188 297 187 255 187 182  curveto
closepath
187 136 moveto
188 91 195 61 208 45  curveto
221 29 236 20 253 20  curveto
268 20 279 24 287 30  curveto
298 39 307 54 313 74  curveto
321 100 325 141 325 197  curveto
325 200 324 233 323 295  curveto
closepath
fill
		} def

	/oe
		{
694 241 moveto
454 241 lineto
459 176 474 129 498 101  curveto
522 72 547 58 575 58  curveto
594 58 612 64 628 75  curveto
645 87 661 106 678 134  curveto
694 123 lineto
668 72 640 37 612 16  curveto
583 -3 550 -13 512 -13  curveto
486 -13 465 -9 446 0  curveto
428 8 409 23 388 46  curveto
364 23 342 7 323 0  curveto
304 -9 280 -13 252 -13  curveto
177 -13 119 14 79 70  curveto
49 112 34 163 34 224  curveto
34 269 43 311 61 349  curveto
80 387 106 417 141 438  curveto
176 459 213 470 252 470  curveto
282 470 308 464 330 453  curveto
352 442 373 425 394 402  curveto
413 425 433 442 453 453  curveto
473 464 496 470 521 470  curveto
569 470 609 450 643 411  curveto
677 372 694 315 694 241  curveto
closepath
253 436 moveto
239 436 227 432 217 424  curveto
205 413 195 394 187 367  curveto
180 339 177 288 177 212  curveto
177 148 180 104 187 81  curveto
193 57 203 40 214 31  curveto
223 24 234 20 249 20  curveto
266 20 280 25 290 33  curveto
300 42 309 59 315 86  curveto
322 112 325 166 325 250  curveto
325 312 322 354 315 376  curveto
309 399 300 415 288 424  curveto
278 432 267 436 253 436  curveto
closepath
574 275 moveto
575 293 575 305 575 312  curveto
575 360 569 393 557 410  curveto
545 427 532 435 518 435  curveto
508 435 499 431 490 424  curveto
478 415 470 401 464 383  curveto
456 356 452 320 452 275  curveto
closepath
fill
		} def

	/germandbls
		{
211 0 moveto
28 0 lineto
28 17 lineto
46 19 58 25 66 35  curveto
73 45 77 66 77 99  curveto
77 488 lineto
77 534 84 570 100 596  curveto
116 621 140 641 172 656  curveto
205 670 241 677 279 677  curveto
347 677 397 663 429 636  curveto
461 608 478 574 478 531  curveto
478 492 466 462 444 440  curveto
428 425 400 414 362 408  curveto
395 401 422 390 440 375  curveto
459 361 475 338 487 308  curveto
500 278 506 245 506 209  curveto
506 165 499 126 486 93  curveto
472 60 453 36 428 19  curveto
403 3 376 -4 347 -4  curveto
317 -4 293 2 276 17  curveto
259 32 250 50 250 70  curveto
250 85 255 97 263 106  curveto
272 115 284 119 298 119  curveto
307 119 315 118 320 115  curveto
326 112 331 107 337 99  curveto
342 92 345 87 345 85  curveto
341 41 lineto
341 39 344 37 349 33  curveto
354 29 359 27 365 27  curveto
371 27 377 30 383 37  curveto
389 43 392 51 392 60  curveto
392 67 386 89 374 124  curveto
368 141 365 152 364 156  curveto
363 167 362 181 362 200  curveto
362 270 lineto
362 307 360 332 356 344  curveto
352 356 344 366 333 373  curveto
322 381 305 385 281 386  curveto
281 416 lineto
300 416 314 420 322 427  curveto
331 434 337 445 340 460  curveto
341 468 342 489 342 523  curveto
342 568 338 598 331 612  curveto
320 633 302 644 276 644  curveto
263 644 252 640 243 634  curveto
231 626 223 616 218 604  curveto
214 592 211 567 211 527  curveto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman-Bold exch definefont pop
/TimesNewRoman-Bold findfont 15.0 scalefont setfont
(Normalized Frequency) show
Q
Q
newpath
0.0 0.0 m
0.0 345.0 l
466.0 345.0 l
466.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 5.0 5.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
q
q
1 295 305 OPL
295 310
-5.0 -5.0 translate
290.0 330.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -229 1500 770 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -229 1500 770
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 277.83203125 def
		/exclam 333.0078125 def
		/quotedbl 474.12109375 def
		/numbersign 556.15234375 def
		/dollar 556.15234375 def
		/percent 889.16015625 def
		/ampersand 722.16796875 def
		/quoteright 237.79296875 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 389.16015625 def
		/plus 583.984375 def
		/comma 277.83203125 def
		/hyphen 333.0078125 def
		/period 277.83203125 def
		/slash 277.83203125 def
		/zero 556.15234375 def
		/one 556.15234375 def
		/two 556.15234375 def
		/three 556.15234375 def
		/four 556.15234375 def
		/five 556.15234375 def
		/six 556.15234375 def
		/seven 556.15234375 def
		/eight 556.15234375 def
		/nine 556.15234375 def
		/colon 333.0078125 def
		/semicolon 333.0078125 def
		/less 583.984375 def
		/equal 583.984375 def
		/greater 583.984375 def
		/question 610.83984375 def
		/at 975.09765625 def
		/A 722.16796875 def
		/B 722.16796875 def
		/C 722.16796875 def
		/D 722.16796875 def
		/E 666.9921875 def
		/F 610.83984375 def
		/G 777.83203125 def
		/H 722.16796875 def
		/I 277.83203125 def
		/J 556.15234375 def
		/K 722.16796875 def
		/L 610.83984375 def
		/M 833.0078125 def
		/N 722.16796875 def
		/O 777.83203125 def
		/P 666.9921875 def
		/Q 777.83203125 def
		/R 722.16796875 def
		/S 666.9921875 def
		/T 610.83984375 def
		/U 722.16796875 def
		/V 666.9921875 def
		/W 943.84765625 def
		/X 666.9921875 def
		/Y 666.9921875 def
		/Z 610.83984375 def
		/bracketleft 333.0078125 def
		/backslash 277.83203125 def
		/bracketright 333.0078125 def
		/asciicircum 583.984375 def
		/underscore 556.15234375 def
		/quoteleft 333.0078125 def
		/a 556.15234375 def
		/b 610.83984375 def
		/c 556.15234375 def
		/d 610.83984375 def
		/e 556.15234375 def
		/f 333.0078125 def
		/g 610.83984375 def
		/h 610.83984375 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 556.15234375 def
		/l 277.83203125 def
		/m 889.16015625 def
		/n 610.83984375 def
		/o 610.83984375 def
		/p 610.83984375 def
		/q 610.83984375 def
		/r 389.16015625 def
		/s 556.15234375 def
		/t 333.0078125 def
		/u 610.83984375 def
		/v 556.15234375 def
		/w 777.83203125 def
		/x 556.15234375 def
		/y 556.15234375 def
		/z 500.0 def
		/braceleft 389.16015625 def
		/bar 279.78515625 def
		/braceright 389.16015625 def
		/asciitilde 583.984375 def
		/exclamdown 333.0078125 def
		/cent 556.15234375 def
		/sterling 556.15234375 def
		/fraction 166.9921875 def
		/yen 556.15234375 def
		/florin 556.15234375 def
		/section 556.15234375 def
		/currency 556.15234375 def
		/quotesingle 237.79296875 def
		/quotedblleft 500.0 def
		/guillemotleft 556.15234375 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 610.83984375 def
		/fl 610.83984375 def
		/endash 333.0078125 def
		/dagger 556.15234375 def
		/daggerdbl 556.15234375 def
		/periodcentered 277.83203125 def
		/paragraph 556.15234375 def
		/bullet 350.09765625 def
		/quotesinglbase 277.83203125 def
		/quotedblbase 500.0 def
		/quotedblright 500.0 def
		/guillemotright 556.15234375 def
		/ellipsis 1000.0 def
		/perthousand 1000.0 def
		/questiondown 610.83984375 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 333.0078125 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 610.3515625 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 1000.0 def
		/ordfeminine 370.1171875 def
		/Lslash 610.83984375 def
		/Oslash 777.83203125 def
		/OE 1000.0 def
		/ordmasculine 365.234375 def
		/ae 889.16015625 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 610.83984375 def
		/oe 943.84765625 def
		/germandbls 610.83984375 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
109 717 moveto
262 717 lineto
262 534 lineto
223 198 lineto
150 198 lineto
109 534 lineto
closepath
113 141 moveto
258 141 lineto
258 0 lineto
113 0 lineto
closepath
fill
		} def

	/quotedbl
		{
329 719 moveto
306 422 lineto
218 422 lineto
196 719 lineto
closepath
144 719 moveto
121 422 lineto
33 422 lineto
11 719 lineto
closepath
fill
		} def

	/numbersign
		{
298 277 moveto
337 419 lineto
256 419 lineto
218 277 lineto
closepath
21 277 moveto
121 277 lineto
159 419 lineto
60 419 lineto
82 501 lineto
181 501 lineto
234 698 lineto
332 698 lineto
278 501 lineto
359 501 lineto
411 698 lineto
508 698 lineto
457 501 lineto
555 501 lineto
533 419 lineto
435 419 lineto
395 277 lineto
495 277 lineto
473 195 lineto
373 195 lineto
321 0 lineto
224 0 lineto
276 195 lineto
196 195 lineto
143 0 lineto
45 0 lineto
99 195 lineto
0 195 lineto
closepath
fill
		} def

	/dollar
		{
300 91 moveto
326 94 345 100 356 108  curveto
377 123 387 149 387 186  curveto
387 214 378 236 358 252  curveto
347 262 328 272 300 282  curveto
closepath
254 601 moveto
226 600 205 593 191 578  curveto
177 564 170 544 170 519  curveto
170 492 181 470 201 454  curveto
213 445 230 437 254 430  curveto
closepath
301 -115 moveto
254 -115 lineto
254 -18 lineto
190 -11 142 2 110 23  curveto
55 60 27 124 28 214  curveto
160 214 lineto
165 173 171 146 179 132  curveto
192 110 217 96 254 89  curveto
254 298 lineto
214 310 lineto
152 328 108 353 83 386  curveto
57 418 44 458 44 503  curveto
44 534 49 561 59 586  curveto
69 611 83 632 101 650  curveto
124 673 150 689 178 698  curveto
195 703 221 707 254 710  curveto
254 775 lineto
300 775 lineto
300 709 lineto
353 705 395 692 425 670  curveto
480 635 509 579 511 500  curveto
382 500 lineto
380 529 375 551 368 564  curveto
355 587 333 600 300 602  curveto
300 416 lineto
378 389 430 366 457 345  curveto
500 311 522 263 522 201  curveto
522 119 492 59 432 22  curveto
395 0 352 -13 301 -17  curveto
closepath
fill
		} def

	/percent
		{
204 445 moveto
226 445 244 452 259 468  curveto
274 483 282 501 282 522  curveto
282 544 274 562 259 577  curveto
244 593 226 600 204 600  curveto
183 600 164 593 149 577  curveto
134 562 126 544 126 522  curveto
126 501 134 483 149 468  curveto
164 452 183 445 204 445  curveto
closepath
386 522 moveto
386 472 368 430 333 394  curveto
297 359 255 341 204 341  curveto
154 341 111 359 76 394  curveto
40 430 22 472 22 522  curveto
22 573 40 615 76 651  curveto
111 686 154 704 204 704  curveto
254 704 297 686 333 651  curveto
368 615 386 573 386 522  curveto
closepath
756 167 moveto
756 188 749 207 734 222  curveto
718 237 700 245 679 245  curveto
657 245 639 237 624 222  curveto
609 207 601 188 601 167  curveto
601 145 609 127 624 112  curveto
639 97 657 89 679 89  curveto
700 89 718 97 734 112  curveto
749 127 756 145 756 167  curveto
closepath
860 167 moveto
860 117 843 74 807 39  curveto
772 3 729 -14 679 -14  curveto
629 -14 586 3 550 39  curveto
515 74 497 117 497 167  curveto
497 217 515 260 550 296  curveto
586 331 629 349 679 349  curveto
729 349 772 331 807 295  curveto
843 260 860 217 860 167  curveto
closepath
601 708 moveto
675 708 lineto
281 -18 lineto
205 -18 lineto
closepath
fill
		} def

	/ampersand
		{
54 189 moveto
54 233 64 270 86 301  curveto
107 332 143 362 191 393  curveto
207 402 lineto
186 425 170 449 158 474  curveto
147 498 141 523 141 550  curveto
141 602 159 643 194 673  curveto
229 702 275 717 331 717  curveto
382 717 424 702 457 672  curveto
491 642 507 603 507 556  curveto
507 514 497 479 477 453  curveto
457 427 428 402 389 380  curveto
491 254 lineto
503 271 512 289 518 309  curveto
525 329 528 350 528 372  curveto
652 372 lineto
650 328 639 284 621 240  curveto
610 215 593 187 570 157  curveto
701 0 lineto
532 0 lineto
482 61 lineto
458 38 435 21 415 11  curveto
377 -7 335 -17 286 -17  curveto
213 -17 156 3 115 46  curveto
74 89 54 137 54 189  curveto
closepath
269 555 moveto
269 542 274 528 283 514  curveto
289 504 301 487 321 463  curveto
340 477 354 489 363 498  curveto
379 516 387 535 387 555  curveto
387 570 382 583 373 595  curveto
363 607 348 613 328 613  curveto
316 613 304 609 293 603  curveto
277 592 269 576 269 555  curveto
closepath
192 194 moveto
192 170 202 148 221 128  curveto
241 109 266 99 296 99  curveto
319 99 340 104 361 114  curveto
381 125 397 137 410 150  curveto
278 313 lineto
243 290 220 270 209 252  curveto
198 234 192 215 192 194  curveto
closepath
fill
		} def

	/quoteright
		{
181 719 moveto
157 422 lineto
72 422 lineto
48 719 lineto
closepath
fill
		} def

	/parenleft
		{
45 257 moveto
45 352 66 448 108 546  curveto
132 600 157 646 184 683  curveto
219 731 lineto
299 730 lineto
254 647 223 582 207 534  curveto
180 454 166 365 166 266  curveto
166 202 171 143 182 89  curveto
198 7 226 -71 267 -146  curveto
297 -201 lineto
214 -201 lineto
162 -129 121 -58 94 11  curveto
61 93 45 174 45 257  curveto
closepath
fill
		} def

	/parenright
		{
117 731 moveto
167 662 204 597 230 538  curveto
268 450 287 361 287 272  curveto
287 174 264 74 219 -26  curveto
194 -83 170 -125 147 -154  curveto
113 -201 lineto
10 -201 lineto
53 -124 83 -60 100 -11  curveto
129 72 143 164 143 263  curveto
143 327 138 386 127 440  curveto
111 522 83 601 42 676  curveto
12 731 lineto
117 731 lineto
closepath
fill
		} def

	/asterisk
		{
45 639 moveto
147 606 lineto
147 724 lineto
232 724 lineto
232 606 lineto
334 639 lineto
357 566 lineto
253 534 lineto
321 437 lineto
258 393 lineto
190 484 lineto
121 393 lineto
58 437 lineto
126 534 lineto
22 566 lineto
closepath
fill
		} def

	/plus
		{
35 201 moveto
35 328 lineto
235 328 lineto
235 528 lineto
364 528 lineto
364 328 lineto
564 328 lineto
564 201 lineto
364 201 lineto
364 0 lineto
235 0 lineto
235 201 lineto
closepath
fill
		} def

	/comma
		{
57 -115 moveto
85 -107 106 -94 119 -76  curveto
132 -58 140 -32 142 0  curveto
57 0 lineto
57 145 lineto
208 145 lineto
208 19 lineto
208 -2 205 -25 199 -49  curveto
193 -73 182 -94 166 -112  curveto
149 -131 128 -145 105 -155  curveto
82 -164 66 -169 57 -169  curveto
closepath
fill
		} def

	/hyphen
		{
22 344 moveto
303 344 lineto
303 212 lineto
22 212 lineto
closepath
fill
		} def

	/period
		{
62 145 moveto
210 145 lineto
210 0 lineto
62 0 lineto
closepath
fill
		} def

	/slash
		{
224 741 moveto
339 741 lineto
60 0 lineto
-54 0 lineto
closepath
fill
		} def

	/zero
		{
173 347 moveto
173 265 180 203 193 160  curveto
206 117 234 95 275 95  curveto
316 95 343 117 356 160  curveto
369 203 375 265 375 347  curveto
375 432 369 495 356 536  curveto
343 577 316 598 275 598  curveto
234 598 206 577 193 536  curveto
180 495 173 432 173 347  curveto
closepath
275 712 moveto
365 712 428 681 465 617  curveto
501 554 519 464 519 347  curveto
519 230 501 140 465 77  curveto
428 13 365 -17 275 -17  curveto
185 -17 121 13 85 77  curveto
49 140 31 230 31 347  curveto
31 464 49 554 85 617  curveto
121 681 185 712 275 712  curveto
closepath
fill
		} def

	/one
		{
69 488 moveto
69 583 lineto
113 584 144 587 161 591  curveto
189 597 212 610 229 628  curveto
242 641 251 658 257 679  curveto
260 692 262 701 262 708  curveto
378 708 lineto
378 0 lineto
235 0 lineto
235 488 lineto
closepath
fill
		} def

	/two
		{
31 0 moveto
32 50 43 97 63 139  curveto
83 186 130 236 204 289  curveto
268 334 310 367 329 387  curveto
358 418 372 452 372 489  curveto
372 519 364 544 347 563  curveto
331 583 307 593 276 593  curveto
234 593 205 577 189 546  curveto
181 528 175 499 174 459  curveto
39 459 lineto
41 519 52 568 71 605  curveto
108 676 174 711 269 711  curveto
344 711 403 690 448 649  curveto
492 607 514 552 514 484  curveto
514 431 499 385 467 344  curveto
447 317 413 287 366 254  curveto
311 214 lineto
276 190 252 172 239 161  curveto
226 150 215 137 207 122  curveto
516 122 lineto
516 0 lineto
31 0 lineto
closepath
fill
		} def

	/three
		{
163 217 moveto
163 188 167 165 176 146  curveto
193 112 224 95 269 95  curveto
296 95 320 105 340 123  curveto
360 142 371 169 371 204  curveto
371 251 352 282 314 297  curveto
292 306 259 311 212 311  curveto
212 410 lineto
258 411 289 415 307 423  curveto
338 437 354 465 354 506  curveto
354 533 346 555 330 572  curveto
314 589 292 598 263 598  curveto
230 598 206 587 191 566  curveto
175 546 168 518 168 483  curveto
39 483 lineto
40 518 46 551 57 583  curveto
68 611 86 636 110 660  curveto
129 676 150 689 175 698  curveto
200 707 231 711 268 711  curveto
335 711 390 693 431 658  curveto
473 623 494 576 494 518  curveto
494 476 481 441 457 412  curveto
441 394 425 382 408 375  curveto
420 375 439 365 462 343  curveto
498 310 516 265 516 208  curveto
516 148 495 95 453 50  curveto
412 5 350 -17 269 -17  curveto
169 -17 99 15 60 80  curveto
40 115 28 160 26 217  curveto
closepath
fill
		} def

	/four
		{
522 152 moveto
442 152 lineto
442 0 lineto
306 0 lineto
306 152 lineto
26 152 lineto
26 273 lineto
286 703 lineto
442 703 lineto
442 261 lineto
522 261 lineto
closepath
306 261 moveto
306 566 lineto
129 261 lineto
closepath
fill
		} def

	/five
		{
165 189 moveto
170 159 181 135 196 119  curveto
212 102 235 94 265 94  curveto
299 94 325 106 343 131  curveto
362 155 371 185 371 222  curveto
371 258 362 289 345 314  curveto
328 339 302 351 266 351  curveto
249 351 235 349 222 345  curveto
200 337 184 322 173 301  curveto
48 307 lineto
98 698 lineto
488 698 lineto
488 580 lineto
198 580 lineto
173 425 lineto
194 439 211 449 223 453  curveto
243 461 268 464 297 464  curveto
355 464 407 445 450 405  curveto
494 366 516 309 516 233  curveto
516 168 495 110 453 58  curveto
411 7 348 -18 264 -18  curveto
197 -18 141 0 98 35  curveto
55 71 31 123 26 189  curveto
closepath
fill
		} def

	/six
		{
170 224 moveto
170 186 181 154 201 130  curveto
222 106 248 94 279 94  curveto
310 94 335 106 352 129  curveto
370 152 379 183 379 220  curveto
379 261 369 293 349 315  curveto
328 337 304 348 274 348  curveto
251 348 230 340 211 326  curveto
184 305 170 271 170 224  curveto
closepath
366 529 moveto
366 541 362 553 353 567  curveto
338 589 315 600 285 600  curveto
240 600 208 575 188 524  curveto
178 496 171 455 167 400  curveto
184 420 204 435 227 445  curveto
250 454 276 459 305 459  curveto
368 459 420 438 460 395  curveto
500 352 520 298 520 231  curveto
520 165 500 107 461 57  curveto
422 6 360 -18 277 -18  curveto
188 -18 122 18 80 93  curveto
47 151 31 226 31 318  curveto
31 372 33 416 38 450  curveto
46 510 62 561 85 601  curveto
105 635 132 662 164 683  curveto
197 704 236 714 282 714  curveto
347 714 400 697 439 664  curveto
478 630 500 585 505 529  curveto
closepath
fill
		} def

	/seven
		{
527 589 moveto
506 569 477 532 440 480  curveto
403 427 372 373 347 317  curveto
327 273 309 219 293 156  curveto
277 92 269 40 269 0  curveto
125 0 lineto
129 126 170 258 250 395  curveto
301 480 343 540 378 573  curveto
25 573 lineto
27 698 lineto
527 698 lineto
closepath
fill
		} def

	/eight
		{
170 205 moveto
170 170 179 143 197 124  curveto
216 105 241 95 272 95  curveto
304 95 329 105 347 124  curveto
365 143 375 170 375 205  curveto
375 241 365 269 347 287  curveto
329 306 304 315 272 315  curveto
241 315 216 306 198 287  curveto
180 269 170 241 170 205  curveto
closepath
26 196 moveto
26 236 35 271 53 304  curveto
71 336 97 360 132 376  curveto
98 399 76 424 66 450  curveto
55 477 50 502 50 525  curveto
50 576 70 620 108 656  curveto
147 693 202 711 272 711  curveto
343 711 398 693 437 656  curveto
475 620 495 576 495 525  curveto
495 502 489 477 479 450  curveto
469 424 447 401 413 381  curveto
447 362 474 336 491 304  curveto
509 271 518 236 518 196  curveto
518 136 496 86 451 44  curveto
407 2 346 -18 267 -18  curveto
187 -18 128 2 87 44  curveto
46 86 26 136 26 196  curveto
closepath
183 509 moveto
183 484 191 463 207 446  curveto
223 430 244 422 272 422  curveto
301 422 323 430 338 446  curveto
354 463 361 484 361 509  curveto
361 537 354 559 338 575  curveto
323 591 301 599 272 599  curveto
244 599 223 591 207 575  curveto
191 559 183 537 183 509  curveto
closepath
fill
		} def

	/nine
		{
29 458 moveto
29 534 51 596 95 643  curveto
139 690 196 713 266 713  curveto
373 713 447 666 487 570  curveto
510 516 521 445 521 357  curveto
521 271 511 200 489 143  curveto
447 34 371 -20 259 -20  curveto
206 -20 159 -4 116 26  curveto
74 58 50 103 43 164  curveto
182 164 lineto
185 143 194 126 208 113  curveto
223 100 242 93 266 93  curveto
312 93 344 119 362 169  curveto
372 197 379 238 381 292  curveto
369 276 355 264 341 255  curveto
315 240 283 232 245 232  curveto
188 232 138 251 95 290  curveto
51 329 29 385 29 458  curveto
closepath
275 345 moveto
294 345 312 351 329 362  curveto
361 382 376 417 376 467  curveto
376 507 367 539 348 562  curveto
330 585 304 597 271 597  curveto
248 597 227 590 210 577  curveto
184 556 170 521 170 471  curveto
170 429 179 398 196 377  curveto
213 356 239 345 275 345  curveto
closepath
fill
		} def

	/colon
		{
113 511 moveto
261 511 lineto
261 365 lineto
113 365 lineto
closepath
113 145 moveto
261 145 lineto
261 0 lineto
113 0 lineto
closepath
fill
		} def

	/semicolon
		{
113 511 moveto
261 511 lineto
261 365 lineto
113 365 lineto
closepath
113 -115 moveto
146 -106 169 -89 182 -65  curveto
190 -50 195 -28 197 0  curveto
113 0 lineto
113 145 lineto
263 145 lineto
263 19 lineto
263 -2 260 -26 254 -50  curveto
249 -73 238 -94 222 -112  curveto
205 -130 185 -145 162 -154  curveto
138 -164 122 -169 113 -169  curveto
closepath
fill
		} def

	/less
		{
11 327 moveto
586 545 lineto
586 409 lineto
175 264 lineto
586 119 lineto
586 -16 lineto
11 202 lineto
closepath
fill
		} def

	/equal
		{
564 442 moveto
564 314 lineto
35 314 lineto
35 442 lineto
closepath
564 214 moveto
564 86 lineto
35 86 lineto
35 214 lineto
closepath
fill
		} def

	/greater
		{
586 202 moveto
11 -16 lineto
11 119 lineto
422 264 lineto
11 409 lineto
11 545 lineto
586 326 lineto
closepath
fill
		} def

	/question
		{
238 141 moveto
383 141 lineto
383 0 lineto
238 0 lineto
closepath
60 492 moveto
63 585 96 651 157 689  curveto
195 714 242 727 298 727  curveto
372 727 433 709 482 674  curveto
530 639 555 587 555 518  curveto
555 475 544 440 523 411  curveto
511 393 487 371 452 343  curveto
417 316 lineto
398 302 386 285 379 265  curveto
375 253 373 234 373 208  curveto
241 208 lineto
243 263 248 301 257 322  curveto
265 343 287 367 322 394  curveto
358 422 lineto
370 431 379 440 386 451  curveto
399 469 406 488 406 510  curveto
406 534 399 557 384 577  curveto
370 598 343 608 305 608  curveto
267 608 240 595 224 570  curveto
209 545 201 519 201 492  curveto
60 492 lineto
closepath
fill
		} def

	/at
		{
579 443 moveto
579 460 574 475 563 486  curveto
553 498 539 504 521 504  curveto
488 504 458 483 434 441  curveto
410 399 397 358 397 318  curveto
397 295 403 275 414 261  curveto
425 246 440 239 460 239  curveto
495 239 523 265 546 318  curveto
568 371 579 413 579 443  curveto
closepath
429 167 moveto
389 167 357 181 330 209  curveto
304 238 291 277 291 328  curveto
291 387 311 442 351 494  curveto
391 545 440 571 499 571  curveto
533 571 559 561 578 542  curveto
592 528 602 511 607 492  curveto
625 554 lineto
717 554 lineto
654 342 lineto
649 325 646 312 644 303  curveto
642 295 641 288 641 282  curveto
641 272 644 263 650 254  curveto
657 246 667 241 682 241  curveto
710 241 738 260 766 296  curveto
794 333 808 381 808 442  curveto
808 531 770 596 693 635  curveto
645 659 590 672 530 672  curveto
420 672 331 638 264 570  curveto
203 509 173 436 173 350  curveto
173 255 208 180 279 124  curveto
342 75 419 50 509 50  curveto
571 50 629 62 683 84  curveto
712 97 742 114 773 136  curveto
785 144 lineto
821 89 lineto
775 54 725 26 671 8  curveto
617 -10 561 -20 503 -20  curveto
368 -20 263 21 189 105  curveto
127 175 97 258 97 353  curveto
97 460 135 550 212 625  curveto
293 703 396 742 522 742  curveto
625 742 709 715 777 662  curveto
848 605 883 530 883 436  curveto
883 362 861 299 816 246  curveto
771 193 720 166 662 166  curveto
632 166 609 175 593 192  curveto
577 209 569 226 569 244  curveto
569 246 569 249 569 252  curveto
569 254 569 257 570 261  curveto
557 237 544 219 528 205  curveto
501 180 467 167 429 167  curveto
closepath
fill
		} def

	/A
		{
272 271 moveto
455 271 lineto
365 555 lineto
closepath
282 719 moveto
452 719 lineto
707 0 lineto
543 0 lineto
497 147 lineto
232 147 lineto
182 0 lineto
25 0 lineto
closepath
366 719 moveto
fill
		} def

	/B
		{
222 594 moveto
222 436 lineto
398 436 lineto
430 436 456 441 475 453  curveto
495 465 505 486 505 517  curveto
505 550 492 572 466 583  curveto
443 590 415 594 380 594  curveto
closepath
222 316 moveto
222 125 lineto
398 125 lineto
430 125 455 129 472 137  curveto
504 153 520 183 520 227  curveto
520 264 505 290 474 304  curveto
456 312 432 316 401 316  curveto
closepath
428 719 moveto
516 718 578 692 615 643  curveto
637 612 648 575 648 533  curveto
648 489 637 453 615 427  curveto
603 412 585 398 561 386  curveto
597 372 625 351 644 322  curveto
663 293 672 258 672 217  curveto
672 174 661 136 640 102  curveto
626 80 609 61 588 45  curveto
565 28 538 16 507 9  curveto
475 3 441 0 404 0  curveto
78 0 lineto
78 719 lineto
428 719 lineto
closepath
fill
		} def

	/C
		{
44 354 moveto
44 479 78 576 145 644  curveto
204 703 279 733 369 733  curveto
490 733 579 693 635 614  curveto
666 569 682 524 685 479  curveto
534 479 lineto
524 514 512 540 497 558  curveto
469 589 429 604 375 604  curveto
320 604 277 582 246 538  curveto
214 494 198 432 198 351  curveto
198 270 215 210 248 170  curveto
282 129 324 109 375 109  curveto
428 109 468 127 496 161  curveto
511 180 524 208 534 245  curveto
683 245 lineto
670 166 637 102 583 53  curveto
530 4 461 -20 377 -20  curveto
274 -20 193 13 133 79  curveto
74 146 44 237 44 354  curveto
closepath
365 741 moveto
fill
		} def

	/D
		{
222 594 moveto
222 125 lineto
360 125 lineto
431 125 481 159 509 229  curveto
524 268 532 314 532 367  curveto
532 440 520 496 497 535  curveto
474 575 429 594 360 594  curveto
closepath
386 719 moveto
430 719 467 713 497 704  curveto
548 687 588 657 620 612  curveto
645 576 662 538 671 496  curveto
680 454 685 415 685 377  curveto
685 281 665 200 627 134  curveto
575 44 494 0 386 0  curveto
76 0 lineto
76 719 lineto
386 719 lineto
closepath
fill
		} def

	/E
		{
608 592 moveto
227 592 lineto
227 439 lineto
577 439 lineto
577 314 lineto
227 314 lineto
227 129 lineto
625 129 lineto
625 0 lineto
80 0 lineto
80 719 lineto
608 719 lineto
closepath
fill
		} def

	/F
		{
76 718 moveto
586 718 lineto
586 592 lineto
225 592 lineto
225 426 lineto
541 426 lineto
541 301 lineto
225 301 lineto
225 0 lineto
76 0 lineto
closepath
fill
		} def

	/G
		{
560 495 moveto
548 544 520 578 476 598  curveto
451 608 424 614 394 614  curveto
336 614 288 592 251 548  curveto
213 504 195 438 195 351  curveto
195 262 215 199 255 163  curveto
296 126 342 107 393 107  curveto
444 107 485 122 517 151  curveto
549 180 569 218 577 266  curveto
410 266 lineto
410 386 lineto
710 386 lineto
710 0 lineto
610 0 lineto
595 89 lineto
566 55 540 31 517 17  curveto
477 -6 429 -19 371 -19  curveto
275 -19 197 13 136 80  curveto
73 146 41 237 41 352  curveto
41 469 73 562 137 632  curveto
201 703 286 738 392 738  curveto
483 738 557 715 612 668  curveto
668 622 699 564 708 495  curveto
closepath
391 738 moveto
fill
		} def

	/H
		{
75 0 moveto
75 719 lineto
224 719 lineto
224 445 lineto
505 445 lineto
505 719 lineto
654 719 lineto
654 0 lineto
505 0 lineto
505 321 lineto
224 321 lineto
224 0 lineto
closepath
fill
		} def

	/I
		{
213 0 moveto
64 0 lineto
64 719 lineto
213 719 lineto
closepath
139 733 moveto
fill
		} def

	/J
		{
164 272 moveto
164 256 lineto
165 200 171 161 182 138  curveto
193 116 216 104 252 104  curveto
287 104 311 117 322 142  curveto
329 156 333 181 333 216  curveto
333 719 lineto
483 719 lineto
483 218 lineto
483 157 472 109 451 73  curveto
415 12 351 -17 257 -17  curveto
164 -17 101 6 69 55  curveto
37 104 21 171 21 256  curveto
21 272 lineto
closepath
fill
		} def

	/K
		{
78 719 moveto
226 719 lineto
226 423 lineto
504 719 lineto
698 719 lineto
403 423 lineto
713 0 lineto
520 0 lineto
298 314 lineto
226 240 lineto
226 0 lineto
78 0 lineto
closepath
fill
		} def

	/L
		{
76 719 moveto
226 719 lineto
226 129 lineto
583 129 lineto
583 0 lineto
76 0 lineto
closepath
fill
		} def

	/M
		{
553 719 moveto
769 719 lineto
769 0 lineto
629 0 lineto
629 486 lineto
629 500 629 520 629 545  curveto
630 570 630 590 630 604  curveto
494 0 lineto
348 0 lineto
212 604 lineto
212 590 213 570 213 545  curveto
213 520 213 500 213 486  curveto
213 0 lineto
73 0 lineto
73 719 lineto
292 719 lineto
423 153 lineto
closepath
fill
		} def

	/N
		{
73 719 moveto
231 719 lineto
518 217 lineto
518 719 lineto
658 719 lineto
658 0 lineto
507 0 lineto
213 511 lineto
213 0 lineto
73 0 lineto
closepath
371 721 moveto
fill
		} def

	/O
		{
394 107 moveto
454 107 501 129 536 173  curveto
571 217 588 279 588 360  curveto
588 441 571 503 536 548  curveto
501 592 454 614 394 614  curveto
334 614 287 592 251 548  curveto
216 504 198 441 198 360  curveto
198 279 216 217 251 173  curveto
287 129 334 107 394 107  curveto
closepath
739 360 moveto
739 231 702 132 630 63  curveto
576 7 497 -20 394 -20  curveto
291 -20 213 7 158 63  curveto
85 132 49 231 49 360  curveto
49 492 85 591 158 657  curveto
213 713 291 741 394 741  curveto
497 741 576 713 630 657  curveto
702 591 739 492 739 360  curveto
closepath
394 741 moveto
fill
		} def

	/P
		{
481 490 moveto
481 528 471 554 451 570  curveto
432 586 404 594 369 594  curveto
229 594 lineto
229 382 lineto
369 382 lineto
404 382 432 391 451 408  curveto
471 425 481 453 481 490  curveto
closepath
630 491 moveto
630 406 608 346 565 311  curveto
522 276 461 258 381 258  curveto
229 258 lineto
229 0 lineto
79 0 lineto
79 719 lineto
393 719 lineto
465 719 522 701 565 664  curveto
608 626 630 569 630 491  curveto
closepath
fill
		} def

	/Q
		{
393 107 moveto
410 107 426 109 442 113  curveto
451 116 462 120 476 125  curveto
403 195 lineto
481 276 lineto
554 207 lineto
565 230 573 250 578 268  curveto
585 294 588 325 588 360  curveto
588 441 572 503 539 548  curveto
506 592 458 614 394 614  curveto
334 614 287 593 251 550  curveto
216 508 198 445 198 360  curveto
198 262 224 191 274 148  curveto
307 121 347 107 393 107  curveto
closepath
739 371 moveto
739 307 731 253 715 210  curveto
703 169 684 134 659 107  curveto
742 29 lineto
664 -52 lineto
577 29 lineto
550 13 527 2 508 -3  curveto
476 -14 437 -20 393 -20  curveto
299 -20 221 7 160 63  curveto
86 131 49 230 49 360  curveto
49 492 87 591 163 659  curveto
225 714 303 741 395 741  curveto
488 741 566 712 629 654  curveto
702 586 739 492 739 371  curveto
closepath
fill
		} def

	/R
		{
226 594 moveto
226 401 lineto
396 401 lineto
430 401 456 405 473 413  curveto
503 426 518 453 518 494  curveto
518 537 503 567 474 582  curveto
458 590 433 594 401 594  curveto
closepath
432 719 moveto
483 718 521 712 549 701  curveto
576 689 599 673 618 650  curveto
633 632 646 612 655 590  curveto
664 568 668 542 668 514  curveto
668 480 660 446 643 413  curveto
625 380 597 357 557 343  curveto
590 330 614 311 628 286  curveto
642 262 648 224 648 174  curveto
648 125 lineto
648 93 650 70 652 59  curveto
656 40 665 26 680 18  curveto
680 0 lineto
514 0 lineto
510 15 506 28 504 38  curveto
500 58 498 79 498 100  curveto
497 167 lineto
496 213 488 243 472 259  curveto
456 274 426 282 381 282  curveto
226 282 lineto
226 0 lineto
79 0 lineto
79 719 lineto
432 719 lineto
closepath
fill
		} def

	/S
		{
185 222 moveto
189 189 198 164 211 148  curveto
236 118 278 104 337 104  curveto
372 104 401 107 423 115  curveto
465 130 486 158 486 199  curveto
486 222 476 241 455 254  curveto
434 267 402 278 357 288  curveto
281 305 lineto
206 322 154 340 125 360  curveto
77 393 53 445 53 516  curveto
53 580 76 634 123 676  curveto
170 719 239 740 330 740  curveto
405 740 470 720 524 680  curveto
577 640 605 581 608 505  curveto
463 505 lineto
461 548 442 579 407 597  curveto
383 609 354 615 319 615  curveto
281 615 250 607 227 592  curveto
203 576 192 554 192 526  curveto
192 501 203 481 226 469  curveto
241 460 272 450 320 439  curveto
444 409 lineto
498 396 539 379 567 357  curveto
610 323 631 274 631 210  curveto
631 144 606 90 556 46  curveto
506 3 435 -18 343 -18  curveto
249 -18 175 2 122 45  curveto
68 88 41 147 41 222  curveto
closepath
331 741 moveto
fill
		} def

	/T
		{
599 719 moveto
599 592 lineto
383 592 lineto
383 0 lineto
232 0 lineto
232 592 lineto
16 592 lineto
16 719 lineto
closepath
fill
		} def

	/U
		{
76 719 moveto
229 719 lineto
229 277 lineto
229 227 234 191 246 168  curveto
264 128 304 108 365 108  curveto
426 108 466 128 484 168  curveto
496 191 501 227 501 277  curveto
501 719 lineto
654 719 lineto
654 277 lineto
654 200 642 141 619 98  curveto
574 20 490 -18 365 -18  curveto
241 -18 156 20 111 98  curveto
88 141 76 200 76 277  curveto
closepath
365 719 moveto
fill
		} def

	/V
		{
497 719 moveto
653 719 lineto
408 0 lineto
266 0 lineto
22 719 lineto
183 719 lineto
339 173 lineto
closepath
fill
		} def

	/W
		{
174 719 moveto
269 307 lineto
290 192 lineto
311 305 lineto
392 719 lineto
550 719 lineto
636 307 lineto
658 192 lineto
680 303 lineto
776 719 lineto
929 719 lineto
726 0 lineto
583 0 lineto
496 420 lineto
470 560 lineto
445 420 lineto
358 0 lineto
218 0 lineto
14 719 lineto
closepath
fill
		} def

	/X
		{
190 0 moveto
16 0 lineto
247 366 lineto
27 719 lineto
207 719 lineto
335 485 lineto
467 719 lineto
641 719 lineto
420 372 lineto
654 0 lineto
472 0 lineto
335 245 lineto
closepath
fill
		} def

	/Y
		{
486 719 moveto
657 719 lineto
416 270 lineto
416 0 lineto
266 0 lineto
266 270 lineto
17 719 lineto
194 719 lineto
343 406 lineto
closepath
337 719 moveto
fill
		} def

	/Z
		{
25 126 moveto
396 592 lineto
34 592 lineto
34 719 lineto
584 719 lineto
584 599 lineto
208 126 lineto
585 126 lineto
585 0 lineto
25 0 lineto
closepath
309 719 moveto
fill
		} def

	/bracketleft
		{
62 726 moveto
307 726 lineto
307 625 lineto
194 625 lineto
194 -90 lineto
307 -90 lineto
307 -192 lineto
62 -192 lineto
closepath
fill
		} def

	/backslash
		{
60 741 moveto
339 0 lineto
224 0 lineto
-54 741 lineto
closepath
fill
		} def

	/bracketright
		{
22 -90 moveto
136 -90 lineto
136 626 lineto
22 626 lineto
22 726 lineto
268 726 lineto
268 -192 lineto
22 -192 lineto
closepath
fill
		} def

	/asciicircum
		{
357 719 moveto
536 288 lineto
414 288 lineto
303 564 lineto
190 288 lineto
67 288 lineto
247 719 lineto
closepath
fill
		} def

	/underscore
		{
0 -125 moveto
0 -75 lineto
556 -75 lineto
556 -125 lineto
closepath
fill
		} def

	/quoteleft
		{
224 604 moveto
123 604 lineto
-24 750 lineto
130 750 lineto
closepath
141 546 moveto
fill
		} def

	/a
		{
358 258 moveto
349 253 340 248 331 245  curveto
322 241 310 238 294 235  curveto
263 229 lineto
234 224 213 218 200 210  curveto
179 198 168 178 168 151  curveto
168 128 175 110 188 100  curveto
201 89 217 84 236 84  curveto
266 84 293 93 319 110  curveto
344 128 357 160 358 207  curveto
closepath
273 323 moveto
299 326 318 331 329 335  curveto
348 344 358 357 358 375  curveto
358 397 351 412 336 420  curveto
321 428 298 433 269 433  curveto
236 433 213 424 199 408  curveto
189 396 183 380 180 359  curveto
45 359 lineto
48 406 61 444 84 474  curveto
121 521 184 544 274 544  curveto
332 544 384 533 429 510  curveto
474 487 497 443 497 379  curveto
497 135 lineto
497 118 497 97 498 73  curveto
499 55 502 43 506 36  curveto
511 30 518 24 527 20  curveto
527 0 lineto
375 0 lineto
371 10 368 20 367 30  curveto
365 39 364 50 363 62  curveto
344 41 321 23 296 9  curveto
266 -7 233 -16 195 -16  curveto
147 -16 107 -2 75 24  curveto
44 52 28 91 28 141  curveto
28 207 54 254 104 283  curveto
132 299 172 311 226 317  curveto
closepath
281 546 moveto
fill
		} def

	/b
		{
352 543 moveto
422 543 477 518 516 468  curveto
556 417 576 352 576 272  curveto
576 190 556 121 517 67  curveto
478 13 423 -14 354 -14  curveto
310 -14 274 -5 248 12  curveto
232 22 214 40 196 66  curveto
196 0 lineto
60 0 lineto
60 718 lineto
198 718 lineto
198 462 lineto
216 487 235 506 256 519  curveto
281 535 313 543 352 543  curveto
closepath
316 100 moveto
352 100 380 115 400 144  curveto
420 173 430 211 430 258  curveto
430 296 425 327 415 352  curveto
396 398 362 422 312 422  curveto
262 422 227 399 208 353  curveto
199 329 194 297 194 258  curveto
194 213 204 175 224 145  curveto
244 115 275 100 316 100  curveto
closepath
fill
		} def

	/c
		{
382 341 moveto
380 361 373 379 362 395  curveto
347 416 322 427 290 427  curveto
243 427 211 403 193 357  curveto
184 332 180 299 180 258  curveto
180 219 184 188 193 164  curveto
210 120 241 98 287 98  curveto
320 98 343 106 356 124  curveto
370 142 378 164 381 192  curveto
523 192 lineto
520 150 505 110 478 72  curveto
434 11 369 -18 284 -18  curveto
198 -18 135 6 95 57  curveto
54 108 34 174 34 255  curveto
34 346 56 417 101 468  curveto
146 519 207 544 286 544  curveto
352 544 407 529 449 500  curveto
492 470 517 417 525 341  curveto
closepath
288 546 moveto
fill
		} def

	/d
		{
261 544 moveto
293 544 322 537 347 523  curveto
372 509 392 489 408 464  curveto
408 718 lineto
549 718 lineto
549 0 lineto
414 0 lineto
414 73 lineto
394 42 371 19 346 4  curveto
320 -9 289 -16 251 -16  curveto
189 -16 136 8 94 58  curveto
52 109 30 173 30 252  curveto
30 343 51 414 93 466  curveto
135 518 191 544 261 544  curveto
closepath
291 100 moveto
330 100 360 115 381 144  curveto
401 173 412 211 412 258  curveto
412 323 395 369 362 397  curveto
342 414 319 423 292 423  curveto
251 423 221 407 202 377  curveto
183 346 174 308 174 262  curveto
174 213 184 174 203 144  curveto
222 115 252 100 291 100  curveto
closepath
fill
		} def

	/e
		{
274 431 moveto
242 431 217 421 199 401  curveto
182 381 171 353 166 319  curveto
382 319 lineto
380 356 369 384 349 403  curveto
329 422 304 431 274 431  curveto
closepath
274 546 moveto
319 546 359 538 394 521  curveto
430 504 459 478 482 442  curveto
503 411 516 374 522 333  curveto
526 308 527 273 527 227  curveto
163 227 lineto
165 174 181 136 213 115  curveto
232 101 255 95 282 95  curveto
311 95 334 103 352 119  curveto
362 128 370 140 378 156  curveto
520 156 lineto
516 124 500 92 471 60  curveto
425 8 361 -17 279 -17  curveto
212 -17 152 4 100 47  curveto
48 91 22 162 22 260  curveto
22 352 46 423 93 472  curveto
139 521 200 546 274 546  curveto
closepath
284 546 moveto
fill
		} def

	/f
		{
261 727 moveto
270 727 277 726 285 726  curveto
292 725 302 725 314 724  curveto
314 610 lineto
306 611 293 612 275 613  curveto
256 613 244 609 237 600  curveto
230 592 226 582 226 572  curveto
226 561 226 546 226 527  curveto
317 527 lineto
317 429 lineto
226 429 lineto
226 0 lineto
87 0 lineto
87 429 lineto
10 429 lineto
10 527 lineto
86 527 lineto
86 561 lineto
86 618 96 657 115 679  curveto
135 711 184 727 261 727  curveto
closepath
fill
		} def

	/g
		{
293 114 moveto
326 114 353 126 375 151  curveto
398 175 409 214 409 268  curveto
409 319 399 357 377 383  curveto
356 410 327 423 291 423  curveto
243 423 209 400 190 354  curveto
181 330 176 299 176 264  curveto
176 233 181 205 191 181  curveto
210 136 244 114 293 114  curveto
closepath
258 544 moveto
285 544 308 540 328 532  curveto
362 518 389 493 410 455  curveto
410 532 lineto
545 532 lineto
545 27 lineto
545 -41 534 -93 511 -127  curveto
471 -187 395 -217 282 -217  curveto
214 -217 159 -204 116 -177  curveto
73 -151 49 -111 44 -58  curveto
196 -58 lineto
200 -74 206 -86 215 -93  curveto
230 -105 255 -112 291 -112  curveto
341 -112 374 -95 391 -62  curveto
402 -40 408 -4 408 46  curveto
408 80 lineto
394 57 380 40 365 29  curveto
337 8 301 -2 257 -2  curveto
188 -2 134 21 93 69  curveto
52 117 32 182 32 264  curveto
32 343 51 410 91 464  curveto
130 517 186 544 258 544  curveto
closepath
303 546 moveto
fill
		} def

	/h
		{
358 545 moveto
391 545 421 540 447 528  curveto
474 517 496 500 514 476  curveto
528 456 537 436 541 415  curveto
544 394 545 360 545 312  curveto
545 0 lineto
403 0 lineto
403 323 lineto
403 352 398 375 389 393  curveto
376 417 352 430 316 430  curveto
280 430 252 417 233 393  curveto
214 368 204 333 204 288  curveto
204 0 lineto
65 0 lineto
65 717 lineto
204 717 lineto
204 462 lineto
224 493 248 515 274 527  curveto
301 539 329 545 358 545  curveto
closepath
fill
		} def

	/i
		{
208 595 moveto
66 595 lineto
66 724 lineto
208 724 lineto
closepath
66 532 moveto
208 532 lineto
208 0 lineto
66 0 lineto
closepath
fill
		} def

	/j
		{
210 595 moveto
71 595 lineto
71 724 lineto
210 724 lineto
closepath
4 -102 moveto
12 -102 17 -103 20 -103  curveto
24 -103 27 -103 29 -103  curveto
43 -103 53 -100 60 -93  curveto
67 -86 71 -73 71 -54  curveto
71 529 lineto
210 529 lineto
210 -57 lineto
210 -110 199 -150 178 -176  curveto
157 -201 116 -214 54 -214  curveto
49 -214 43 -214 35 -214  curveto
27 -214 16 -213 4 -213  curveto
closepath
fill
		} def

	/k
		{
63 717 moveto
200 717 lineto
200 329 lineto
373 529 lineto
545 529 lineto
359 326 lineto
553 0 lineto
385 0 lineto
257 227 lineto
200 167 lineto
200 0 lineto
63 0 lineto
closepath
fill
		} def

	/l
		{
207 0 moveto
67 0 lineto
67 719 lineto
207 719 lineto
closepath
fill
		} def

	/m
		{
659 543 moveto
683 543 706 539 729 530  curveto
751 521 772 505 791 482  curveto
805 463 816 441 821 414  curveto
824 396 826 369 826 335  curveto
825 0 lineto
682 0 lineto
682 338 lineto
682 359 679 375 672 388  curveto
660 413 637 425 604 425  curveto
566 425 539 409 524 377  curveto
517 361 513 340 513 316  curveto
513 0 lineto
373 0 lineto
373 316 lineto
373 348 370 371 363 385  curveto
352 411 329 424 294 424  curveto
255 424 228 411 214 385  curveto
207 371 203 349 203 320  curveto
203 0 lineto
62 0 lineto
62 531 lineto
197 531 lineto
197 453 lineto
215 481 231 500 246 512  curveto
273 533 308 543 351 543  curveto
392 543 425 534 450 517  curveto
470 500 485 479 496 453  curveto
514 484 536 507 563 521  curveto
592 536 624 543 659 543  curveto
closepath
fill
		} def

	/n
		{
359 544 moveto
414 544 459 530 494 501  curveto
529 472 547 425 547 358  curveto
547 0 lineto
404 0 lineto
404 323 lineto
404 351 401 373 393 388  curveto
379 415 353 429 315 429  curveto
268 429 235 409 218 369  curveto
209 347 204 320 204 288  curveto
204 0 lineto
65 0 lineto
65 531 lineto
200 531 lineto
200 453 lineto
218 480 235 500 250 512  curveto
279 534 315 544 359 544  curveto
closepath
308 546 moveto
fill
		} def

	/o
		{
303 98 moveto
344 98 375 112 397 141  curveto
419 170 430 211 430 265  curveto
430 318 419 359 397 388  curveto
375 417 344 431 303 431  curveto
263 431 231 417 209 388  curveto
187 359 176 318 176 265  curveto
176 211 187 170 209 141  curveto
231 112 263 98 303 98  curveto
closepath
576 265 moveto
576 187 553 120 508 64  curveto
463 9 395 -18 304 -18  curveto
212 -18 144 9 99 64  curveto
54 120 32 187 32 265  curveto
32 341 54 408 99 464  curveto
144 521 212 549 304 549  curveto
395 549 463 521 508 464  curveto
553 408 576 341 576 265  curveto
closepath
304 546 moveto
fill
		} def

	/p
		{
431 266 moveto
431 307 422 343 403 375  curveto
384 406 354 422 312 422  curveto
262 422 227 398 208 350  curveto
198 325 193 292 193 253  curveto
193 192 210 148 243 123  curveto
262 108 285 101 312 101  curveto
351 101 380 116 401 146  curveto
421 176 431 216 431 266  curveto
closepath
352 543 moveto
414 543 467 520 510 475  curveto
553 429 575 361 575 272  curveto
575 179 554 107 511 58  curveto
469 9 415 -15 349 -15  curveto
306 -15 271 -4 243 16  curveto
228 28 213 45 198 67  curveto
198 -209 lineto
61 -209 lineto
61 532 lineto
194 532 lineto
194 453 lineto
209 476 225 494 242 508  curveto
273 532 309 543 352 543  curveto
closepath
fill
		} def

	/q
		{
290 102 moveto
338 102 372 123 392 164  curveto
405 191 412 225 412 266  curveto
412 299 406 328 395 354  curveto
375 400 340 423 291 423  curveto
255 423 227 409 206 382  curveto
184 355 174 314 174 259  curveto
174 222 179 192 188 169  curveto
207 124 241 102 290 102  curveto
closepath
255 545 moveto
299 545 335 534 362 513  curveto
378 500 395 480 411 452  curveto
411 531 lineto
545 531 lineto
545 -210 lineto
408 -210 lineto
408 65 lineto
397 44 379 25 354 8  curveto
329 -8 295 -16 251 -16  curveto
189 -16 137 7 94 57  curveto
50 106 29 171 29 253  curveto
29 342 51 413 94 466  curveto
137 519 191 545 255 545  curveto
closepath
fill
		} def

	/r
		{
354 544 moveto
356 544 358 544 360 544  curveto
362 544 366 544 372 543  curveto
372 401 lineto
363 402 355 402 349 403  curveto
342 403 336 403 332 403  curveto
276 403 238 385 219 349  curveto
208 328 203 297 203 254  curveto
203 0 lineto
63 0 lineto
63 532 lineto
196 532 lineto
196 439 lineto
217 474 236 499 252 512  curveto
278 534 312 544 354 544  curveto
closepath
fill
		} def

	/s
		{
173 169 moveto
176 145 182 127 192 117  curveto
209 98 241 89 288 89  curveto
315 89 337 93 353 101  curveto
369 109 377 121 377 138  curveto
377 153 370 165 357 173  curveto
344 181 296 195 212 215  curveto
152 230 110 249 85 271  curveto
60 294 48 326 48 367  curveto
48 416 67 459 106 494  curveto
144 529 199 547 269 547  curveto
335 547 389 534 431 507  curveto
473 481 497 435 503 370  curveto
364 370 lineto
362 388 357 402 349 412  curveto
333 431 307 440 270 440  curveto
240 440 219 436 206 426  curveto
193 417 187 406 187 393  curveto
187 377 193 366 207 358  curveto
221 351 269 338 352 320  curveto
407 307 449 287 477 261  curveto
504 234 518 201 518 161  curveto
518 108 498 65 459 31  curveto
420 -1 359 -18 277 -18  curveto
193 -18 131 0 92 34  curveto
52 70 32 115 32 169  curveto
closepath
279 546 moveto
fill
		} def

	/t
		{
10 428 moveto
10 527 lineto
84 527 lineto
84 675 lineto
222 675 lineto
222 527 lineto
308 527 lineto
308 428 lineto
222 428 lineto
222 146 lineto
222 125 224 111 230 106  curveto
236 100 252 98 281 98  curveto
285 98 289 98 294 98  curveto
299 98 304 98 308 99  curveto
308 -4 lineto
242 -7 lineto
176 -9 131 1 107 26  curveto
92 42 84 67 84 100  curveto
84 428 lineto
closepath
fill
		} def

	/u
		{
203 532 moveto
203 211 lineto
203 181 207 158 214 143  curveto
227 116 251 102 289 102  curveto
336 102 369 121 386 160  curveto
395 180 400 208 400 242  curveto
400 532 lineto
541 532 lineto
541 0 lineto
406 0 lineto
406 75 lineto
404 73 401 68 396 60  curveto
391 52 385 45 377 39  curveto
356 19 335 6 314 0  curveto
294 -8 270 -11 243 -11  curveto
164 -11 111 16 83 73  curveto
68 104 61 150 61 211  curveto
61 532 lineto
closepath
301 546 moveto
fill
		} def

	/v
		{
393 532 moveto
542 532 lineto
350 0 lineto
203 0 lineto
12 532 lineto
168 532 lineto
279 139 lineto
closepath
fill
		} def

	/w
		{
315 532 moveto
457 532 lineto
538 148 lineto
621 532 lineto
766 532 lineto
611 0 lineto
468 0 lineto
385 387 lineto
300 0 lineto
156 0 lineto
6 532 lineto
156 532 lineto
239 150 lineto
closepath
fill
		} def

	/x
		{
12 0 moveto
194 269 lineto
20 531 lineto
190 531 lineto
279 376 lineto
366 531 lineto
532 531 lineto
357 271 lineto
539 0 lineto
365 0 lineto
273 159 lineto
181 0 lineto
closepath
fill
		} def

	/y
		{
86 -102 moveto
104 -103 lineto
117 -103 130 -103 143 -101  curveto
155 -99 165 -96 174 -90  curveto
182 -84 190 -73 197 -55  curveto
204 -38 206 -27 205 -23  curveto
10 532 lineto
165 532 lineto
281 139 lineto
391 532 lineto
539 532 lineto
356 8 lineto
321 -92 293 -154 272 -178  curveto
252 -203 211 -215 149 -215  curveto
137 -215 127 -215 120 -215  curveto
112 -214 101 -214 86 -213  curveto
closepath
274 546 moveto
fill
		} def

	/z
		{
34 418 moveto
34 532 lineto
466 532 lineto
466 416 lineto
196 114 lineto
475 114 lineto
475 0 lineto
16 0 lineto
16 108 lineto
289 418 lineto
closepath
250 546 moveto
fill
		} def

	/braceleft
		{
101 109 moveto
101 150 89 182 64 204  curveto
49 217 27 228 0 235  curveto
0 294 lineto
31 305 53 317 66 330  curveto
90 353 101 387 101 433  curveto
101 564 lineto
101 581 104 598 109 616  curveto
119 648 136 673 159 691  curveto
181 708 206 720 235 725  curveto
252 729 278 731 311 731  curveto
311 653 lineto
284 647 265 640 255 630  curveto
240 615 233 589 233 551  curveto
233 438 lineto
233 402 228 373 218 351  curveto
202 315 169 286 121 263  curveto
165 245 194 224 209 201  curveto
224 177 232 144 233 102  curveto
233 -20 lineto
233 -57 242 -83 259 -99  curveto
269 -108 286 -116 311 -124  curveto
311 -201 lineto
276 -200 lineto
229 -199 189 -185 154 -158  curveto
119 -132 101 -93 101 -42  curveto
closepath
fill
		} def

	/bar
		{
180 726 moveto
180 0 lineto
51 0 lineto
51 726 lineto
closepath
fill
		} def

	/braceright
		{
21 -201 moveto
21 -124 lineto
46 -116 63 -108 73 -98  curveto
89 -82 98 -56 99 -20  curveto
99 102 lineto
99 148 108 183 125 205  curveto
143 227 172 247 211 263  curveto
168 284 139 308 123 334  curveto
107 361 99 395 99 438  curveto
99 551 lineto
99 587 93 612 81 625  curveto
70 638 50 647 21 653  curveto
21 731 lineto
54 731 79 729 97 725  curveto
126 720 151 708 173 691  curveto
195 674 210 654 218 629  curveto
227 604 231 583 231 564  curveto
231 433 lineto
231 387 242 352 263 331  curveto
276 318 299 305 333 294  curveto
333 235 lineto
305 228 284 217 270 205  curveto
244 183 231 151 231 109  curveto
231 -42 lineto
231 -92 214 -130 180 -157  curveto
145 -185 104 -199 56 -200  curveto
closepath
fill
		} def

	/asciitilde
		{
1 148 moveto
7 187 15 221 25 249  curveto
35 277 48 299 63 317  curveto
79 336 95 350 112 357  curveto
129 365 147 369 165 369  curveto
172 369 183 368 195 366  curveto
215 362 234 358 251 351  curveto
365 307 lineto
379 302 392 298 404 296  curveto
417 294 426 293 433 293  curveto
455 293 472 301 484 318  curveto
497 335 506 355 512 379  curveto
595 379 lineto
586 318 568 266 541 223  curveto
514 180 477 158 431 158  curveto
422 158 412 159 402 161  curveto
383 164 360 171 333 182  curveto
231 220 lineto
222 224 210 227 196 230  curveto
183 233 173 234 166 234  curveto
147 234 131 227 117 213  curveto
102 199 92 177 86 148  curveto
1 148 lineto
closepath
fill
		} def

	/exclamdown
		{
262 -187 moveto
109 -187 lineto
109 -4 lineto
148 330 lineto
222 330 lineto
262 -4 lineto
closepath
258 388 moveto
113 388 lineto
113 529 lineto
258 529 lineto
closepath
fill
		} def

	/cent
		{
299 425 moveto
293 426 288 426 282 426  curveto
249 426 224 410 206 376  curveto
188 343 179 304 179 260  curveto
179 222 183 192 191 170  curveto
199 149 207 134 216 125  curveto
299 425 lineto
closepath
33 257 moveto
33 345 56 415 102 467  curveto
147 518 205 544 276 544  curveto
291 544 302 544 308 543  curveto
314 543 322 541 332 540  curveto
356 628 lineto
408 628 lineto
379 529 lineto
414 517 443 500 464 479  curveto
498 445 518 399 525 341  curveto
382 341 lineto
379 360 373 376 365 389  curveto
360 398 353 405 345 410  curveto
260 100 lineto
265 99 270 98 273 98  curveto
277 97 282 97 286 97  curveto
308 97 328 104 347 120  curveto
365 135 376 159 381 192  curveto
523 192 lineto
518 131 496 81 458 40  curveto
420 0 359 -20 273 -20  curveto
264 -20 256 -19 250 -19  curveto
243 -18 236 -17 226 -16  curveto
197 -119 lineto
143 -119 lineto
179 -1 lineto
138 14 103 44 75 88  curveto
47 133 33 189 33 257  curveto
closepath
fill
		} def

	/sterling
		{
32 85 moveto
55 98 79 118 104 146  curveto
130 174 142 202 142 229  curveto
142 243 139 260 134 278  curveto
131 288 126 302 120 320  curveto
33 320 lineto
33 375 lineto
88 375 lineto
73 404 62 430 55 452  curveto
48 474 44 498 44 524  curveto
44 574 65 619 107 659  curveto
148 698 207 718 284 718  curveto
348 718 403 701 450 665  curveto
497 630 522 570 525 486  curveto
393 486 lineto
389 519 382 545 370 564  curveto
353 592 324 606 283 606  curveto
252 606 229 597 211 578  curveto
193 559 185 538 185 513  curveto
185 499 188 483 194 467  curveto
200 451 214 420 235 375  curveto
375 375 lineto
375 320 lineto
256 320 lineto
258 307 259 297 260 288  curveto
260 280 261 271 261 263  curveto
261 231 251 202 232 176  curveto
220 159 196 134 159 100  curveto
185 110 204 116 217 119  curveto
237 124 256 126 275 126  curveto
287 126 298 125 309 124  curveto
321 122 333 119 345 115  curveto
365 109 lineto
374 106 381 104 387 103  curveto
393 102 399 102 403 102  curveto
418 102 435 106 456 115  curveto
467 120 482 127 500 137  curveto
540 28 lineto
523 18 500 7 471 -2  curveto
442 -12 414 -17 387 -17  curveto
372 -17 357 -15 342 -12  curveto
326 -8 309 -3 291 1  curveto
263 11 lineto
251 15 241 18 233 20  curveto
220 22 207 23 193 23  curveto
179 23 163 20 146 15  curveto
135 10 115 1 85 -11  curveto
closepath
fill
		} def

	/fraction
		{
-170 -18 moveto
254 705 lineto
333 705 lineto
-91 -18 lineto
closepath
fill
		} def

	/yen
		{
566 698 moveto
455 468 lineto
525 468 lineto
525 402 lineto
423 402 lineto
371 295 lineto
508 295 lineto
508 229 lineto
352 229 lineto
352 0 lineto
210 0 lineto
210 229 lineto
55 229 lineto
55 295 lineto
191 295 lineto
138 402 lineto
34 402 lineto
34 468 lineto
106 468 lineto
-10 698 lineto
154 698 lineto
284 394 lineto
408 698 lineto
closepath
fill
		} def

	/florin
		{
516 606 moveto
505 612 495 616 487 619  curveto
478 622 470 623 461 623  curveto
450 623 439 621 430 616  curveto
421 612 412 603 405 589  curveto
399 575 395 559 391 540  curveto
387 521 383 500 379 476  curveto
500 476 lineto
500 379 lineto
365 379 lineto
306 20 lineto
296 -42 281 -90 261 -125  curveto
228 -182 179 -210 116 -210  curveto
100 -210 83 -208 65 -205  curveto
46 -201 29 -196 14 -189  curveto
39 -79 lineto
52 -86 61 -91 68 -93  curveto
75 -96 83 -97 92 -97  curveto
115 -97 131 -87 140 -67  curveto
149 -48 159 -10 168 45  curveto
225 379 lineto
104 379 lineto
104 476 lineto
240 476 lineto
259 570 277 632 296 663  curveto
325 711 373 735 440 735  curveto
459 735 476 734 491 731  curveto
506 728 522 723 540 717  curveto
closepath
fill
		} def

	/section
		{
125 424 moveto
114 431 103 444 91 463  curveto
78 486 72 512 72 541  curveto
72 590 90 631 124 666  curveto
159 702 209 719 276 719  curveto
355 719 412 693 445 641  curveto
463 613 473 578 476 536  curveto
350 536 lineto
348 556 343 571 335 583  curveto
322 603 300 613 270 613  curveto
249 613 232 608 219 598  curveto
206 588 200 573 200 554  curveto
200 532 211 515 234 504  curveto
257 493 298 474 359 446  curveto
465 396 519 338 519 271  curveto
519 230 506 196 482 169  curveto
469 154 450 140 424 126  curveto
442 111 455 96 464 83  curveto
479 59 486 31 486 0  curveto
486 -63 465 -110 422 -143  curveto
379 -176 331 -192 277 -192  curveto
219 -192 170 -177 130 -148  curveto
89 -119 66 -71 61 -4  curveto
192 -4 lineto
197 -28 203 -46 212 -57  curveto
226 -75 249 -84 281 -84  curveto
300 -84 317 -78 331 -66  curveto
345 -54 352 -38 352 -19  curveto
352 -2 345 12 330 25  curveto
315 38 274 62 206 97  curveto
146 126 105 150 83 169  curveto
49 199 31 236 31 279  curveto
31 320 43 354 66 380  curveto
80 396 99 411 125 424  curveto
closepath
397 237 moveto
397 252 389 266 374 279  curveto
365 286 353 293 338 301  curveto
192 375 lineto
175 368 163 358 156 344  curveto
152 335 149 325 149 314  curveto
149 298 156 284 170 272  curveto
179 264 193 255 213 245  curveto
352 172 lineto
363 176 372 183 379 192  curveto
391 205 397 220 397 237  curveto
closepath
fill
		} def

	/currency
		{
163 350 moveto
163 318 174 291 196 269  curveto
218 246 245 235 277 235  curveto
309 235 336 246 358 269  curveto
381 291 392 318 392 350  curveto
392 381 381 409 358 431  curveto
336 453 309 464 277 464  curveto
245 464 218 453 196 431  curveto
174 409 163 381 163 350  curveto
closepath
60 350 moveto
60 389 71 427 94 464  curveto
26 533 lineto
94 601 lineto
163 533 lineto
200 556 238 567 277 567  curveto
316 567 355 556 392 533  curveto
460 601 lineto
529 533 lineto
460 464 lineto
484 427 495 389 495 350  curveto
495 311 484 272 460 235  curveto
529 166 lineto
460 98 lineto
392 166 lineto
355 143 316 132 277 132  curveto
238 132 200 143 163 166  curveto
94 98 lineto
26 166 lineto
94 235 lineto
71 272 60 311 60 350  curveto
closepath
fill
		} def

	/quotesingle
		{
181 719 moveto
157 422 lineto
72 422 lineto
48 719 lineto
closepath
fill
		} def

	/quotedblleft
		{
299 555 moveto
299 604 311 643 335 671  curveto
359 699 392 717 436 726  curveto
436 675 lineto
403 665 381 647 369 621  curveto
363 607 360 593 361 580  curveto
438 580 lineto
438 452 lineto
299 452 lineto
closepath
67 555 moveto
67 604 79 642 102 670  curveto
126 699 159 717 204 726  curveto
204 675 lineto
171 665 149 647 137 622  curveto
131 608 129 594 130 580  curveto
207 580 lineto
207 452 lineto
67 452 lineto
closepath
fill
		} def

	/guillemotleft
		{
85 333 moveto
252 476 lineto
252 360 lineto
152 274 lineto
252 189 lineto
252 73 lineto
85 216 lineto
closepath
301 333 moveto
468 476 lineto
468 360 lineto
369 274 lineto
468 189 lineto
468 73 lineto
301 216 lineto
closepath
fill
		} def

	/guilsinglleft
		{
83 333 moveto
250 476 lineto
250 360 lineto
150 274 lineto
250 189 lineto
250 73 lineto
83 216 lineto
closepath
fill
		} def

	/guilsinglright
		{
250 216 moveto
83 73 lineto
83 189 lineto
182 274 lineto
83 360 lineto
83 476 lineto
250 333 lineto
closepath
fill
		} def

	/fi
		{
403 724 moveto
540 724 lineto
540 597 lineto
403 597 lineto
closepath
403 529 moveto
542 529 lineto
542 0 lineto
403 0 lineto
closepath
264 727 moveto
273 727 281 726 290 726  curveto
299 725 308 724 317 724  curveto
317 610 lineto
311 611 305 611 298 611  curveto
292 611 285 611 276 611  curveto
254 611 241 605 236 593  curveto
231 581 229 562 229 537  curveto
229 527 lineto
321 527 lineto
321 429 lineto
229 429 lineto
229 0 lineto
91 0 lineto
91 429 lineto
13 429 lineto
13 527 lineto
89 527 lineto
89 561 lineto
89 618 102 660 127 687  curveto
149 714 195 727 264 727  curveto
closepath
fill
		} def

	/fl
		{
403 719 moveto
542 719 lineto
542 0 lineto
403 0 lineto
closepath
264 727 moveto
273 727 281 726 290 726  curveto
299 725 308 724 317 724  curveto
317 610 lineto
311 611 305 611 298 611  curveto
292 611 285 611 276 611  curveto
254 611 241 605 236 593  curveto
231 581 229 562 229 537  curveto
229 527 lineto
321 527 lineto
321 429 lineto
229 429 lineto
229 0 lineto
91 0 lineto
91 429 lineto
13 429 lineto
13 527 lineto
89 527 lineto
89 561 lineto
89 618 102 660 127 687  curveto
149 714 195 727 264 727  curveto
closepath
fill
		} def

	/endash
		{
22 344 moveto
303 344 lineto
303 212 lineto
22 212 lineto
closepath
fill
		} def

	/dagger
		{
208 709 moveto
343 709 lineto
343 489 lineto
518 489 lineto
518 376 lineto
343 376 lineto
343 -180 lineto
208 -180 lineto
208 376 lineto
34 376 lineto
34 486 lineto
208 486 lineto
closepath
fill
		} def

	/daggerdbl
		{
209 705 moveto
341 705 lineto
341 496 lineto
518 496 lineto
518 385 lineto
341 385 lineto
341 142 lineto
518 142 lineto
518 33 lineto
341 32 lineto
341 -180 lineto
209 -180 lineto
209 33 lineto
34 33 lineto
34 143 lineto
209 143 lineto
209 385 lineto
34 385 lineto
34 496 lineto
209 496 lineto
closepath
fill
		} def

	/periodcentered
		{
218 350 moveto
218 328 210 309 194 293  curveto
178 277 159 269 137 269  curveto
114 269 95 277 79 293  curveto
63 309 55 328 55 350  curveto
55 372 63 391 79 407  curveto
95 423 114 431 136 431  curveto
158 431 178 423 194 407  curveto
210 392 218 373 218 350  curveto
closepath
fill
		} def

	/paragraph
		{
463 -180 moveto
365 -180 lineto
365 636 lineto
269 636 lineto
269 -180 lineto
170 -180 lineto
170 241 lineto
109 241 60 262 24 304  curveto
-11 346 -29 403 -29 474  curveto
-29 543 -9 602 30 649  curveto
70 696 129 719 207 719  curveto
524 719 lineto
524 636 lineto
463 636 lineto
closepath
fill
		} def

	/bullet
		{
286 358 moveto
286 327 276 301 256 280  curveto
235 260 209 250 178 250  curveto
147 250 121 260 101 280  curveto
80 301 70 327 70 358  curveto
70 389 80 415 101 435  curveto
121 455 147 465 178 465  curveto
209 465 235 455 256 435  curveto
276 415 286 389 286 358  curveto
closepath
fill
		} def

	/quotesinglbase
		{
73 -111 moveto
101 -102 120 -90 131 -74  curveto
142 -59 147 -34 147 0  curveto
71 0 lineto
71 141 lineto
212 141 lineto
212 25 lineto
212 -12 208 -41 201 -62  curveto
188 -94 169 -119 143 -136  curveto
128 -145 104 -155 73 -164  curveto
closepath
fill
		} def

	/quotedblbase
		{
73 -111 moveto
101 -102 120 -90 131 -74  curveto
142 -59 147 -34 147 0  curveto
71 0 lineto
71 141 lineto
212 141 lineto
212 25 lineto
212 -12 208 -41 201 -62  curveto
188 -94 169 -119 143 -136  curveto
128 -145 104 -155 73 -164  curveto
closepath
292 -111 moveto
324 -102 346 -85 357 -60  curveto
363 -45 366 -25 366 0  curveto
290 0 lineto
290 141 lineto
431 141 lineto
431 25 lineto
430 -14 426 -45 419 -64  curveto
412 -87 396 -108 374 -126  curveto
351 -145 324 -157 292 -164  curveto
closepath
fill
		} def

	/quotedblright
		{
306 494 moveto
340 504 362 522 373 549  curveto
378 560 380 573 380 588  curveto
304 588 lineto
304 717 lineto
442 717 lineto
442 614 lineto
442 567 431 529 408 500  curveto
386 470 352 451 306 442  curveto
closepath
76 494 moveto
109 504 131 522 142 547  curveto
148 561 151 574 150 588  curveto
73 588 lineto
73 717 lineto
212 717 lineto
212 614 lineto
212 566 201 527 177 499  curveto
154 470 120 451 76 442  curveto
closepath
fill
		} def

	/guillemotright
		{
383 216 moveto
216 73 lineto
216 189 lineto
315 274 lineto
216 360 lineto
216 476 lineto
383 333 lineto
closepath
166 216 moveto
0 73 lineto
0 189 lineto
99 274 lineto
0 360 lineto
0 476 lineto
166 333 lineto
closepath
fill
		} def

	/ellipsis
		{
425 0 moveto
425 145 lineto
575 145 lineto
575 0 lineto
closepath
92 0 moveto
92 145 lineto
241 145 lineto
241 0 lineto
closepath
758 0 moveto
758 145 lineto
908 145 lineto
908 0 lineto
closepath
fill
		} def

	/perthousand
		{
163 625 moveto
145 625 131 619 119 607  curveto
107 595 101 581 101 564  curveto
101 547 107 533 119 521  curveto
131 509 146 503 163 503  curveto
180 503 194 509 206 521  curveto
218 533 224 547 224 564  curveto
224 581 218 595 206 607  curveto
194 619 180 625 163 625  curveto
closepath
485 731 moveto
557 731 lineto
150 -18 lineto
78 -18 lineto
closepath
163 725 moveto
207 725 245 709 276 678  curveto
308 647 323 609 323 564  curveto
323 520 308 482 276 450  curveto
245 419 207 403 163 403  curveto
118 403 80 419 49 450  curveto
17 482 1 520 1 564  curveto
1 609 17 647 49 678  curveto
80 709 118 725 163 725  curveto
closepath
839 199 moveto
822 199 808 193 796 182  curveto
784 170 778 155 778 138  curveto
778 121 784 107 796 95  curveto
808 83 822 77 839 77  curveto
856 77 871 83 883 95  curveto
895 107 901 121 901 138  curveto
901 155 895 170 883 182  curveto
871 193 856 199 839 199  curveto
closepath
679 138 moveto
679 183 694 221 726 252  curveto
757 283 795 299 839 299  curveto
884 299 922 283 953 252  curveto
985 220 1000 182 1000 138  curveto
1000 94 985 56 953 24  curveto
922 -6 884 -22 839 -22  curveto
795 -22 757 -6 726 24  curveto
694 56 679 94 679 138  curveto
closepath
477 77 moveto
493 77 508 83 520 95  curveto
532 107 539 121 539 138  curveto
539 155 532 170 520 182  curveto
508 193 493 199 477 199  curveto
460 199 445 193 434 182  curveto
422 170 416 155 416 138  curveto
416 121 422 107 434 95  curveto
445 83 460 77 477 77  curveto
closepath
638 138 moveto
638 94 622 56 591 24  curveto
560 -6 522 -22 477 -22  curveto
433 -22 395 -6 364 24  curveto
332 56 316 94 316 138  curveto
316 183 332 221 364 252  curveto
395 283 433 299 477 299  curveto
522 299 560 283 591 252  curveto
622 220 638 182 638 138  curveto
closepath
fill
		} def

	/questiondown
		{
370 388 moveto
224 388 lineto
224 529 lineto
370 529 lineto
closepath
548 36 moveto
544 -54 518 -116 469 -148  curveto
420 -181 367 -197 310 -197  curveto
235 -197 174 -179 125 -144  curveto
77 -108 53 -56 53 11  curveto
53 53 63 89 84 118  curveto
97 136 121 159 156 186  curveto
190 212 lineto
209 227 222 244 228 264  curveto
232 276 234 295 234 321  curveto
366 321 lineto
364 267 359 229 350 208  curveto
342 186 320 162 285 135  curveto
250 107 lineto
229 91 216 74 208 56  curveto
204 45 202 32 202 18  curveto
202 -11 210 -35 228 -52  curveto
245 -70 269 -79 299 -79  curveto
343 -79 374 -61 393 -25  curveto
402 -6 407 14 407 36  curveto
548 36 lineto
closepath
fill
		} def

	/grave
		{
224 604 moveto
123 604 lineto
-24 750 lineto
130 750 lineto
closepath
141 546 moveto
fill
		} def

	/acute
		{
306 750 moveto
158 604 lineto
57 604 lineto
151 750 lineto
closepath
140 546 moveto
fill
		} def

	/circumflex
		{
317 604 moveto
204 604 lineto
141 686 lineto
77 604 lineto
-36 604 lineto
78 750 lineto
203 750 lineto
closepath
141 546 moveto
fill
		} def

	/tilde
		{
77 733 moveto
86 733 95 732 103 730  curveto
111 728 119 726 125 724  curveto
170 707 lineto
184 702 193 699 197 698  curveto
201 696 206 696 211 696  curveto
227 696 238 700 244 708  curveto
251 717 255 726 258 738  curveto
323 738 lineto
317 704 306 675 288 652  curveto
271 629 245 617 212 617  curveto
202 617 187 620 169 625  curveto
158 627 148 630 138 633  curveto
99 646 lineto
93 648 88 650 83 651  curveto
77 651 72 652 67 652  curveto
55 652 44 648 37 641  curveto
29 634 23 623 20 610  curveto
-42 610 lineto
-35 644 -26 669 -15 687  curveto
5 717 36 733 77 733  curveto
closepath
140 546 moveto
fill
		} def

	/macron
		{
-32 709 moveto
314 709 lineto
314 635 lineto
-32 635 lineto
closepath
fill
		} def

	/breve
		{
310 750 moveto
305 700 289 663 260 639  curveto
231 616 191 604 141 604  curveto
91 604 51 616 22 639  curveto
-6 663 -22 700 -26 750  curveto
39 750 lineto
43 720 59 699 85 688  curveto
100 682 119 679 141 679  curveto
163 679 182 682 197 688  curveto
223 699 239 720 244 750  curveto
310 750 lineto
closepath
141 546 moveto
fill
		} def

	/dotaccent
		{
75 729 moveto
202 729 lineto
202 613 lineto
75 613 lineto
closepath
138 546 moveto
fill
		} def

	/dieresis
		{
174 729 moveto
301 729 lineto
301 613 lineto
174 613 lineto
closepath
-20 729 moveto
106 729 lineto
106 613 lineto
-20 613 lineto
closepath
140 546 moveto
fill
		} def

	/ring
		{
80 704 moveto
80 688 86 675 97 663  curveto
109 652 122 646 138 646  curveto
154 646 168 652 179 663  curveto
190 675 196 688 196 704  curveto
196 720 190 734 179 745  curveto
168 756 154 762 138 762  curveto
122 762 109 756 97 745  curveto
86 734 80 720 80 704  curveto
closepath
32 704 moveto
32 733 42 758 63 779  curveto
84 800 109 811 138 811  curveto
167 811 193 800 213 779  curveto
234 758 245 733 245 704  curveto
245 675 234 650 213 629  curveto
193 608 167 598 138 598  curveto
109 598 84 608 63 629  curveto
42 650 32 675 32 704  curveto
closepath
138 546 moveto
fill
		} def

	/cedilla
		{
158 -58 moveto
185 -58 206 -64 221 -77  curveto
237 -90 245 -108 245 -132  curveto
245 -162 232 -186 208 -203  curveto
184 -221 152 -229 114 -229  curveto
97 -229 77 -226 54 -219  curveto
43 -216 28 -211 8 -204  curveto
27 -162 lineto
45 -167 58 -171 65 -172  curveto
81 -176 93 -178 103 -178  curveto
123 -178 137 -174 145 -166  curveto
153 -157 158 -149 158 -140  curveto
158 -126 153 -116 144 -111  curveto
134 -105 124 -103 113 -103  curveto
107 -103 101 -103 94 -105  curveto
88 -106 80 -108 72 -111  curveto
9 -54 lineto
110 0 lineto
164 0 lineto
121 -63 lineto
131 -61 139 -60 144 -59  curveto
148 -58 153 -58 158 -58  curveto
closepath
fill
		} def

	/hungarumlaut
		{
334 718 moveto
186 426 lineto
85 426 lineto
179 718 lineto
closepath
583 718 moveto
435 426 lineto
334 426 lineto
428 718 lineto
closepath
fill
		} def

	/ogonek
		{
238 0 moveto
205 -23 lineto
183 -39 166 -53 155 -65  curveto
145 -77 139 -90 139 -104  curveto
139 -119 145 -131 155 -139  curveto
166 -148 179 -152 195 -152  curveto
202 -152 210 -151 218 -149  curveto
226 -147 235 -145 245 -141  curveto
245 -211 lineto
230 -217 218 -221 208 -223  curveto
190 -227 171 -229 148 -229  curveto
114 -229 86 -220 64 -201  curveto
43 -182 32 -159 32 -133  curveto
32 -103 45 -76 73 -51  curveto
89 -36 114 -19 150 0  curveto
closepath
fill
		} def

	/caron
		{
78 604 moveto
-36 750 lineto
77 750 lineto
141 667 lineto
204 750 lineto
317 750 lineto
203 604 lineto
closepath
141 546 moveto
fill
		} def

	/emdash
		{
22 344 moveto
303 344 lineto
303 212 lineto
22 212 lineto
closepath
fill
		} def

	/AE
		{
432 594 moveto
367 594 lineto
256 270 lineto
432 270 lineto
closepath
270 717 moveto
951 717 lineto
951 592 lineto
580 592 lineto
580 437 lineto
914 437 lineto
914 314 lineto
580 314 lineto
580 126 lineto
958 126 lineto
958 0 lineto
432 0 lineto
432 152 lineto
217 152 lineto
165 0 lineto
8 0 lineto
closepath
fill
		} def

	/ordfeminine
		{
234 571 moveto
229 567 223 564 218 562  curveto
214 560 206 559 196 557  curveto
173 554 lineto
149 550 133 544 124 536  curveto
114 528 110 518 110 505  curveto
110 492 114 482 123 476  curveto
132 469 143 466 157 466  curveto
168 466 180 468 193 474  curveto
202 478 208 482 213 486  curveto
220 491 224 496 228 503  curveto
231 509 233 522 234 540  curveto
closepath
203 613 moveto
212 614 220 616 226 621  curveto
231 625 234 631 234 639  curveto
234 654 227 665 211 670  curveto
203 674 191 675 175 675  curveto
158 675 145 672 137 664  curveto
128 657 122 646 119 631  curveto
31 631 lineto
35 661 43 684 57 701  curveto
80 728 118 741 173 741  curveto
213 741 243 737 265 729  curveto
304 715 323 683 323 634  curveto
323 477 lineto
323 464 325 454 327 445  curveto
330 436 335 431 343 428  curveto
343 410 lineto
246 410 lineto
243 416 241 421 240 427  curveto
239 433 238 439 238 447  curveto
221 433 207 422 195 416  curveto
175 405 153 400 129 400  curveto
84 400 53 414 35 441  curveto
24 457 19 476 19 498  curveto
19 533 32 560 59 579  curveto
77 591 104 600 141 604  curveto
closepath
fill
		} def

	/Lslash
		{
583 0 moveto
76 0 lineto
76 276 lineto
-7 223 lineto
-7 317 lineto
76 369 lineto
76 719 lineto
226 719 lineto
226 459 lineto
375 548 lineto
375 457 lineto
226 367 lineto
226 129 lineto
583 129 lineto
closepath
fill
		} def

	/Oslash
		{
533 555 moveto
520 570 502 583 480 594  curveto
457 607 427 614 393 614  curveto
323 614 273 591 243 545  curveto
212 499 197 437 197 360  curveto
197 328 200 299 206 272  curveto
209 257 215 237 224 214  curveto
533 555 lineto
closepath
257 166 moveto
277 145 298 129 321 120  curveto
344 111 368 107 393 107  curveto
462 107 512 133 543 186  curveto
573 238 588 296 588 360  curveto
588 382 587 403 584 423  curveto
580 454 573 480 564 503  curveto
257 166 lineto
closepath
393 741 moveto
435 741 477 734 518 720  curveto
559 705 595 685 626 658  curveto
707 745 lineto
748 705 lineto
666 614 lineto
684 591 701 560 716 520  curveto
730 478 738 425 738 360  curveto
738 248 706 156 642 84  curveto
578 14 495 -20 393 -20  curveto
353 -20 313 -13 274 -1  curveto
234 10 197 31 161 62  curveto
76 -27 lineto
34 11 lineto
123 104 lineto
104 129 88 161 73 200  curveto
56 246 48 299 48 360  curveto
48 473 83 570 154 650  curveto
215 711 295 741 393 741  curveto
closepath
fill
		} def

	/OE
		{
354 102 moveto
390 102 420 112 445 132  curveto
469 151 481 172 481 195  curveto
481 514 lineto
481 540 470 562 448 580  curveto
426 599 394 608 352 608  curveto
294 608 251 583 224 532  curveto
197 482 183 421 183 351  curveto
183 283 197 225 226 176  curveto
254 127 297 102 354 102  curveto
closepath
36 358 moveto
36 470 66 565 126 645  curveto
180 705 247 734 328 734  curveto
369 734 405 727 436 711  curveto
452 702 470 689 490 669  curveto
490 717 lineto
960 717 lineto
960 592 lineto
626 592 lineto
626 435 lineto
937 435 lineto
937 314 lineto
626 314 lineto
626 126 lineto
960 126 lineto
960 0 lineto
490 0 lineto
490 49 lineto
473 23 451 6 423 -3  curveto
395 -13 364 -18 329 -18  curveto
247 -18 180 11 126 71  curveto
66 151 36 246 36 358  curveto
closepath
fill
		} def

	/ordmasculine
		{
183 471 moveto
211 471 231 480 244 498  curveto
258 516 264 541 264 571  curveto
264 601 258 625 244 644  curveto
231 662 211 671 183 671  curveto
155 671 135 662 121 644  curveto
107 625 100 601 100 571  curveto
100 541 107 516 121 498  curveto
135 480 155 471 183 471  curveto
closepath
360 571 moveto
360 519 344 478 313 447  curveto
282 416 238 400 183 400  curveto
128 400 84 416 53 447  curveto
22 478 6 519 6 571  curveto
6 622 22 664 53 695  curveto
84 726 128 742 183 742  curveto
238 742 282 726 313 695  curveto
344 664 360 622 360 571  curveto
closepath
fill
		} def

	/ae
		{
710 321 moveto
708 355 698 382 681 403  curveto
663 423 637 433 603 433  curveto
567 433 541 424 522 406  curveto
504 387 494 359 492 321  curveto
closepath
363 254 moveto
356 249 350 246 344 243  curveto
339 241 326 238 307 234  curveto
254 224 lineto
223 217 203 211 192 204  curveto
175 192 166 173 166 145  curveto
166 130 172 116 183 103  curveto
194 89 214 83 241 83  curveto
270 83 293 88 312 98  curveto
346 117 363 151 363 201  curveto
closepath
292 322 moveto
314 326 330 330 340 335  curveto
356 344 364 357 364 374  curveto
364 399 351 417 325 426  curveto
311 431 292 434 269 434  curveto
233 434 208 423 194 403  curveto
186 393 182 377 181 358  curveto
45 358 lineto
49 431 79 483 137 513  curveto
175 533 223 543 282 543  curveto
324 543 361 536 394 522  curveto
411 514 430 502 450 486  curveto
470 503 492 517 518 528  curveto
544 538 574 543 607 543  curveto
715 543 789 499 827 410  curveto
847 363 856 303 854 231  curveto
490 231 lineto
490 194 495 166 503 146  curveto
520 111 551 93 597 93  curveto
623 93 646 97 665 106  curveto
684 115 698 133 708 159  curveto
849 159 lineto
845 127 829 94 800 62  curveto
754 8 688 -17 602 -17  curveto
558 -17 520 -9 489 7  curveto
458 23 433 45 416 71  curveto
392 40 363 17 329 3  curveto
296 -10 257 -18 213 -18  curveto
148 -18 100 -2 71 29  curveto
41 61 27 99 27 144  curveto
27 204 49 248 94 275  curveto
118 290 156 302 207 310  curveto
closepath
fill
		} def

	/dotlessi
		{
66 532 moveto
208 532 lineto
208 0 lineto
66 0 lineto
closepath
137 546 moveto
fill
		} def

	/lslash
		{
207 0 moveto
67 0 lineto
67 277 lineto
-11 226 lineto
-11 313 lineto
67 364 lineto
67 719 lineto
207 719 lineto
207 450 lineto
286 500 lineto
286 415 lineto
207 364 lineto
closepath
fill
		} def

	/oslash
		{
394 394 moveto
382 408 365 419 342 425  curveto
328 429 315 431 301 431  curveto
263 431 232 417 210 387  curveto
187 358 176 318 176 268  curveto
176 252 177 236 180 220  curveto
182 204 186 190 191 179  curveto
394 394 lineto
closepath
217 136 moveto
230 122 242 113 251 108  curveto
266 101 285 97 308 97  curveto
348 97 378 112 399 144  curveto
419 175 430 215 430 263  curveto
430 279 429 292 427 302  curveto
426 313 423 329 418 350  curveto
217 136 lineto
closepath
576 269 moveto
576 183 551 113 502 60  curveto
452 6 384 -20 298 -20  curveto
255 -20 217 -12 183 1  curveto
164 9 144 22 122 39  curveto
56 -30 lineto
20 0 lineto
89 70 lineto
67 100 52 133 44 168  curveto
36 203 32 235 32 264  curveto
32 346 55 413 103 468  curveto
151 522 214 549 293 549  curveto
340 549 377 544 406 534  curveto
434 524 461 509 485 489  curveto
553 560 lineto
587 527 lineto
518 454 lineto
539 426 554 396 563 364  curveto
571 331 576 300 576 269  curveto
closepath
fill
		} def

	/oe
		{
291 93 moveto
338 93 371 109 391 141  curveto
410 173 419 213 419 262  curveto
419 314 410 356 392 386  curveto
373 416 340 431 294 431  curveto
243 431 208 408 189 360  curveto
179 336 174 304 174 264  curveto
174 208 184 166 204 137  curveto
223 108 253 93 291 93  curveto
closepath
294 543 moveto
341 543 380 536 410 522  curveto
440 508 465 489 485 466  curveto
511 491 534 509 553 519  curveto
584 535 622 543 666 543  curveto
708 543 745 535 778 519  curveto
812 502 840 478 863 447  curveto
882 422 895 389 901 349  curveto
907 323 909 284 909 231  curveto
545 231 lineto
547 190 558 156 576 132  curveto
595 107 622 94 656 94  curveto
685 94 709 99 727 108  curveto
744 117 757 134 763 157  curveto
902 157 lineto
896 111 872 70 830 35  curveto
789 0 730 -16 653 -16  curveto
609 -16 571 -7 538 10  curveto
519 20 499 37 476 60  curveto
458 39 439 23 419 12  curveto
384 -7 341 -17 289 -17  curveto
209 -17 146 8 100 60  curveto
53 111 30 179 30 261  curveto
30 350 55 419 103 469  curveto
152 519 215 543 294 543  curveto
closepath
768 321 moveto
767 348 762 370 752 387  curveto
734 419 701 436 654 436  curveto
632 436 613 431 597 421  curveto
565 403 549 369 547 321  curveto
768 321 lineto
closepath
fill
		} def

	/germandbls
		{
66 505 moveto
66 566 76 613 96 645  curveto
131 702 199 731 300 731  curveto
370 731 427 714 470 680  curveto
513 646 534 600 534 542  curveto
534 521 531 501 525 485  curveto
513 454 492 429 460 410  curveto
501 393 530 369 548 338  curveto
566 307 575 271 575 229  curveto
575 169 556 114 519 63  curveto
482 12 418 -13 327 -13  curveto
323 -13 315 -12 306 -11  curveto
296 -11 286 -9 275 -7  curveto
275 104 lineto
282 103 288 102 293 102  curveto
298 102 302 102 306 102  curveto
358 102 394 117 414 147  curveto
427 166 434 193 434 225  curveto
434 273 417 306 383 325  curveto
363 335 330 343 282 347  curveto
282 444 lineto
317 444 341 448 355 455  curveto
379 467 391 492 391 529  curveto
391 561 381 583 363 597  curveto
345 612 322 619 296 619  curveto
255 619 229 605 216 577  curveto
208 561 204 531 204 489  curveto
204 0 lineto
66 0 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/Helvetica-Bold exch definefont pop
/Helvetica-Bold findfont 15.0 scalefont setfont
(0.1) show
Q
5.0 5.0 translate
Q
q
1 364 305 OPL
364 310
-5.0 -5.0 translate
359.0 330.0 moveto
q 1 -1 scale
/Helvetica-Bold findfont 15.0 scalefont setfont
(0.2) show
Q
5.0 5.0 translate
Q
q
1 404 305 OPL
404 310
-5.0 -5.0 translate
399.0 330.0 moveto
q 1 -1 scale
/Helvetica-Bold findfont 15.0 scalefont setfont
(0.3) show
Q
5.0 5.0 translate
Q
q
1 433 305 OPL
433 310
-5.0 -5.0 translate
427.0 330.0 moveto
q 1 -1 scale
/Helvetica-Bold findfont 15.0 scalefont setfont
(0.4) show
Q
5.0 5.0 translate
Q
q
1 455 305 OPL
455 310
-5.0 -5.0 translate
449.0 330.0 moveto
q 1 -1 scale
/Helvetica-Bold findfont 15.0 scalefont setfont
(0.5) show
Q
5.0 5.0 translate
Q
Q
q
1 67 29 OPL
64 29
1 67 72 OPL
64 72
1 67 114 OPL
64 114
1 67 157 OPL
64 157
1 67 199 OPL
64 199
1 67 241 OPL
64 241
1 67 284 OPL
64 284
1 67 305 OPL
67 8
1 455 305 OPL
455 8
Q
[ 0.0 -1.0 1.0 0.0 -142.0 170.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
-30 148 78 17 rc
-26.0 162.0 moveto
q 1 -1 scale
/TimesNewRoman-Bold findfont 15.0 scalefont setfont
(Magnitude) show
Q
Q
newpath
-180.0 147.0 m
-180.0 613.0 l
165.0 613.0 l
165.0 147.0 l
h
W
Q
[ 0.0 -1.0 1.0 0.0 -142.0 170.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
[ 1.0 0.0 0.0 1.0 5.0 5.0 ] defaultmatrix matrix concatmatrix setmatrix
q
q
1 67 305 OPL
61 305
-5.0 -5.0 translate
q
27 302 9 16 rc
27.0 315.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -206 1090 806 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -206 1090 806
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 1000.0 def
		/quotedbl 373.53515625 def
		/numbersign 792.0074462890625 def
		/dollar 449.9969482421875 def
		/percent 500.0 def
		/ampersand 1000.0 def
		/quoteright 229.00390625 def
		/parenleft 1000.0 def
		/parenright 1000.0 def
		/asterisk 1000.0 def
		/plus 1000.0 def
		/comma 660.003662109375 def
		/hyphen 1089.996337890625 def
		/period 1089.996337890625 def
		/slash 1089.996337890625 def
		/zero 1089.996337890625 def
		/one 1089.996337890625 def
		/two 1000.0 def
		/three 1000.0 def
		/four 1000.0 def
		/five 1000.0 def
		/six 949.9969482421875 def
		/seven 1000.0 def
		/eight 949.9969482421875 def
		/nine 1000.0 def
		/colon 1000.0 def
		/semicolon 1000.0 def
		/less 1000.0 def
		/equal 1000.0 def
		/greater 1000.0 def
		/question 1000.0 def
		/at 1000.0 def
		/A 1000.0 def
		/B 1000.0 def
		/C 1000.0 def
		/D 1000.0 def
		/E 1000.0 def
		/F 1000.0 def
		/G 1000.0 def
		/H 1000.0 def
		/I 1000.0 def
		/J 1000.0 def
		/K 1000.0 def
		/L 1000.0 def
		/M 1000.0 def
		/N 1000.0 def
		/O 1000.0 def
		/P 1000.0 def
		/Q 500.0 def
		/R 1000.0 def
		/S 1000.0 def
		/T 789.9932861328125 def
		/U 1000.0 def
		/V 1000.0 def
		/W 1000.0 def
		/X 1000.0 def
		/Y 738.006591796875 def
		/Z 535.9954833984375 def
		/bracketleft 429.99267578125 def
		/backslash 500.0 def
		/bracketright 1000.0 def
		/asciicircum 1000.0 def
		/underscore 1000.0 def
		/quoteleft 614.2578125 def
		/a 750.0 def
		/b 750.0 def
		/c 750.0 def
		/d 1000.0 def
		/e 750.0 def
		/f 750.0 def
		/g 750.0 def
		/h 750.0 def
		/i 750.0 def
		/j 750.0 def
		/k 1000.0 def
		/l 1000.0 def
		/m 623.992919921875 def
		/n 623.992919921875 def
		/o 623.992919921875 def
		/p 623.992919921875 def
		/q 623.992919921875 def
		/r 623.992919921875 def
		/s 623.992919921875 def
		/t 623.992919921875 def
		/u 620.60546875 def
		/v 517.578125 def
		/w 770.5078125 def
		/x 613.28125 def
		/y 522.4609375 def
		/z 573.2421875 def
		/braceleft 325.1953125 def
		/bar 373.53515625 def
		/braceright 325.1953125 def
		/asciitilde 632.32421875 def
		/exclamdown 316.40625 def
		/cent 632.32421875 def
		/sterling 632.32421875 def
		/fraction 0.0 def
		/yen 632.32421875 def
		/florin 632.32421875 def
		/section 632.32421875 def
		/currency 632.8125 def
		/quotesingle 229.00390625 def
		/quotedblleft 397.4609375 def
		/guillemotleft 523.92578125 def
		/guilsinglleft 331.54296875 def
		/guilsinglright 331.54296875 def
		/fi 644.53125 def
		/fl 647.4609375 def
		/endash 1089.996337890625 def
		/dagger 632.32421875 def
		/daggerdbl 632.32421875 def
		/periodcentered 316.40625 def
		/paragraph 632.32421875 def
		/bullet 560.546875 def
		/quotesinglbase 316.40625 def
		/quotedblbase 397.4609375 def
		/quotedblright 397.4609375 def
		/guillemotright 523.92578125 def
		/ellipsis 1000.0 def
		/perthousand 1012.20703125 def
		/questiondown 421.875 def
		/grave 614.2578125 def
		/acute 614.2578125 def
		/circumflex 614.2578125 def
		/tilde 614.2578125 def
		/macron 500.0 def
		/breve 614.2578125 def
		/dotaccent 614.2578125 def
		/dieresis 614.2578125 def
		/ring 614.2578125 def
		/cedilla 614.2578125 def
		/hungarumlaut 469.7265625 def
		/ogonek 614.2578125 def
		/caron 614.2578125 def
		/emdash 1089.996337890625 def
		/AE 906.73828125 def
		/ordfeminine 469.7265625 def
		/Lslash 548.33984375 def
		/Oslash 776.85546875 def
		/OE 1000.0 def
		/ordmasculine 469.7265625 def
		/ae 851.07421875 def
		/dotlessi 289.0625 def
		/lslash 328.125 def
		/oslash 614.2578125 def
		/oe 928.22265625 def
		/germandbls 598.14453125 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
830 8 moveto
793 -29 lineto
501 263 lineto
207 -29 lineto
170 8 lineto
464 300 lineto
170 593 lineto
207 630 lineto
501 337 lineto
793 630 lineto
830 593 lineto
538 300 lineto
closepath
fill
		} def

	/quotedbl
		{
66 530 moveto
54 770 lineto
150 770 lineto
138 530 lineto
closepath
234 530 moveto
222 770 lineto
319 770 lineto
307 530 lineto
closepath
fill
		} def

	/numbersign
		{
622 128 moveto
568 74 lineto
396 246 lineto
224 75 lineto
170 129 lineto
342 300 lineto
170 471 lineto
224 525 lineto
396 354 lineto
568 526 lineto
622 472 lineto
450 300 lineto
closepath
fill
		} def

	/dollar
		{
281 300 moveto
281 285 275 272 264 260  curveto
252 248 239 243 224 243  curveto
210 243 198 248 186 258  curveto
174 268 168 282 168 300  curveto
168 315 173 328 184 339  curveto
195 350 208 356 224 356  curveto
241 356 255 349 267 337  curveto
276 325 281 313 281 300  curveto
closepath
fill
		} def

	/percent
		{
334 300 moveto
334 277 325 257 308 240  curveto
291 223 271 215 249 215  curveto
229 215 210 222 194 236  curveto
174 252 165 274 165 300  curveto
165 323 173 343 189 359  curveto
205 375 225 384 249 384  curveto
275 384 296 374 313 355  curveto
327 338 334 320 334 300  curveto
closepath
fill
		} def

	/ampersand
		{
830 8 moveto
793 -29 lineto
501 263 lineto
207 -29 lineto
170 8 lineto
170 593 lineto
207 630 lineto
501 337 lineto
793 630 lineto
830 593 lineto
538 300 lineto
closepath
464 300 moveto
222 541 lineto
222 60 lineto
closepath
fill
		} def

	/quoteright
		{
78 505 moveto
54 770 lineto
174 770 lineto
150 505 lineto
closepath
fill
		} def

	/parenleft
		{
830 8 moveto
793 -29 lineto
499 263 lineto
207 -29 lineto
170 8 lineto
462 300 lineto
170 593 lineto
207 630 lineto
499 337 lineto
793 630 lineto
830 593 lineto
closepath
778 60 moveto
778 541 lineto
536 300 lineto
closepath
fill
		} def

	/parenright
		{
830 8 moveto
793 -29 lineto
499 263 lineto
207 -29 lineto
170 8 lineto
170 593 lineto
207 630 lineto
499 337 lineto
793 630 lineto
830 593 lineto
closepath
778 60 moveto
778 541 lineto
536 300 lineto
closepath
462 300 moveto
222 541 lineto
222 60 lineto
closepath
fill
		} def

	/asterisk
		{
830 8 moveto
793 -29 lineto
501 263 lineto
207 -29 lineto
170 8 lineto
793 630 lineto
830 593 lineto
538 300 lineto
closepath
fill
		} def

	/plus
		{
830 8 moveto
793 -29 lineto
499 263 lineto
207 -29 lineto
170 8 lineto
462 300 lineto
170 593 lineto
207 630 lineto
closepath
fill
		} def

	/comma
		{
492 12 moveto
466 -30 lineto
387 -2 336 34 314 79  curveto
296 113 287 176 287 267  curveto
287 418 lineto
287 455 282 483 273 501  curveto
264 519 244 538 214 558  curveto
168 588 lineto
194 630 lineto
259 597 lineto
308 572 340 540 356 502  curveto
368 472 374 427 374 365  curveto
374 349 374 325 374 293  curveto
373 261 373 238 373 222  curveto
373 125 397 63 446 36  curveto
453 32 468 24 492 12  curveto
closepath
fill
		} def

	/hyphen
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
600 474 moveto
600 458 594 445 584 435  curveto
573 424 560 419 545 419  curveto
529 419 516 424 506 435  curveto
495 445 490 458 490 474  curveto
490 489 495 502 506 513  curveto
516 523 529 529 545 529  curveto
560 529 573 523 584 513  curveto
594 502 600 489 600 474  curveto
closepath
816 274 moveto
274 274 lineto
274 326 lineto
816 326 lineto
closepath
600 126 moveto
600 110 594 97 584 87  curveto
573 76 560 71 545 71  curveto
529 71 516 76 506 87  curveto
495 97 490 110 490 126  curveto
490 141 495 154 506 165  curveto
516 175 529 181 545 181  curveto
560 181 573 175 584 165  curveto
594 154 600 141 600 126  curveto
closepath
fill
		} def

	/period
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
678 274 moveto
412 274 lineto
412 326 lineto
678 326 lineto
closepath
fill
		} def

	/slash
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
662 518 moveto
486 82 lineto
428 82 lineto
604 518 lineto
closepath
fill
		} def

	/zero
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
667 300 moveto
667 266 655 238 631 214  curveto
607 190 578 178 545 178  curveto
511 178 483 190 459 214  curveto
435 238 423 266 423 300  curveto
423 333 435 362 459 386  curveto
483 410 511 422 545 422  curveto
578 422 607 410 631 386  curveto
655 362 667 333 667 300  curveto
closepath
615 300 moveto
615 319 608 335 594 349  curveto
580 363 564 370 545 370  curveto
525 370 509 363 495 349  curveto
481 335 475 319 475 300  curveto
475 280 481 264 495 250  curveto
509 236 525 230 545 230  curveto
564 230 580 236 594 250  curveto
608 264 615 280 615 300  curveto
closepath
fill
		} def

	/one
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
602 323 moveto
602 308 596 295 585 283  curveto
573 271 560 266 545 266  curveto
531 266 519 271 507 281  curveto
495 291 489 305 489 323  curveto
489 338 494 351 505 362  curveto
516 373 529 379 545 379  curveto
562 379 576 372 588 360  curveto
597 348 602 336 602 323  curveto
closepath
fill
		} def

	/two
		{
830 300 moveto
830 208 797 130 733 66  curveto
669 2 591 -30 500 -30  curveto
408 -30 330 2 266 66  curveto
202 130 170 208 170 300  curveto
170 391 202 469 266 533  curveto
330 597 408 630 500 630  curveto
591 630 669 597 733 533  curveto
797 469 830 391 830 300  curveto
closepath
777 326 moveto
770 396 740 456 687 505  curveto
634 553 572 578 500 578  curveto
428 578 365 553 312 505  curveto
259 456 229 396 223 326  curveto
closepath
777 274 moveto
223 274 lineto
229 203 259 143 312 95  curveto
365 46 428 22 500 22  curveto
572 22 634 46 687 95  curveto
740 143 770 203 777 274  curveto
closepath
fill
		} def

	/three
		{
830 300 moveto
830 208 797 130 733 66  curveto
669 2 591 -30 500 -30  curveto
408 -30 330 2 266 66  curveto
202 130 170 208 170 300  curveto
170 391 202 469 266 533  curveto
330 597 408 630 500 630  curveto
591 630 669 597 733 533  curveto
797 469 830 391 830 300  curveto
closepath
778 300 moveto
778 372 753 434 705 487  curveto
656 540 596 570 526 577  curveto
526 23 lineto
596 29 656 59 705 112  curveto
753 165 778 228 778 300  curveto
closepath
474 23 moveto
474 577 lineto
403 570 343 540 295 487  curveto
246 434 222 372 222 300  curveto
222 228 246 165 295 112  curveto
343 59 403 29 474 23  curveto
closepath
fill
		} def

	/four
		{
830 300 moveto
830 208 797 130 733 66  curveto
669 2 591 -30 500 -30  curveto
408 -30 330 2 266 66  curveto
202 130 170 208 170 300  curveto
170 391 202 469 266 533  curveto
330 597 408 630 500 630  curveto
591 630 669 597 733 533  curveto
797 469 830 391 830 300  curveto
closepath
777 326 moveto
771 392 744 449 697 497  curveto
649 544 592 571 526 577  curveto
526 326 lineto
closepath
474 326 moveto
474 577 lineto
407 571 350 544 303 497  curveto
255 449 229 392 223 326  curveto
closepath
777 274 moveto
526 274 lineto
526 23 lineto
592 29 649 55 697 103  curveto
744 150 771 207 777 274  curveto
closepath
474 23 moveto
474 274 lineto
223 274 lineto
229 207 255 150 303 103  curveto
350 55 407 29 474 23  curveto
closepath
fill
		} def

	/five
		{
830 300 moveto
830 208 797 130 733 66  curveto
669 2 591 -30 500 -30  curveto
408 -30 330 2 266 66  curveto
202 130 170 208 170 300  curveto
170 391 202 469 266 533  curveto
330 597 408 630 500 630  curveto
591 630 669 597 733 533  curveto
797 469 830 391 830 300  curveto
closepath
677 514 moveto
625 556 566 578 500 578  curveto
433 578 374 556 323 514  curveto
500 337 lineto
closepath
778 300 moveto
778 366 756 425 714 477  curveto
537 300 lineto
714 123 lineto
756 174 778 233 778 300  curveto
closepath
463 300 moveto
286 477 lineto
243 425 222 366 222 300  curveto
222 233 243 174 286 123  curveto
closepath
677 86 moveto
500 263 lineto
323 86 lineto
374 43 433 22 500 22  curveto
566 22 625 43 677 86  curveto
closepath
fill
		} def

	/six
		{
782 274 moveto
524 274 lineto
524 -30 lineto
424 -30 340 -1 273 58  curveto
203 120 168 200 168 300  curveto
168 399 203 480 273 542  curveto
339 601 423 630 524 630  curveto
524 326 lineto
782 326 lineto
closepath
472 326 moveto
472 577 lineto
406 570 349 543 302 496  curveto
254 448 227 392 221 326  curveto
closepath
472 23 moveto
472 274 lineto
221 274 lineto
227 208 254 151 302 104  curveto
349 56 406 29 472 23  curveto
closepath
fill
		} def

	/seven
		{
792 82 moveto
755 45 lineto
540 260 lineto
364 84 lineto
415 42 473 22 538 22  curveto
538 -30 lineto
446 -30 368 2 304 66  curveto
240 130 208 208 208 300  curveto
208 391 240 469 304 533  curveto
368 597 446 630 538 630  curveto
538 578 lineto
471 578 412 556 360 513  curveto
540 333 lineto
755 548 lineto
792 511 lineto
577 296 lineto
closepath
503 296 moveto
323 476 lineto
281 424 260 366 260 300  curveto
260 232 282 172 327 120  curveto
closepath
fill
		} def

	/eight
		{
782 300 moveto
782 200 747 120 677 58  curveto
610 0 526 -30 426 -30  curveto
426 274 lineto
168 274 lineto
168 326 lineto
426 326 lineto
426 630 lineto
526 630 610 600 677 542  curveto
747 480 782 399 782 300  curveto
closepath
729 326 moveto
722 392 695 448 648 496  curveto
600 543 544 570 478 577  curveto
478 326 lineto
closepath
729 274 moveto
478 274 lineto
478 23 lineto
544 29 600 56 648 104  curveto
695 151 722 208 729 274  curveto
closepath
fill
		} def

	/nine
		{
792 300 moveto
792 208 759 130 695 66  curveto
631 2 553 -30 462 -30  curveto
462 22 lineto
526 22 584 42 636 84  curveto
460 260 lineto
245 45 lineto
208 82 lineto
423 296 lineto
208 511 lineto
245 548 lineto
460 333 lineto
640 513 lineto
588 556 528 578 462 578  curveto
462 630 lineto
553 630 631 597 695 533  curveto
759 469 792 391 792 300  curveto
closepath
740 300 moveto
740 366 719 424 677 476  curveto
497 296 lineto
673 120 lineto
717 172 740 232 740 300  curveto
closepath
fill
		} def

	/colon
		{
830 300 moveto
830 209 797 131 733 67  curveto
668 2 590 -30 500 -30  curveto
419 -30 348 -4 287 48  curveto
210 -30 lineto
170 10 lineto
247 88 lineto
195 149 170 220 170 300  curveto
170 390 202 468 267 533  curveto
331 597 409 630 500 630  curveto
580 630 650 604 712 553  curveto
789 630 lineto
829 590 lineto
752 513 lineto
804 451 830 380 830 300  curveto
closepath
778 300 moveto
778 366 757 424 715 476  curveto
324 85 lineto
375 43 434 22 500 22  curveto
576 22 642 49 696 103  curveto
750 157 778 223 778 300  curveto
closepath
675 516 moveto
624 557 566 578 500 578  curveto
423 578 357 550 303 496  curveto
249 442 222 376 222 300  curveto
222 234 242 175 284 125  curveto
closepath
fill
		} def

	/semicolon
		{
830 300 moveto
830 208 797 130 733 66  curveto
669 2 591 -30 500 -30  curveto
408 -30 330 2 266 66  curveto
202 130 170 208 170 300  curveto
170 391 202 469 266 533  curveto
330 597 408 630 500 630  curveto
591 630 669 597 733 533  curveto
797 469 830 391 830 300  curveto
closepath
778 300 moveto
778 376 750 442 696 496  curveto
642 550 576 578 500 578  curveto
423 578 357 550 303 496  curveto
249 442 222 376 222 300  curveto
222 223 249 157 303 103  curveto
357 49 423 22 500 22  curveto
576 22 642 49 696 103  curveto
750 157 778 223 778 300  curveto
closepath
672 201 moveto
652 193 635 190 621 190  curveto
608 190 597 192 587 198  curveto
579 202 567 216 551 239  curveto
537 259 522 274 507 285  curveto
508 269 514 249 525 225  curveto
536 200 542 182 542 172  curveto
542 151 527 127 499 101  curveto
469 124 455 148 455 173  curveto
455 181 460 198 472 223  curveto
482 245 488 266 490 284  curveto
474 273 460 258 446 238  curveto
439 228 427 215 410 199  curveto
400 193 388 190 375 190  curveto
361 190 344 193 326 201  curveto
334 238 348 262 367 273  curveto
377 279 394 283 418 285  curveto
442 287 463 292 481 300  curveto
464 307 443 312 419 315  curveto
407 315 389 319 367 325  curveto
346 337 333 362 327 400  curveto
347 406 363 409 376 409  curveto
388 409 400 406 410 401  curveto
417 397 429 383 445 361  curveto
458 342 473 327 489 316  curveto
487 333 480 353 470 377  curveto
460 400 455 417 455 427  curveto
455 451 470 475 500 499  curveto
528 473 542 449 542 427  curveto
542 417 536 400 525 376  curveto
515 354 509 333 507 314  curveto
518 322 531 337 547 359  curveto
563 381 576 395 586 401  curveto
596 407 608 410 622 410  curveto
635 410 651 407 670 401  curveto
664 363 650 338 630 326  curveto
620 320 603 316 578 314  curveto
565 312 545 308 517 300  curveto
535 292 555 287 577 285  curveto
593 283 602 283 604 283  curveto
614 281 622 278 630 274  curveto
649 262 663 238 672 201  curveto
closepath
fill
		} def

	/less
		{
980 274 moveto
829 274 lineto
822 188 787 115 724 57  curveto
660 0 586 -30 500 -30  curveto
414 -30 339 0 276 58  curveto
212 116 177 188 171 274  curveto
20 274 lineto
20 326 lineto
171 326 lineto
177 411 212 483 276 542  curveto
339 600 414 630 500 630  curveto
586 630 660 600 724 542  curveto
787 484 822 412 829 326  curveto
980 326 lineto
closepath
777 326 moveto
770 397 740 457 687 505  curveto
633 553 571 578 500 578  curveto
428 578 366 553 313 505  curveto
259 457 229 397 223 326  curveto
closepath
777 274 moveto
223 274 lineto
229 202 259 142 313 94  curveto
366 46 428 22 500 22  curveto
571 22 633 46 687 94  curveto
740 142 770 202 777 274  curveto
closepath
fill
		} def

	/equal
		{
980 274 moveto
829 274 lineto
823 193 791 124 733 66  curveto
675 8 606 -23 526 -29  curveto
526 -200 lineto
474 -200 lineto
474 -29 lineto
393 -23 324 8 266 66  curveto
208 124 177 193 171 274  curveto
20 274 lineto
20 326 lineto
171 326 lineto
177 406 208 475 266 533  curveto
324 591 393 623 474 629  curveto
474 800 lineto
526 800 lineto
526 629 lineto
606 622 675 590 733 533  curveto
790 475 822 406 829 326  curveto
980 326 lineto
closepath
777 326 moveto
771 392 744 448 696 496  curveto
648 544 592 571 526 577  curveto
526 326 lineto
closepath
474 326 moveto
474 577 lineto
408 571 351 544 303 496  curveto
255 448 229 392 223 326  curveto
closepath
777 274 moveto
526 274 lineto
526 23 lineto
592 29 648 55 696 103  curveto
744 151 771 208 777 274  curveto
closepath
474 23 moveto
474 274 lineto
223 274 lineto
229 208 255 151 303 103  curveto
351 55 408 29 474 23  curveto
closepath
fill
		} def

	/greater
		{
830 -30 moveto
170 -30 lineto
170 630 lineto
830 630 lineto
closepath
778 326 moveto
778 578 lineto
222 578 lineto
222 326 lineto
closepath
778 22 moveto
778 274 lineto
222 274 lineto
222 22 lineto
closepath
fill
		} def

	/question
		{
830 -30 moveto
170 -30 lineto
170 630 lineto
830 630 lineto
closepath
778 326 moveto
778 578 lineto
526 578 lineto
526 326 lineto
closepath
474 326 moveto
474 578 lineto
222 578 lineto
222 326 lineto
closepath
778 22 moveto
778 274 lineto
526 274 lineto
526 22 lineto
closepath
474 22 moveto
474 274 lineto
222 274 lineto
222 22 lineto
closepath
fill
		} def

	/at
		{
830 -30 moveto
170 -30 lineto
170 630 lineto
830 630 lineto
closepath
778 60 moveto
778 541 lineto
538 300 lineto
closepath
741 578 moveto
259 578 lineto
501 337 lineto
closepath
464 300 moveto
222 541 lineto
222 60 lineto
closepath
742 22 moveto
501 263 lineto
258 22 lineto
closepath
fill
		} def

	/A
		{
830 -30 moveto
170 -30 lineto
170 630 lineto
830 630 lineto
closepath
778 22 moveto
778 578 lineto
222 578 lineto
222 22 lineto
closepath
fill
		} def

	/B
		{
830 -30 moveto
170 -30 lineto
170 630 lineto
830 630 lineto
closepath
fill
		} def

	/C
		{
830 274 moveto
526 274 lineto
526 -30 lineto
474 -30 lineto
474 274 lineto
170 274 lineto
170 326 lineto
474 326 lineto
474 630 lineto
526 630 lineto
526 326 lineto
830 326 lineto
closepath
fill
		} def

	/D
		{
830 261 moveto
539 261 lineto
539 -30 lineto
461 -30 lineto
461 261 lineto
170 261 lineto
170 339 lineto
461 339 lineto
461 630 lineto
539 630 lineto
539 339 lineto
830 339 lineto
closepath
fill
		} def

	/E
		{
830 394 moveto
526 394 lineto
526 90 lineto
474 90 lineto
474 394 lineto
170 394 lineto
170 446 lineto
474 446 lineto
474 750 lineto
526 750 lineto
526 446 lineto
830 446 lineto
closepath
555 -95 moveto
555 -110 549 -123 539 -134  curveto
528 -144 515 -150 500 -150  curveto
484 -150 471 -144 461 -134  curveto
450 -123 445 -110 445 -95  curveto
445 -79 450 -66 461 -56  curveto
471 -45 484 -40 500 -40  curveto
515 -40 528 -45 539 -56  curveto
549 -66 555 -79 555 -95  curveto
closepath
fill
		} def

	/F
		{
555 695 moveto
555 679 549 666 539 656  curveto
528 645 515 640 500 640  curveto
484 640 471 645 461 656  curveto
450 666 445 679 445 695  curveto
445 710 450 723 461 734  curveto
471 744 484 750 500 750  curveto
515 750 528 744 539 734  curveto
549 723 555 710 555 695  curveto
closepath
830 154 moveto
526 154 lineto
526 -150 lineto
474 -150 lineto
474 154 lineto
170 154 lineto
170 206 lineto
474 206 lineto
474 510 lineto
526 510 lineto
526 206 lineto
830 206 lineto
closepath
fill
		} def

	/G
		{
830 337 moveto
526 337 lineto
526 33 lineto
474 33 lineto
474 337 lineto
170 337 lineto
170 389 lineto
474 389 lineto
474 693 lineto
526 693 lineto
526 389 lineto
830 389 lineto
closepath
830 -94 moveto
170 -94 lineto
170 -42 lineto
830 -42 lineto
closepath
fill
		} def

	/H
		{
830 641 moveto
170 641 lineto
170 693 lineto
830 693 lineto
closepath
830 210 moveto
526 210 lineto
526 -94 lineto
474 -94 lineto
474 210 lineto
170 210 lineto
170 262 lineto
474 262 lineto
474 566 lineto
526 566 lineto
526 262 lineto
830 262 lineto
closepath
fill
		} def

	/I
		{
526 404 moveto
474 404 lineto
474 630 lineto
526 630 lineto
closepath
830 274 moveto
604 274 lineto
604 326 lineto
830 326 lineto
closepath
396 326 moveto
396 274 lineto
170 274 lineto
170 326 lineto
closepath
526 -30 moveto
474 -30 lineto
474 196 lineto
526 196 lineto
closepath
fill
		} def

	/J
		{
555 523 moveto
555 507 549 494 539 484  curveto
528 473 515 468 500 468  curveto
484 468 471 473 461 484  curveto
450 494 445 507 445 523  curveto
445 538 450 551 461 562  curveto
471 572 484 578 500 578  curveto
515 578 528 572 539 562  curveto
549 551 555 538 555 523  curveto
closepath
830 8 moveto
793 -30 lineto
501 263 lineto
207 -30 lineto
170 8 lineto
438 274 lineto
170 274 lineto
170 326 lineto
438 326 lineto
170 593 lineto
207 630 lineto
501 337 lineto
793 630 lineto
830 593 lineto
564 326 lineto
830 326 lineto
830 274 lineto
564 274 lineto
closepath
555 78 moveto
555 62 549 49 539 39  curveto
528 28 515 23 500 23  curveto
484 23 471 28 461 39  curveto
450 49 445 62 445 78  curveto
445 93 450 106 461 117  curveto
471 127 484 133 500 133  curveto
515 133 528 127 539 117  curveto
549 106 555 93 555 78  curveto
closepath
fill
		} def

	/K
		{
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
closepath
fill
		} def

	/L
		{
830 261 moveto
170 261 lineto
170 339 lineto
830 339 lineto
closepath
fill
		} def

	/M
		{
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
closepath
555 115 moveto
555 99 549 86 539 76  curveto
528 65 515 60 500 60  curveto
484 60 471 65 461 76  curveto
450 86 445 99 445 115  curveto
445 130 450 143 461 154  curveto
471 164 484 170 500 170  curveto
515 170 528 164 539 154  curveto
549 143 555 130 555 115  curveto
closepath
fill
		} def

	/N
		{
555 485 moveto
555 469 549 456 539 446  curveto
528 435 515 430 500 430  curveto
484 430 471 435 461 446  curveto
450 456 445 469 445 485  curveto
445 500 450 513 461 524  curveto
471 534 484 540 500 540  curveto
515 540 528 534 539 524  curveto
549 513 555 500 555 485  curveto
closepath
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
closepath
fill
		} def

	/O
		{
555 485 moveto
555 469 549 456 539 446  curveto
528 435 515 430 500 430  curveto
484 430 471 435 461 446  curveto
450 456 445 469 445 485  curveto
445 500 450 513 461 524  curveto
471 534 484 540 500 540  curveto
515 540 528 534 539 524  curveto
549 513 555 500 555 485  curveto
closepath
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
closepath
555 115 moveto
555 99 549 86 539 76  curveto
528 65 515 60 500 60  curveto
484 60 471 65 461 76  curveto
450 86 445 99 445 115  curveto
445 130 450 143 461 154  curveto
471 164 484 170 500 170  curveto
515 170 528 164 539 154  curveto
549 143 555 130 555 115  curveto
closepath
fill
		} def

	/P
		{
778 485 moveto
778 469 772 456 762 446  curveto
751 435 738 430 723 430  curveto
707 430 694 435 684 446  curveto
673 456 668 469 668 485  curveto
668 500 673 513 684 524  curveto
694 534 707 540 723 540  curveto
738 540 751 534 762 524  curveto
772 513 778 500 778 485  curveto
closepath
778 115 moveto
778 99 772 86 762 76  curveto
751 65 738 60 723 60  curveto
707 60 694 65 684 76  curveto
673 86 668 99 668 115  curveto
668 130 673 143 684 154  curveto
694 164 707 170 723 170  curveto
738 170 751 164 762 154  curveto
772 143 778 130 778 115  curveto
closepath
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
closepath
332 485 moveto
332 469 326 456 316 446  curveto
305 435 292 430 277 430  curveto
261 430 248 435 238 446  curveto
227 456 222 469 222 485  curveto
222 500 227 513 238 524  curveto
248 534 261 540 277 540  curveto
292 540 305 534 316 524  curveto
326 513 332 500 332 485  curveto
closepath
332 115 moveto
332 99 326 86 316 76  curveto
305 65 292 60 277 60  curveto
261 60 248 65 238 76  curveto
227 86 222 99 222 115  curveto
222 130 227 143 238 154  curveto
248 164 261 170 277 170  curveto
292 170 305 164 316 154  curveto
326 143 332 130 332 115  curveto
closepath
fill
		} def

	/Q
		{
500 201 moveto
0 201 lineto
0 250 lineto
500 250 lineto
closepath
fill
		} def

	/R
		{
1000 201 moveto
0 201 lineto
0 250 lineto
1000 250 lineto
closepath
fill
		} def

	/S
		{
726 446 moveto
654 446 lineto
500 597 lineto
346 446 lineto
274 446 lineto
500 668 lineto
closepath
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
closepath
fill
		} def

	/T
		{
621 479 moveto
621 463 615 450 605 440  curveto
594 429 581 424 566 424  curveto
550 424 537 429 527 440  curveto
516 450 511 463 511 479  curveto
511 494 516 507 527 518  curveto
537 528 550 534 566 534  curveto
581 534 594 528 605 518  curveto
615 507 621 494 621 479  curveto
closepath
278 479 moveto
278 463 272 450 262 440  curveto
251 429 238 424 223 424  curveto
207 424 194 429 184 440  curveto
173 450 168 463 168 479  curveto
168 494 173 507 184 518  curveto
194 528 207 534 223 534  curveto
238 534 251 528 262 518  curveto
272 507 278 494 278 479  curveto
closepath
621 121 moveto
621 105 615 92 605 82  curveto
594 71 581 66 566 66  curveto
550 66 537 71 527 82  curveto
516 92 511 105 511 121  curveto
511 136 516 149 527 160  curveto
537 170 550 176 566 176  curveto
581 176 594 170 605 160  curveto
615 149 621 136 621 121  curveto
closepath
278 121 moveto
278 105 272 92 262 82  curveto
251 71 238 66 223 66  curveto
207 66 194 71 184 82  curveto
173 92 168 105 168 121  curveto
168 136 173 149 184 160  curveto
194 170 207 176 223 176  curveto
238 176 251 170 262 160  curveto
272 149 278 136 278 121  curveto
closepath
fill
		} def

	/U
		{
830 25 moveto
170 300 lineto
830 575 lineto
closepath
830 -100 moveto
170 -100 lineto
170 -48 lineto
830 -48 lineto
closepath
778 103 moveto
778 497 lineto
305 300 lineto
closepath
fill
		} def

	/V
		{
830 300 moveto
170 25 lineto
170 575 lineto
closepath
830 -100 moveto
170 -100 lineto
170 -48 lineto
830 -48 lineto
closepath
695 300 moveto
222 497 lineto
222 103 lineto
closepath
fill
		} def

	/W
		{
830 -100 moveto
426 -100 lineto
386 -205 lineto
329 -205 lineto
370 -100 lineto
170 -100 lineto
170 -48 lineto
390 -48 lineto
475 173 lineto
170 300 lineto
592 476 lineto
666 667 lineto
721 667 lineto
658 503 lineto
830 575 lineto
830 25 lineto
523 153 lineto
446 -48 lineto
830 -48 lineto
closepath
778 103 moveto
778 497 lineto
632 436 lineto
542 201 lineto
closepath
566 409 moveto
305 300 lineto
494 221 lineto
closepath
fill
		} def

	/X
		{
830 -100 moveto
346 -100 lineto
306 -204 lineto
249 -204 lineto
289 -100 lineto
170 -100 lineto
170 -48 lineto
310 -48 lineto
370 109 lineto
170 25 lineto
170 575 lineto
498 438 lineto
568 617 lineto
623 617 lineto
546 418 lineto
830 300 lineto
437 136 lineto
366 -48 lineto
830 -48 lineto
closepath
695 300 moveto
528 370 lineto
463 204 lineto
closepath
480 390 moveto
222 497 lineto
222 103 lineto
397 176 lineto
closepath
fill
		} def

	/Y
		{
697 148 moveto
671 100 632 59 580 27  curveto
528 -5 476 -22 426 -22  curveto
315 -22 230 11 172 77  curveto
116 138 87 223 83 333  curveto
5 333 lineto
5 373 lineto
84 373 lineto
88 449 118 520 173 585  curveto
231 653 297 688 371 688  curveto
413 688 454 681 492 668  curveto
528 655 553 649 568 649  curveto
595 649 615 662 629 688  curveto
647 688 lineto
695 476 lineto
668 476 lineto
587 596 493 657 386 657  curveto
319 657 266 628 228 572  curveto
194 522 177 461 177 391  curveto
177 385 177 379 177 373  curveto
326 373 lineto
326 333 lineto
180 333 lineto
190 249 218 181 265 129  curveto
316 71 383 42 466 42  curveto
544 42 612 77 668 148  curveto
closepath
fill
		} def

	/Z
		{
516 154 moveto
444 51 390 0 353 0  curveto
337 0 323 6 312 18  curveto
300 30 295 45 295 61  curveto
295 69 299 91 308 125  curveto
319 163 331 202 343 242  curveto
359 296 367 333 367 353  curveto
367 372 361 382 351 382  curveto
316 382 273 341 222 260  curveto
182 197 153 140 135 88  curveto
130 70 125 52 121 34  curveto
113 11 101 0 85 0  curveto
62 0 51 8 51 24  curveto
51 26 56 50 66 97  curveto
142 453 lineto
56 410 lineto
56 457 lineto
154 506 lineto
163 549 lineto
170 583 174 605 174 617  curveto
174 627 172 634 169 639  curveto
161 647 138 651 98 653  curveto
98 675 lineto
257 675 lineto
229 544 lineto
323 591 lineto
323 544 lineto
218 491 lineto
155 190 lineto
247 352 324 433 385 433  curveto
420 433 438 408 438 358  curveto
438 342 430 307 414 253  curveto
404 221 394 190 385 160  curveto
372 118 366 87 366 67  curveto
366 55 372 49 384 49  curveto
406 49 444 88 498 168  curveto
closepath
fill
		} def

	/bracketleft
		{
402 25 moveto
381 -1 354 -14 321 -14  curveto
277 -14 226 24 168 101  curveto
143 74 104 35 51 -16  curveto
28 7 lineto
147 139 lineto
126 171 108 216 93 274  curveto
78 331 71 380 71 421  curveto
71 480 83 534 107 584  curveto
137 645 179 676 233 676  curveto
278 676 313 654 339 610  curveto
360 572 371 529 371 481  curveto
371 434 353 378 319 314  curveto
299 278 267 228 223 164  curveto
224 144 236 117 259 83  curveto
283 46 304 28 322 28  curveto
346 28 364 37 374 56  curveto
closepath
319 481 moveto
319 515 313 545 303 572  curveto
288 608 266 626 238 626  curveto
182 626 155 561 155 432  curveto
155 358 172 285 206 214  curveto
233 240 259 281 283 338  curveto
307 394 319 442 319 481  curveto
closepath
fill
		} def

	/backslash
		{
476 331 moveto
476 248 461 175 432 113  curveto
392 28 331 -14 250 -14  curveto
219 -14 191 -7 166 5  curveto
134 -92 lineto
90 -92 lineto
129 29 lineto
92 61 64 109 46 174  curveto
31 224 24 276 24 331  curveto
24 413 38 485 68 548  curveto
108 633 168 676 250 676  curveto
280 676 308 669 334 657  curveto
366 754 lineto
410 754 lineto
370 633 lineto
407 600 435 551 454 487  curveto
468 437 476 385 476 331  curveto
closepath
320 615 moveto
302 638 278 650 250 650  curveto
163 650 120 543 120 331  curveto
120 227 130 148 151 95  curveto
closepath
380 331 moveto
380 431 369 509 348 565  curveto
179 46 lineto
198 23 222 12 250 12  curveto
336 12 380 118 380 331  curveto
closepath
fill
		} def

	/bracketright
		{
950 365 moveto
50 365 lineto
50 417 lineto
950 417 lineto
closepath
950 183 moveto
50 183 lineto
50 235 lineto
950 235 lineto
closepath
fill
		} def

	/asciicircum
		{
950 456 moveto
50 456 lineto
50 508 lineto
950 508 lineto
closepath
950 274 moveto
50 274 lineto
50 326 lineto
950 326 lineto
closepath
950 92 moveto
50 92 lineto
50 144 lineto
950 144 lineto
closepath
fill
		} def

	/underscore
		{
950 547 moveto
50 547 lineto
50 599 lineto
950 599 lineto
closepath
950 365 moveto
50 365 lineto
50 417 lineto
950 417 lineto
closepath
950 183 moveto
50 183 lineto
50 235 lineto
950 235 lineto
closepath
950 1 moveto
50 1 lineto
50 53 lineto
950 53 lineto
closepath
fill
		} def

	/quoteleft
		{
421 626 moveto
349 626 lineto
192 783 lineto
304 783 lineto
closepath
fill
		} def

	/a
		{
700 365 moveto
50 365 lineto
50 417 lineto
700 417 lineto
closepath
700 183 moveto
50 183 lineto
50 235 lineto
700 235 lineto
closepath
fill
		} def

	/b
		{
700 456 moveto
50 456 lineto
50 508 lineto
700 508 lineto
closepath
700 274 moveto
50 274 lineto
50 326 lineto
700 326 lineto
closepath
700 92 moveto
50 92 lineto
50 144 lineto
700 144 lineto
closepath
fill
		} def

	/c
		{
700 547 moveto
50 547 lineto
50 599 lineto
700 599 lineto
closepath
700 365 moveto
50 365 lineto
50 417 lineto
700 417 lineto
closepath
700 183 moveto
50 183 lineto
50 235 lineto
700 235 lineto
closepath
700 1 moveto
50 1 lineto
50 53 lineto
700 53 lineto
closepath
fill
		} def

	/d
		{
950 274 moveto
50 274 lineto
50 326 lineto
950 326 lineto
closepath
fill
		} def

	/e
		{
700 274 moveto
50 274 lineto
50 326 lineto
700 326 lineto
closepath
fill
		} def

	/f
		{
700 365 moveto
550 365 lineto
550 417 lineto
700 417 lineto
closepath
450 365 moveto
300 365 lineto
300 417 lineto
450 417 lineto
closepath
700 183 moveto
50 183 lineto
50 235 lineto
700 235 lineto
closepath
200 417 moveto
200 365 lineto
50 365 lineto
50 417 lineto
closepath
fill
		} def

	/g
		{
700 183 moveto
550 183 lineto
550 235 lineto
700 235 lineto
closepath
700 365 moveto
50 365 lineto
50 417 lineto
700 417 lineto
closepath
450 235 moveto
450 183 lineto
300 183 lineto
300 235 lineto
closepath
200 183 moveto
50 183 lineto
50 235 lineto
200 235 lineto
closepath
fill
		} def

	/h
		{
700 456 moveto
550 456 lineto
550 508 lineto
700 508 lineto
closepath
450 456 moveto
300 456 lineto
300 508 lineto
450 508 lineto
closepath
700 274 moveto
50 274 lineto
50 326 lineto
700 326 lineto
closepath
200 508 moveto
200 456 lineto
50 456 lineto
50 508 lineto
closepath
700 92 moveto
50 92 lineto
50 144 lineto
700 144 lineto
closepath
fill
		} def

	/i
		{
700 456 moveto
50 456 lineto
50 508 lineto
700 508 lineto
closepath
700 92 moveto
550 92 lineto
550 144 lineto
700 144 lineto
closepath
700 274 moveto
50 274 lineto
50 326 lineto
700 326 lineto
closepath
450 144 moveto
450 92 lineto
300 92 lineto
300 144 lineto
closepath
200 92 moveto
50 92 lineto
50 144 lineto
200 144 lineto
closepath
fill
		} def

	/j
		{
700 379 moveto
700 365 696 353 687 343  curveto
677 333 666 328 652 328  curveto
638 327 626 331 616 341  curveto
606 351 600 363 600 377  curveto
599 391 603 402 613 412  curveto
623 422 635 427 649 428  curveto
663 428 674 424 684 414  curveto
694 404 699 393 700 379  curveto
closepath
425 379 moveto
425 365 421 353 412 343  curveto
402 333 391 328 377 328  curveto
363 327 351 331 341 341  curveto
331 351 325 363 325 377  curveto
324 391 328 402 338 412  curveto
348 422 360 427 374 428  curveto
388 428 399 424 409 414  curveto
419 404 424 393 425 379  curveto
closepath
700 172 moveto
50 172 lineto
50 224 lineto
700 224 lineto
closepath
150 379 moveto
150 365 146 353 137 343  curveto
127 333 116 328 102 328  curveto
88 327 76 331 66 341  curveto
56 351 50 363 50 377  curveto
49 391 53 402 63 412  curveto
73 422 85 427 99 428  curveto
113 428 124 424 134 414  curveto
144 404 149 393 150 379  curveto
closepath
fill
		} def

	/k
		{
868 435 moveto
730 0 lineto
269 0 lineto
132 435 lineto
500 702 lineto
closepath
807 415 moveto
500 638 lineto
193 415 lineto
307 52 lineto
692 52 lineto
closepath
fill
		} def

	/l
		{
906 351 moveto
703 0 lineto
297 0 lineto
94 351 lineto
297 702 lineto
703 702 lineto
closepath
846 351 moveto
673 650 lineto
327 650 lineto
154 351 lineto
327 52 lineto
673 52 lineto
closepath
fill
		} def

	/m
		{
574 781 moveto
67 439 lineto
50 464 lineto
557 806 lineto
closepath
568 285 moveto
60 285 lineto
60 315 lineto
568 315 lineto
closepath
574 -181 moveto
557 -206 lineto
50 136 lineto
67 161 lineto
closepath
fill
		} def

	/n
		{
574 464 moveto
557 439 lineto
50 781 lineto
67 806 lineto
closepath
564 285 moveto
56 285 lineto
56 315 lineto
564 315 lineto
closepath
574 136 moveto
67 -206 lineto
50 -181 lineto
557 161 lineto
closepath
fill
		} def

	/o
		{
574 781 moveto
67 439 lineto
50 464 lineto
557 806 lineto
closepath
574 -181 moveto
557 -206 lineto
50 136 lineto
67 161 lineto
closepath
fill
		} def

	/p
		{
574 464 moveto
557 439 lineto
50 781 lineto
67 806 lineto
closepath
574 136 moveto
67 -206 lineto
50 -181 lineto
557 161 lineto
closepath
fill
		} def

	/q
		{
574 464 moveto
557 439 lineto
50 781 lineto
67 806 lineto
closepath
574 304 moveto
557 279 lineto
50 621 lineto
67 646 lineto
closepath
574 136 moveto
67 -206 lineto
50 -181 lineto
557 161 lineto
closepath
fill
		} def

	/r
		{
574 464 moveto
557 439 lineto
50 781 lineto
67 806 lineto
closepath
574 296 moveto
67 -46 lineto
50 -21 lineto
557 321 lineto
closepath
574 136 moveto
67 -206 lineto
50 -181 lineto
557 161 lineto
closepath
fill
		} def

	/s
		{
574 781 moveto
67 439 lineto
50 464 lineto
557 806 lineto
closepath
574 621 moveto
67 279 lineto
50 304 lineto
557 646 lineto
closepath
574 -181 moveto
557 -206 lineto
50 136 lineto
67 161 lineto
closepath
fill
		} def

	/t
		{
574 781 moveto
67 439 lineto
50 464 lineto
557 806 lineto
closepath
574 -21 moveto
557 -46 lineto
50 296 lineto
67 321 lineto
closepath
574 -181 moveto
557 -206 lineto
50 136 lineto
67 161 lineto
closepath
fill
		} def

	/u
		{
427 0 moveto
427 99 lineto
376 25 314 -12 241 -12  curveto
195 -12 158 2 131 31  curveto
104 60 90 99 90 149  curveto
90 530 lineto
186 530 lineto
186 180 lineto
186 140 192 112 203 95  curveto
215 79 234 70 261 70  curveto
320 70 375 109 427 186  curveto
427 530 lineto
523 530 lineto
523 0 lineto
closepath
fill
		} def

	/v
		{
206 0 moveto
8 530 lineto
104 530 lineto
259 117 lineto
421 530 lineto
511 530 lineto
302 0 lineto
closepath
fill
		} def

	/w
		{
157 0 moveto
5 530 lineto
100 530 lineto
216 119 lineto
341 530 lineto
437 530 lineto
547 119 lineto
681 530 lineto
763 530 lineto
590 0 lineto
494 0 lineto
381 410 lineto
254 0 lineto
closepath
fill
		} def

	/x
		{
42 0 moveto
244 273 lineto
48 530 lineto
163 530 lineto
317 326 lineto
458 530 lineto
551 530 lineto
368 261 lineto
567 0 lineto
453 0 lineto
293 209 lineto
139 0 lineto
closepath
fill
		} def

	/y
		{
126 -192 moveto
212 0 lineto
7 530 lineto
111 530 lineto
263 130 lineto
425 530 lineto
516 530 lineto
227 -192 lineto
closepath
fill
		} def

	/z
		{
60 0 moveto
60 72 lineto
388 458 lineto
75 458 lineto
75 530 lineto
506 530 lineto
506 458 lineto
178 72 lineto
513 72 lineto
513 0 lineto
closepath
fill
		} def

	/braceleft
		{
12 349 moveto
36 349 lineto
85 349 110 375 110 428  curveto
110 450 107 473 103 496  curveto
93 539 lineto
87 567 84 594 84 621  curveto
84 664 100 699 131 726  curveto
162 752 204 767 259 770  curveto
259 698 lineto
245 698 lineto
223 698 205 692 190 681  curveto
175 669 168 655 168 638  curveto
168 630 170 614 174 591  curveto
183 541 lineto
186 520 188 494 188 465  curveto
188 404 164 353 116 313  curveto
164 272 188 221 188 160  curveto
188 131 186 105 183 84  curveto
174 34 lineto
170 11 168 -4 168 -12  curveto
168 -29 175 -43 190 -54  curveto
205 -66 223 -72 245 -72  curveto
259 -72 lineto
259 -144 lineto
204 -141 161 -126 130 -99  curveto
99 -72 84 -37 84 5  curveto
84 32 87 59 93 87  curveto
103 129 lineto
107 153 110 176 110 199  curveto
110 251 85 277 36 277  curveto
12 277 lineto
closepath
fill
		} def

	/bar
		{
150 -144 moveto
150 770 lineto
222 770 lineto
222 -144 lineto
closepath
fill
		} def

	/braceright
		{
313 349 moveto
289 349 lineto
240 349 215 375 215 428  curveto
215 450 217 473 222 496  curveto
231 539 lineto
238 567 241 594 241 621  curveto
241 664 225 699 194 726  curveto
163 752 120 767 66 770  curveto
66 698 lineto
80 698 lineto
102 698 120 692 135 681  curveto
149 669 157 655 157 638  curveto
157 630 155 614 150 591  curveto
142 541 lineto
138 520 137 494 137 465  curveto
137 404 161 353 208 313  curveto
161 272 137 221 137 160  curveto
137 131 138 105 142 84  curveto
150 34 lineto
155 11 157 -4 157 -12  curveto
157 -29 149 -43 135 -54  curveto
120 -66 101 -72 80 -72  curveto
66 -72 lineto
66 -144 lineto
121 -141 163 -126 194 -99  curveto
225 -72 241 -37 241 5  curveto
241 32 238 59 231 87  curveto
222 129 lineto
217 153 215 176 215 199  curveto
215 251 240 277 289 277  curveto
313 277 lineto
closepath
fill
		} def

	/asciitilde
		{
51 216 moveto
51 263 63 302 88 332  curveto
113 362 146 377 186 377  curveto
212 377 247 365 291 342  curveto
343 315 lineto
405 281 lineto
420 274 435 270 450 270  curveto
489 270 509 301 509 361  curveto
581 361 lineto
574 252 530 198 450 198  curveto
422 198 382 211 332 237  curveto
277 266 lineto
219 296 lineto
207 302 195 305 184 305  curveto
143 305 123 275 123 216  curveto
closepath
fill
		} def

	/exclamdown
		{
206 530 moveto
206 433 lineto
109 433 lineto
109 530 lineto
closepath
194 337 moveto
206 -48 lineto
206 -192 lineto
109 -192 lineto
109 -48 lineto
122 337 lineto
closepath
fill
		} def

	/cent
		{
323 0 moveto
323 84 lineto
257 90 203 119 162 170  curveto
120 222 100 285 100 360  curveto
100 437 119 499 158 546  curveto
197 594 252 622 323 632  curveto
323 722 lineto
372 722 lineto
372 632 lineto
415 630 461 622 510 609  curveto
510 528 lineto
453 548 406 559 372 562  curveto
372 152 lineto
416 152 462 163 510 186  curveto
510 112 lineto
462 93 416 84 372 84  curveto
372 0 lineto
closepath
323 158 moveto
323 558 lineto
284 554 254 535 235 502  curveto
215 468 205 420 205 357  curveto
205 303 215 260 235 227  curveto
254 193 284 170 323 158  curveto
closepath
fill
		} def

	/sterling
		{
120 0 moveto
120 84 lineto
154 95 180 113 197 139  curveto
214 164 223 198 223 238  curveto
223 349 lineto
135 349 lineto
135 421 lineto
223 421 lineto
223 526 lineto
223 596 239 649 272 685  curveto
305 722 353 740 415 740  curveto
448 740 485 735 525 726  curveto
525 644 lineto
485 660 446 668 409 668  curveto
379 668 356 659 341 640  curveto
326 621 319 593 319 556  curveto
319 421 lineto
424 421 lineto
424 349 lineto
319 349 lineto
319 287 lineto
319 236 313 196 301 167  curveto
290 139 267 111 234 84  curveto
533 84 lineto
533 0 lineto
closepath
fill
		} def

	/fraction
		{
-301 -18 moveto
229 740 lineto
295 740 lineto
-235 -18 lineto
closepath
fill
		} def

	/yen
		{
265 0 moveto
265 168 lineto
120 168 lineto
120 229 lineto
265 229 lineto
265 301 lineto
120 301 lineto
120 361 lineto
265 361 lineto
39 722 lineto
152 722 lineto
328 441 lineto
518 722 lineto
605 722 lineto
361 361 lineto
505 361 lineto
505 301 lineto
361 301 lineto
361 229 lineto
505 229 lineto
505 168 lineto
361 168 lineto
361 0 lineto
closepath
fill
		} def

	/florin
		{
115 -144 moveto
213 349 lineto
117 349 lineto
117 421 lineto
228 421 lineto
238 473 lineto
256 562 285 629 325 673  curveto
366 718 417 740 480 740  curveto
516 740 553 736 592 726  curveto
577 650 lineto
543 662 511 668 480 668  curveto
445 668 416 656 394 631  curveto
371 605 355 568 345 517  curveto
326 421 lineto
471 421 lineto
471 349 lineto
312 349 lineto
213 -144 lineto
closepath
fill
		} def

	/section
		{
107 -126 moveto
107 -39 lineto
186 -73 253 -90 307 -90  curveto
350 -90 384 -82 410 -66  curveto
437 -50 450 -28 450 -2  curveto
450 19 443 36 429 49  curveto
415 62 384 78 337 98  curveto
251 135 lineto
204 155 168 179 145 206  curveto
122 233 110 264 110 299  curveto
110 348 134 397 181 445  curveto
135 475 112 515 112 562  curveto
112 616 133 659 175 691  curveto
217 724 273 740 342 740  curveto
391 740 447 733 510 717  curveto
510 639 lineto
444 658 388 668 341 668  curveto
299 668 265 660 239 643  curveto
213 626 200 605 200 578  curveto
200 560 207 544 221 530  curveto
235 515 256 502 285 491  curveto
352 464 lineto
419 437 466 410 491 385  curveto
517 359 530 326 530 285  curveto
530 239 506 189 458 135  curveto
511 104 538 60 538 4  curveto
538 -46 516 -87 472 -117  curveto
429 -147 370 -163 297 -163  curveto
247 -163 184 -151 107 -126  curveto
closepath
410 166 moveto
434 198 446 230 446 261  curveto
446 284 438 303 423 319  curveto
407 334 379 350 338 367  curveto
230 413 lineto
206 383 194 353 194 322  curveto
194 300 203 280 222 261  curveto
240 243 268 226 306 210  curveto
closepath
fill
		} def

	/currency
		{
185 188 moveto
90 93 lineto
47 135 lineto
143 230 lineto
113 269 99 313 99 361  curveto
99 409 113 452 143 491  curveto
47 587 lineto
90 629 lineto
185 534 lineto
226 563 269 578 315 578  curveto
362 578 405 563 446 534  curveto
541 629 lineto
584 587 lineto
489 491 lineto
518 452 532 409 532 361  curveto
532 313 518 269 489 230  curveto
584 135 lineto
541 93 lineto
446 188 lineto
405 159 362 144 315 144  curveto
269 144 226 159 185 188  curveto
closepath
313 216 moveto
355 216 390 230 418 258  curveto
446 285 460 320 460 361  curveto
460 402 446 436 418 464  curveto
390 491 356 505 315 505  curveto
275 505 240 491 213 464  curveto
185 436 171 402 171 361  curveto
171 321 185 287 212 259  curveto
240 230 274 216 313 216  curveto
closepath
fill
		} def

	/quotesingle
		{
78 505 moveto
54 770 lineto
174 770 lineto
150 505 lineto
closepath
fill
		} def

	/quotedblleft
		{
331 770 moveto
331 734 lineto
319 728 311 717 305 701  curveto
299 685 296 664 296 637  curveto
296 626 lineto
343 626 lineto
343 518 lineto
234 518 lineto
234 599 lineto
234 648 242 687 258 715  curveto
274 744 298 762 331 770  curveto
closepath
150 770 moveto
150 734 lineto
138 728 130 717 124 701  curveto
119 685 116 664 116 637  curveto
116 626 lineto
162 626 lineto
162 518 lineto
54 518 lineto
54 599 lineto
54 648 62 687 78 715  curveto
94 744 118 762 150 770  curveto
closepath
fill
		} def

	/guillemotleft
		{
487 445 moveto
343 265 lineto
487 84 lineto
439 48 lineto
247 265 lineto
439 481 lineto
closepath
294 445 moveto
150 265 lineto
294 84 lineto
247 48 lineto
54 265 lineto
247 481 lineto
closepath
fill
		} def

	/guilsinglleft
		{
294 445 moveto
150 265 lineto
294 84 lineto
247 48 lineto
54 265 lineto
247 481 lineto
closepath
fill
		} def

	/guilsinglright
		{
36 445 moveto
180 265 lineto
36 84 lineto
83 48 lineto
276 265 lineto
83 481 lineto
closepath
fill
		} def

	/fi
		{
114 0 moveto
114 458 lineto
39 458 lineto
39 530 lineto
114 530 lineto
114 593 lineto
114 720 171 783 287 783  curveto
319 783 355 777 396 767  curveto
396 690 lineto
353 704 319 710 292 710  curveto
261 710 239 703 228 688  curveto
216 673 210 645 210 604  curveto
210 530 lineto
547 530 lineto
547 0 lineto
451 0 lineto
451 458 lineto
210 458 lineto
210 0 lineto
closepath
451 626 moveto
451 722 lineto
547 722 lineto
547 626 lineto
closepath
fill
		} def

	/fl
		{
117 0 moveto
117 458 lineto
39 458 lineto
39 530 lineto
117 530 lineto
117 584 lineto
117 716 184 783 317 783  curveto
348 783 390 779 446 770  curveto
551 770 lineto
551 0 lineto
454 0 lineto
454 688 lineto
392 703 345 710 313 710  curveto
277 710 252 702 236 687  curveto
221 671 213 644 213 606  curveto
213 530 lineto
346 530 lineto
346 458 lineto
213 458 lineto
213 0 lineto
closepath
fill
		} def

	/endash
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
600 474 moveto
600 458 594 445 584 435  curveto
573 424 560 419 545 419  curveto
529 419 516 424 506 435  curveto
495 445 490 458 490 474  curveto
490 489 495 502 506 513  curveto
516 523 529 529 545 529  curveto
560 529 573 523 584 513  curveto
594 502 600 489 600 474  curveto
closepath
816 274 moveto
274 274 lineto
274 326 lineto
816 326 lineto
closepath
600 126 moveto
600 110 594 97 584 87  curveto
573 76 560 71 545 71  curveto
529 71 516 76 506 87  curveto
495 97 490 110 490 126  curveto
490 141 495 154 506 165  curveto
516 175 529 181 545 181  curveto
560 181 573 175 584 165  curveto
594 154 600 141 600 126  curveto
closepath
fill
		} def

	/dagger
		{
268 -144 moveto
279 409 lineto
111 397 lineto
111 469 lineto
279 458 lineto
268 722 lineto
364 722 lineto
352 458 lineto
520 469 lineto
520 397 lineto
352 409 lineto
364 -144 lineto
closepath
fill
		} def

	/daggerdbl
		{
268 -144 moveto
279 120 lineto
111 108 lineto
111 180 lineto
279 168 lineto
279 409 lineto
111 397 lineto
111 469 lineto
279 458 lineto
268 722 lineto
364 722 lineto
352 458 lineto
520 469 lineto
520 397 lineto
352 409 lineto
352 168 lineto
520 180 lineto
520 108 lineto
352 120 lineto
364 -144 lineto
closepath
fill
		} def

	/periodcentered
		{
97 239 moveto
97 360 lineto
218 360 lineto
218 239 lineto
closepath
fill
		} def

	/paragraph
		{
310 -144 moveto
310 361 lineto
245 365 195 385 159 421  curveto
123 457 105 504 105 563  curveto
105 621 121 662 152 686  curveto
183 710 236 722 310 722  curveto
502 722 lineto
502 -144 lineto
442 -144 lineto
442 662 lineto
370 662 lineto
370 -144 lineto
closepath
fill
		} def

	/bullet
		{
108 291 moveto
108 337 125 377 159 410  curveto
193 444 233 460 280 460  curveto
327 460 368 444 401 410  curveto
435 377 452 336 452 289  curveto
452 241 435 201 401 167  curveto
368 134 327 117 280 117  curveto
232 117 191 134 158 167  curveto
125 201 108 242 108 291  curveto
closepath
fill
		} def

	/quotesinglbase
		{
97 -144 moveto
97 -108 lineto
113 -103 125 -93 132 -76  curveto
140 -60 144 -38 144 -9  curveto
144 0 lineto
97 0 lineto
97 120 lineto
218 120 lineto
218 16 lineto
218 -33 208 -71 187 -97  curveto
167 -124 137 -140 97 -144  curveto
closepath
fill
		} def

	/quotedblbase
		{
66 -144 moveto
66 -108 lineto
77 -102 86 -91 92 -74  curveto
97 -58 100 -37 100 -11  curveto
100 0 lineto
54 0 lineto
54 108 lineto
162 108 lineto
162 27 lineto
162 -21 154 -60 138 -89  curveto
122 -118 98 -136 66 -144  curveto
closepath
247 -144 moveto
247 -108 lineto
258 -102 267 -91 272 -74  curveto
278 -58 281 -37 281 -11  curveto
281 0 lineto
234 0 lineto
234 108 lineto
343 108 lineto
343 27 lineto
343 -21 335 -60 319 -89  curveto
302 -118 278 -136 247 -144  curveto
closepath
fill
		} def

	/quotedblright
		{
66 518 moveto
66 554 lineto
77 560 86 571 92 587  curveto
97 603 100 625 100 651  curveto
100 662 lineto
54 662 lineto
54 770 lineto
162 770 lineto
162 689 lineto
162 640 154 601 138 572  curveto
122 544 98 525 66 518  curveto
closepath
247 518 moveto
247 554 lineto
258 560 267 571 272 587  curveto
278 603 281 625 281 651  curveto
281 662 lineto
234 662 lineto
234 770 lineto
343 770 lineto
343 689 lineto
343 640 335 601 319 572  curveto
302 544 278 525 247 518  curveto
closepath
fill
		} def

	/guillemotright
		{
36 445 moveto
180 265 lineto
36 84 lineto
83 48 lineto
276 265 lineto
83 481 lineto
closepath
229 445 moveto
373 265 lineto
229 84 lineto
276 48 lineto
469 265 lineto
276 481 lineto
closepath
fill
		} def

	/ellipsis
		{
118 0 moveto
118 96 lineto
214 96 lineto
214 0 lineto
closepath
452 0 moveto
452 96 lineto
548 96 lineto
548 0 lineto
closepath
785 0 moveto
785 96 lineto
881 96 lineto
881 0 lineto
closepath
fill
		} def

	/perthousand
		{
11 -18 moveto
581 740 lineto
656 740 lineto
87 -18 lineto
closepath
157 361 moveto
111 361 74 377 47 410  curveto
19 443 5 487 5 542  curveto
5 597 19 641 47 674  curveto
75 706 112 722 159 722  curveto
206 722 243 706 271 674  curveto
299 641 312 597 312 542  curveto
312 486 299 442 271 409  curveto
243 377 205 361 157 361  curveto
closepath
158 409 moveto
186 409 206 420 220 442  curveto
233 465 240 498 240 542  curveto
240 583 233 614 218 638  curveto
204 662 184 674 159 674  curveto
134 674 114 662 100 638  curveto
85 614 78 582 78 542  curveto
78 502 85 469 100 445  curveto
114 421 134 409 158 409  curveto
closepath
506 0 moveto
460 0 423 16 396 49  curveto
369 81 355 125 355 180  curveto
355 236 369 279 396 312  curveto
424 345 461 361 508 361  curveto
555 361 593 345 620 312  curveto
648 280 662 236 662 181  curveto
662 125 648 80 621 48  curveto
593 16 555 0 506 0  curveto
closepath
507 48 moveto
535 48 555 59 569 81  curveto
583 103 590 137 590 181  curveto
590 221 582 253 568 277  curveto
553 301 533 313 508 313  curveto
484 313 464 301 449 277  curveto
435 253 427 221 427 180  curveto
427 140 434 108 449 84  curveto
463 60 483 48 507 48  curveto
closepath
850 0 moveto
804 0 767 16 739 49  curveto
712 81 698 125 698 180  curveto
698 236 712 279 740 312  curveto
767 345 805 361 852 361  curveto
899 361 936 345 964 312  curveto
992 280 1005 236 1005 181  curveto
1005 125 992 80 964 48  curveto
936 16 898 0 850 0  curveto
closepath
851 48 moveto
878 48 899 59 912 81  curveto
926 103 933 137 933 181  curveto
933 221 926 253 911 277  curveto
896 301 876 313 852 313  curveto
827 313 807 301 792 277  curveto
778 253 770 221 770 180  curveto
770 140 778 108 792 84  curveto
807 60 826 48 851 48  curveto
closepath
fill
		} def

	/questiondown
		{
300 529 moveto
300 433 lineto
204 433 lineto
204 529 lineto
closepath
300 336 moveto
300 310 lineto
300 248 276 189 228 135  curveto
197 99 lineto
146 41 121 -6 121 -44  curveto
121 -73 132 -96 154 -113  curveto
177 -130 207 -138 245 -138  curveto
295 -138 348 -126 404 -102  curveto
404 -184 lineto
344 -202 287 -211 235 -211  curveto
168 -211 116 -196 77 -166  curveto
38 -136 18 -96 18 -45  curveto
18 -17 24 7 35 28  curveto
46 48 68 74 100 104  curveto
130 132 lineto
160 161 180 185 189 204  curveto
199 224 204 250 204 283  curveto
204 336 lineto
closepath
fill
		} def

	/grave
		{
421 626 moveto
349 626 lineto
192 783 lineto
304 783 lineto
closepath
fill
		} def

	/acute
		{
192 626 moveto
310 783 lineto
421 783 lineto
265 626 lineto
closepath
fill
		} def

	/circumflex
		{
136 626 moveto
253 783 lineto
360 783 lineto
478 626 lineto
405 626 lineto
307 725 lineto
306 725 lineto
208 626 lineto
closepath
fill
		} def

	/tilde
		{
144 626 moveto
146 664 154 693 169 712  curveto
184 731 206 740 234 740  curveto
258 740 280 734 300 722  curveto
330 704 lineto
348 692 362 687 372 687  curveto
383 687 391 691 398 700  curveto
404 709 408 722 409 740  curveto
469 740 lineto
467 702 459 674 444 655  curveto
429 635 407 626 379 626  curveto
355 626 333 632 313 645  curveto
284 663 lineto
265 674 251 680 242 680  curveto
231 680 222 675 216 666  curveto
209 657 205 644 204 626  curveto
closepath
fill
		} def

	/macron
		{
41 710 moveto
41 783 lineto
457 783 lineto
457 710 lineto
closepath
fill
		} def

	/breve
		{
144 783 moveto
204 783 lineto
209 754 220 733 238 719  curveto
255 705 278 698 307 698  curveto
336 698 359 705 376 719  curveto
393 733 404 754 409 783  curveto
469 783 lineto
464 735 447 697 417 669  curveto
388 640 351 626 307 626  curveto
262 626 225 640 196 669  curveto
167 697 149 735 144 783  curveto
closepath
fill
		} def

	/dotaccent
		{
258 626 moveto
258 722 lineto
354 722 lineto
354 626 lineto
closepath
fill
		} def

	/dieresis
		{
168 626 moveto
168 710 lineto
252 710 lineto
252 626 lineto
closepath
361 626 moveto
361 710 lineto
445 710 lineto
445 626 lineto
closepath
fill
		} def

	/ring
		{
305 626 moveto
275 626 249 637 228 658  curveto
206 680 196 706 196 737  curveto
196 767 207 794 228 815  curveto
250 837 276 848 307 848  curveto
337 848 363 837 385 815  curveto
407 794 417 768 417 737  curveto
417 706 407 679 385 658  curveto
363 637 337 626 305 626  curveto
closepath
306 668 moveto
325 668 342 675 355 688  curveto
369 701 375 718 375 737  curveto
375 756 369 772 355 786  curveto
342 799 326 806 307 806  curveto
287 806 271 799 258 786  curveto
244 772 238 756 238 737  curveto
238 718 244 702 258 688  curveto
271 675 287 668 306 668  curveto
closepath
fill
		} def

	/cedilla
		{
305 0 moveto
353 0 lineto
323 -53 lineto
349 -53 371 -60 390 -76  curveto
409 -91 418 -110 418 -130  curveto
418 -153 408 -172 389 -187  curveto
370 -203 347 -210 320 -210  curveto
296 -210 273 -207 249 -200  curveto
249 -161 lineto
263 -166 281 -168 300 -168  curveto
316 -168 329 -165 337 -159  curveto
346 -153 350 -144 350 -132  curveto
350 -116 342 -104 327 -97  curveto
312 -89 289 -85 259 -85  curveto
closepath
fill
		} def

	/hungarumlaut
		{
36 481 moveto
132 770 lineto
240 770 lineto
96 481 lineto
closepath
252 481 moveto
349 770 lineto
457 770 lineto
312 481 lineto
closepath
fill
		} def

	/ogonek
		{
321 0 moveto
373 0 lineto
352 -12 336 -25 326 -40  curveto
315 -55 310 -70 310 -87  curveto
310 -103 315 -114 324 -122  curveto
333 -130 347 -134 366 -134  curveto
384 -134 399 -131 411 -126  curveto
411 -166 lineto
391 -175 369 -180 343 -180  curveto
310 -180 285 -174 269 -161  curveto
252 -148 244 -128 244 -103  curveto
244 -82 250 -63 263 -46  curveto
276 -29 295 -13 321 0  curveto
closepath
fill
		} def

	/caron
		{
478 783 moveto
360 626 lineto
253 626 lineto
136 783 lineto
208 783 lineto
306 684 lineto
307 684 lineto
405 783 lineto
closepath
fill
		} def

	/emdash
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
600 474 moveto
600 458 594 445 584 435  curveto
573 424 560 419 545 419  curveto
529 419 516 424 506 435  curveto
495 445 490 458 490 474  curveto
490 489 495 502 506 513  curveto
516 523 529 529 545 529  curveto
560 529 573 523 584 513  curveto
594 502 600 489 600 474  curveto
closepath
816 274 moveto
274 274 lineto
274 326 lineto
816 326 lineto
closepath
600 126 moveto
600 110 594 97 584 87  curveto
573 76 560 71 545 71  curveto
529 71 516 76 506 87  curveto
495 97 490 110 490 126  curveto
490 141 495 154 506 165  curveto
516 175 529 181 545 181  curveto
560 181 573 175 584 165  curveto
594 154 600 141 600 126  curveto
closepath
fill
		} def

	/AE
		{
8 0 moveto
429 722 lineto
860 722 lineto
860 645 lineto
558 645 lineto
558 414 lineto
811 414 lineto
811 338 lineto
558 338 lineto
558 76 lineto
882 76 lineto
882 0 lineto
456 0 lineto
456 202 lineto
220 202 lineto
102 0 lineto
closepath
263 277 moveto
456 277 lineto
456 605 lineto
closepath
fill
		} def

	/ordfeminine
		{
295 453 moveto
260 420 224 403 187 403  curveto
157 403 132 413 113 431  curveto
94 450 84 473 84 502  curveto
84 540 100 570 132 591  curveto
163 612 208 622 265 622  curveto
290 622 lineto
290 660 lineto
290 679 285 693 274 703  curveto
264 712 248 717 227 717  curveto
191 717 154 707 115 686  curveto
115 745 lineto
158 762 200 770 241 770  curveto
283 770 315 761 337 743  curveto
358 725 369 698 369 661  curveto
369 504 lineto
369 488 371 476 376 468  curveto
381 460 389 456 399 456  curveto
402 456 406 456 412 457  curveto
415 413 lineto
397 407 380 403 364 403  curveto
346 403 331 407 320 416  curveto
309 424 302 436 297 453  curveto
closepath
290 496 moveto
290 576 lineto
270 577 lineto
234 577 207 571 189 561  curveto
171 550 162 534 162 512  curveto
162 495 166 483 175 474  curveto
184 466 197 461 214 461  curveto
238 461 264 473 290 496  curveto
closepath
fill
		} def

	/Lslash
		{
108 0 moveto
108 337 lineto
12 285 lineto
12 368 lineto
108 420 lineto
108 722 lineto
210 722 lineto
210 476 lineto
331 541 lineto
331 459 lineto
210 394 lineto
210 76 lineto
536 76 lineto
536 0 lineto
closepath
fill
		} def

	/Oslash
		{
535 608 moveto
496 645 447 664 388 664  curveto
316 664 260 637 220 584  curveto
179 531 159 457 159 362  curveto
159 286 173 222 200 170  curveto
closepath
241 114 moveto
280 77 329 58 389 58  curveto
460 58 516 85 557 138  curveto
597 192 617 266 617 360  curveto
617 437 604 501 577 552  curveto
closepath
56 -18 moveto
138 89 lineto
80 160 50 251 50 361  curveto
50 476 81 568 142 637  curveto
204 706 285 740 388 740  curveto
465 740 532 720 589 679  curveto
637 740 lineto
721 740 lineto
638 633 lineto
697 562 726 472 726 360  curveto
726 246 695 154 634 85  curveto
573 16 491 -18 390 -18  curveto
310 -18 242 2 187 43  curveto
140 -18 lineto
closepath
fill
		} def

	/OE
		{
551 28 moveto
500 -2 444 -18 381 -18  curveto
282 -18 202 16 142 86  curveto
81 156 50 248 50 361  curveto
50 476 81 568 142 637  curveto
203 706 285 740 387 740  curveto
446 740 500 725 551 694  curveto
551 722 lineto
955 722 lineto
955 645 lineto
653 645 lineto
653 414 lineto
906 414 lineto
906 338 lineto
653 341 lineto
653 76 lineto
976 76 lineto
976 0 lineto
551 0 lineto
closepath
551 277 moveto
551 444 lineto
551 520 538 576 511 611  curveto
485 646 444 664 387 664  curveto
315 664 260 637 219 583  curveto
179 530 159 456 159 361  curveto
159 266 179 192 220 138  curveto
260 85 316 58 388 58  curveto
442 58 483 76 510 113  curveto
537 149 551 204 551 277  curveto
closepath
fill
		} def

	/ordmasculine
		{
232 403 moveto
179 403 137 420 106 453  curveto
75 486 60 531 60 587  curveto
60 644 75 688 106 721  curveto
138 754 180 770 234 770  curveto
288 770 330 754 362 721  curveto
393 688 409 644 409 587  curveto
409 530 393 485 362 452  curveto
330 420 287 403 232 403  curveto
closepath
233 457 moveto
264 457 286 468 302 490  curveto
317 512 325 544 325 588  curveto
325 631 317 663 302 685  curveto
287 706 264 717 234 717  curveto
204 717 181 706 166 684  curveto
152 663 144 630 144 587  curveto
144 544 151 511 166 489  curveto
181 468 203 457 233 457  curveto
closepath
fill
		} def

	/ae
		{
395 94 moveto
333 23 269 -12 203 -12  curveto
159 -12 122 1 93 29  curveto
64 56 50 91 50 133  curveto
50 191 74 235 123 266  curveto
171 297 241 313 332 313  curveto
355 313 lineto
355 377 lineto
355 408 347 431 331 446  curveto
315 461 292 469 260 469  curveto
209 469 155 454 96 422  curveto
96 502 lineto
160 528 221 541 278 541  curveto
341 541 391 522 428 482  curveto
468 522 517 541 576 541  curveto
644 541 695 517 729 468  curveto
763 420 780 347 780 250  curveto
452 250 lineto
456 186 473 138 503 107  curveto
533 75 575 60 630 60  curveto
675 60 725 71 780 94  curveto
780 18 lineto
717 -2 659 -12 604 -12  curveto
558 -12 517 -3 482 14  curveto
447 32 418 58 395 94  curveto
closepath
355 119 moveto
355 256 lineto
323 257 lineto
270 257 227 247 195 227  curveto
162 207 146 181 146 148  curveto
146 125 154 106 170 90  curveto
187 74 207 66 230 66  curveto
270 66 312 84 355 119  curveto
closepath
455 316 moveto
677 316 lineto
677 367 669 405 651 431  curveto
634 457 608 470 573 470  curveto
537 470 510 457 490 431  curveto
470 405 458 367 455 316  curveto
closepath
fill
		} def

	/dotlessi
		{
96 0 moveto
96 530 lineto
192 530 lineto
192 0 lineto
closepath
fill
		} def

	/lslash
		{
120 0 moveto
120 352 lineto
12 294 lineto
12 375 lineto
120 434 lineto
120 770 lineto
216 770 lineto
216 487 lineto
325 541 lineto
325 462 lineto
216 405 lineto
216 0 lineto
closepath
fill
		} def

	/oslash
		{
54 -12 moveto
117 68 lineto
116 70 lineto
74 117 54 182 54 263  curveto
54 349 76 417 122 467  curveto
167 517 229 541 307 541  curveto
365 541 414 528 455 500  curveto
488 541 lineto
560 541 lineto
497 461 lineto
498 459 lineto
539 407 560 343 560 265  curveto
560 180 537 112 492 62  curveto
446 12 385 -12 307 -12  curveto
250 -12 201 1 159 29  curveto
126 -12 lineto
closepath
437 384 moveto
210 95 lineto
236 71 267 60 306 60  curveto
407 60 458 127 458 262  curveto
458 306 451 347 437 384  curveto
closepath
177 145 moveto
403 433 lineto
377 457 345 469 308 469  curveto
207 469 156 402 156 267  curveto
156 219 163 179 177 145  curveto
closepath
fill
		} def

	/oe
		{
478 84 moveto
435 20 377 -12 302 -12  curveto
227 -12 166 13 121 63  curveto
76 113 54 181 54 265  curveto
54 349 76 416 121 466  curveto
166 516 227 541 303 541  curveto
374 541 431 509 475 444  curveto
515 509 574 541 653 541  curveto
721 541 772 517 806 468  curveto
840 420 857 347 857 250  curveto
528 250 lineto
533 186 550 138 580 107  curveto
610 75 652 60 707 60  curveto
752 60 802 71 857 94  curveto
857 18 lineto
794 -2 737 -12 686 -12  curveto
595 -12 525 20 478 84  curveto
closepath
302 60 moveto
344 60 376 76 398 110  curveto
419 144 430 195 430 263  curveto
430 331 420 383 399 417  curveto
378 452 346 469 304 469  curveto
258 469 221 451 195 415  curveto
169 379 156 329 156 265  curveto
156 201 169 151 195 114  curveto
221 78 256 60 302 60  curveto
closepath
532 316 moveto
754 316 lineto
754 367 746 405 728 431  curveto
711 457 685 470 650 470  curveto
614 470 587 457 567 431  curveto
547 405 536 367 532 316  curveto
closepath
fill
		} def

	/germandbls
		{
96 0 moveto
96 562 lineto
96 642 109 699 137 733  curveto
164 766 211 783 276 783  curveto
329 783 372 771 404 747  curveto
437 724 453 693 453 654  curveto
453 614 431 566 389 510  curveto
364 477 351 454 351 440  curveto
351 421 369 396 405 365  curveto
483 299 lineto
540 251 568 200 568 145  curveto
568 97 553 58 522 30  curveto
491 1 450 -12 397 -12  curveto
352 -12 306 -2 260 16  curveto
260 98 lineto
320 72 366 60 398 60  curveto
422 60 441 67 456 81  curveto
470 95 477 113 477 137  curveto
477 165 458 195 421 227  curveto
328 307 lineto
287 342 267 377 267 414  curveto
267 441 283 480 315 530  curveto
342 571 356 607 356 636  curveto
356 661 349 680 335 692  curveto
321 704 301 710 273 710  curveto
246 710 226 701 212 683  curveto
199 665 192 638 192 602  curveto
192 0 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/ESSTIXFive-Bold exch definefont pop
/ESSTIXFive-Bold findfont 15.0 scalefont setfont
(K) show
Q
Q
38.0 315.0 moveto
q 1 -1 scale
/Helvetica-Bold findfont 15.0 scalefont setfont
(100) show
Q
5.0 5.0 translate
Q
q
1 67 263 OPL
61 263
-5.0 -5.0 translate
q
35 259 9 16 rc
35.0 272.0 moveto
q 1 -1 scale
/ESSTIXFive-Bold findfont 15.0 scalefont setfont
(K) show
Q
Q
46.0 272.0 moveto
q 1 -1 scale
/Helvetica-Bold findfont 15.0 scalefont setfont
(80) show
Q
5.0 5.0 translate
Q
q
1 67 220 OPL
61 220
-5.0 -5.0 translate
q
35 217 9 16 rc
35.0 230.0 moveto
q 1 -1 scale
/ESSTIXFive-Bold findfont 15.0 scalefont setfont
(K) show
Q
Q
46.0 230.0 moveto
q 1 -1 scale
/Helvetica-Bold findfont 15.0 scalefont setfont
(60) show
Q
5.0 5.0 translate
Q
q
1 67 178 OPL
61 178
-5.0 -5.0 translate
q
35 174 9 16 rc
35.0 187.0 moveto
q 1 -1 scale
/ESSTIXFive-Bold findfont 15.0 scalefont setfont
(K) show
Q
Q
46.0 187.0 moveto
q 1 -1 scale
/Helvetica-Bold findfont 15.0 scalefont setfont
(40) show
Q
5.0 5.0 translate
Q
q
1 67 135 OPL
61 135
-5.0 -5.0 translate
q
35 132 9 16 rc
35.0 145.0 moveto
q 1 -1 scale
/ESSTIXFive-Bold findfont 15.0 scalefont setfont
(K) show
Q
Q
46.0 145.0 moveto
q 1 -1 scale
/Helvetica-Bold findfont 15.0 scalefont setfont
(20) show
Q
5.0 5.0 translate
Q
q
1 67 93 OPL
61 93
-5.0 -5.0 translate
54.0 102.0 moveto
q 1 -1 scale
/Helvetica-Bold findfont 15.0 scalefont setfont
(0) show
Q
5.0 5.0 translate
Q
q
1 67 50 OPL
61 50
-5.0 -5.0 translate
46.0 60.0 moveto
q 1 -1 scale
/Helvetica-Bold findfont 15.0 scalefont setfont
(20) show
Q
5.0 5.0 translate
Q
q
1 67 8 OPL
61 8
-5.0 -5.0 translate
46.0 18.0 moveto
q 1 -1 scale
/Helvetica-Bold findfont 15.0 scalefont setfont
(40) show
Q
5.0 5.0 translate
Q
Q
Q
Q
0 0 476 355 rc
0.0 0.0 translate
0.0 0.0 translate
1.0 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
